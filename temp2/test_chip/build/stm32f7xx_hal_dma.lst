ARM GAS  /tmp/ccledx0D.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_dma.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.DMA_SetConfig,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	DMA_SetConfig:
  24              	.LFB150:
  25              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @file    stm32f7xx_hal_dma.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *    
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          This file provides firmware functions to manage the following 
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          functionalities of the Direct Memory Access (DMA) peripheral:
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + IO operation functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Peripheral State and errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @verbatim     
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ==============================================================================
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   [..]
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Stream
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        necessary) please refer to Reference manual for connection between peripherals
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        and DMA requests.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) For a given Stream, program the required configuration through the following parameters:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Transfer Direction, Source and Destination data formats, 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Circular, Normal or peripheral flow control mode, Stream Priority level, 
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    -@-   Prior to HAL_DMA_Init() the clock must be enabled for DMA through the following macros:
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          __HAL_RCC_DMA1_CLK_ENABLE() or __HAL_RCC_DMA2_CLK_ENABLE().
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Polling mode IO operation ***
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =================================
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
ARM GAS  /tmp/ccledx0D.s 			page 2


  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               address and destination address and the Length of data to be transferred.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Abort() function to abort the current transfer.
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      ===================================
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ()
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Select Callbacks functions using HAL_DMA_RegisterCallback()
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred. In t
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case the DMA interrupt is configured 
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               XferErrorCallback (i.e a member of DMA handle structure).
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of 
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          detection.
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_Abort_IT() function to abort the current transfer
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            Half-Word data size for the peripheral to access its data register and set Word data siz
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            for the Memory to gain in access time. Each two half words will be packed and written in
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            a single access to a Word in the Memory).
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination. In this case the Peripheral Data Size will be applied to both Source
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination.
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =============================================
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..]
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..]
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @endverbatim
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @attention
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * Redistribution and use in source and binary forms, with or without modification,
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * are permitted provided that the following conditions are met:
ARM GAS  /tmp/ccledx0D.s 			page 3


  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      this list of conditions and the following disclaimer.
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      this list of conditions and the following disclaimer in the documentation
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      and/or other materials provided with the distribution.
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      may be used to endorse or promote products derived from this software
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      without specific prior written permission.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */ 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #include "stm32f7xx_hal.h"
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup STM32F7xx_HAL_Driver
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @defgroup DMA DMA
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief DMA HAL module driver
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private types -------------------------------------------------------------*/
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** typedef struct
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t ISR;   /*!< DMA interrupt status register */
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t Reserved0;
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t IFCR;  /*!< DMA interrupt flag clear register */
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** } DMA_Base_Registers;
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private constants ---------------------------------------------------------*/
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Constants
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  * @{
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  */
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  #define HAL_TIMEOUT_DMA_ABORT    ((uint32_t)5)  /* 5 ms */
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private macros ------------------------------------------------------------*/
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private functions ---------------------------------------------------------*/
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
ARM GAS  /tmp/ccledx0D.s 			page 4


 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma);
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma);
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */  
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group1
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Stream source
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     reference manual.
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and create the associated handle.
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = 0U;
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
ARM GAS  /tmp/ccledx0D.s 			page 5


 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the memory burst, peripheral burst and FIFO threshold parameters only
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      when FIFO mode is enabled */
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Allocate lock resource */
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Change DMA peripheral state */
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the peripheral */
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check if the DMA Stream is effectively disabled */
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout */
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_TIMEOUT;
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_TIMEOUT;
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the CR register value */
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->CR;
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream configuration */
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
ARM GAS  /tmp/ccledx0D.s 			page 6


 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get memory burst and peripheral burst */
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream CR register */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR = tmp;  
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the FCR register value */
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->FCR;
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear Direct mode and FIFO threshold bits */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream FIFO configuration */
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |= hdma->Init.FIFOMode;
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* The FIFO threshold is not used when the FIFO mode is disabled */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the FIFO threshold */
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |= hdma->Init.FIFOThreshold;
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check compatibility between FIFO threshold level and size of the memory burst */
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* for INCR4, INCR8, INCR16 bursts */
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (DMA_CheckFifoParam(hdma) != HAL_OK)
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_ERROR; 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream FCR */
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR = tmp;
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags */
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the error code */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                                                                                      
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the DMA state */
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
ARM GAS  /tmp/ccledx0D.s 			page 7


 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  DeInitializes the DMA peripheral 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State == HAL_DMA_STATE_BUSY)
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_BUSY;
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the selected DMA Streamx */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx control register */
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR   = 0U;
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx number of data to transfer register */
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = 0U;
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx peripheral address register */
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->PAR  = 0U;
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 0 address register */
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M0AR = 0U;
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 1 address register */
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M1AR = 0U;
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx FIFO control register */
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR  = (uint32_t)0x00000021U;
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get DMA steam Base Address */  
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags at correct offset within the register */
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clean all callbacks */
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferCpltCallback = NULL;
ARM GAS  /tmp/ccledx0D.s 			page 8


 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1CpltCallback = NULL;
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1HalfCpltCallback = NULL;
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;  
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset the error code */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset the DMA state */
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group2
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim   
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       #####  IO operation functions  #####
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and 
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           Start DMA transfer with interrupt
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Abort DMA transfer
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Poll for transfer complete
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Handle DMA interrupt request  
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Starts the DMA Transfer.
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
ARM GAS  /tmp/ccledx0D.s 			page 9


 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.  
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
ARM GAS  /tmp/ccledx0D.s 			page 10


 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable Common interrupts*/
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  |= DMA_IT_HT;
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);	  
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer.
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                   
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        effectively disabled is added. If a Stream is disabled 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        this single data is finished.  
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccledx0D.s 			page 11


 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable all the transfer interrupts */
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_HT);
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check if the DMA Stream is effectively disabled */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Check for the Timeout */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_TIMEOUT;
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change the DMA state*/
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
ARM GAS  /tmp/ccledx0D.s 			page 12


 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Set Abort State  */
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_ABORT;
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma          pointer to a DMA_HandleTypeDef structure that contains
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                        the configuration information for the specified DMA Stream.
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CompleteLevel Specifies the DMA level complete.
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The polling mode is kept in this version for legacy. it is recommanded to use the IT mo
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         This model could be used for debug purpose.
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The HAL_DMA_PollForTransfer API cannot be used in circular and double buffering mode (a
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  Timeout       Timeout duration.
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t mask_cpltlevel;
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick(); 
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* No transfer ongoing */
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Polling mode not supported in circular mode and double buffering mode */
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != RESET)
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Transfer Complete flag */
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
ARM GAS  /tmp/ccledx0D.s 			page 13


 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Half Transfer Complete flag */
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout (Not applicable in circular mode)*/
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the ISR register value */
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmpisr = regs->ISR;
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the Direct Mode error flag */
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
ARM GAS  /tmp/ccledx0D.s 			page 14


 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       HAL_DMA_Abort(hdma);
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer and transfer complete flags */
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_ERROR;
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    }
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer flag */
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4) << hdma->StreamIndex;
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Handles DMA interrupt request.
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval None
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t count = 0;
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600;
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
ARM GAS  /tmp/ccledx0D.s 			page 15


 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Error Interrupt management ***************************************/
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer error interrupt */
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_TE);
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* FIFO Error Interrupt management ******************************************/
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Direct Mode Error Interrupt management ***********************************/
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the direct mode error flag */
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Multi_Buffering mode enabled */
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferHalfCpltCallback != NULL)
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
ARM GAS  /tmp/ccledx0D.s 			page 16


 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferHalfCpltCallback(hdma);
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1HalfCpltCallback != NULL)
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1HalfCpltCallback(hdma);
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the half transfer interrupt */
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferHalfCpltCallback != NULL)
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Half transfer callback */
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferHalfCpltCallback(hdma);
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer complete flag */
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(HAL_DMA_STATE_ABORT == hdma->State)
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable all the transfer interrupts */
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Clear all interrupt flags at correct offset within the register */
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         regs->IFCR = 0x3FU << hdma->StreamIndex;
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
ARM GAS  /tmp/ccledx0D.s 			page 17


 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferAbortCallback != NULL)
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferAbortCallback(hdma);
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return;
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1CpltCallback != NULL)
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory1 */
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1CpltCallback(hdma);
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferCpltCallback != NULL)
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory0 */
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferCpltCallback(hdma);
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the transfer complete interrupt */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_TC);
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Process Unlocked */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           __HAL_UNLOCK(hdma);
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Change the DMA state */
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->State = HAL_DMA_STATE_READY;
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferCpltCallback != NULL)
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Transfer complete callback */
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferCpltCallback(hdma);
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* manage error case */
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
ARM GAS  /tmp/ccledx0D.s 			page 18


 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_ABORT;
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the stream */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_DMA_DISABLE(hdma);
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       do
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if (++count > timeout)
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           break;
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Transfer error callback */
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Register callbacks
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  pCallback            pointer to private callbacsk function which has pointer to 
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */                      
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
ARM GAS  /tmp/ccledx0D.s 			page 19


1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = pCallback;
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = pCallback;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status =  HAL_ERROR;
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  UnRegister callbacks
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */              
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
ARM GAS  /tmp/ccledx0D.s 			page 20


1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_ERROR;
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group3
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                     ##### State and Errors functions #####
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
ARM GAS  /tmp/ccledx0D.s 			page 21


1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This subsection provides functions allowing to
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Check the DMA state
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Get error code
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA state.
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL state
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->State;
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Return the DMA error code
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *              the configuration information for the specified DMA Stream.
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval DMA Error Code
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->ErrorCode;
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
  26              		.loc 1 1169 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccledx0D.s 			page 22


  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 30B4     		push	{r4, r5}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 5, -4
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear DBM bit */
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
  37              		.loc 1 1171 0
  38 0002 0568     		ldr	r5, [r0]
  39 0004 2C68     		ldr	r4, [r5]
  40 0006 24F48024 		bic	r4, r4, #262144
  41 000a 2C60     		str	r4, [r5]
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Configure DMA Stream data length */
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = DataLength;
  42              		.loc 1 1174 0
  43 000c 0468     		ldr	r4, [r0]
  44 000e 6360     		str	r3, [r4, #4]
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory to Peripheral */
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
  45              		.loc 1 1177 0
  46 0010 8368     		ldr	r3, [r0, #8]
  47              	.LVL1:
  48 0012 402B     		cmp	r3, #64
  49 0014 05D0     		beq	.L5
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = DstAddress;
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = SrcAddress;
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Peripheral to Memory */
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = SrcAddress;
  50              		.loc 1 1189 0
  51 0016 0368     		ldr	r3, [r0]
  52 0018 9960     		str	r1, [r3, #8]
  53              	.LVL2:
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = DstAddress;
  54              		.loc 1 1192 0
  55 001a 0368     		ldr	r3, [r0]
  56 001c DA60     		str	r2, [r3, #12]
  57              	.L1:
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
  58              		.loc 1 1194 0
  59 001e 30BC     		pop	{r4, r5}
  60              	.LCFI1:
  61              		.cfi_remember_state
ARM GAS  /tmp/ccledx0D.s 			page 23


  62              		.cfi_restore 5
  63              		.cfi_restore 4
  64              		.cfi_def_cfa_offset 0
  65 0020 7047     		bx	lr
  66              	.LVL3:
  67              	.L5:
  68              	.LCFI2:
  69              		.cfi_restore_state
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  70              		.loc 1 1180 0
  71 0022 0368     		ldr	r3, [r0]
  72 0024 9A60     		str	r2, [r3, #8]
  73              	.LVL4:
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
  74              		.loc 1 1183 0
  75 0026 0368     		ldr	r3, [r0]
  76 0028 D960     		str	r1, [r3, #12]
  77 002a F8E7     		b	.L1
  78              		.cfi_endproc
  79              	.LFE150:
  81              		.section	.text.DMA_CalcBaseAndBitshift,"ax",%progbits
  82              		.align	1
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv5-d16
  88              	DMA_CalcBaseAndBitshift:
  89              	.LFB151:
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA Stream base address depending on stream number
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval Stream base address
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
  90              		.loc 1 1203 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.LVL5:
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
  96              		.loc 1 1204 0
  97 0000 0268     		ldr	r2, [r0]
  98 0002 D3B2     		uxtb	r3, r2
  99 0004 103B     		subs	r3, r3, #16
 100 0006 0949     		ldr	r1, .L10
 101 0008 A1FB0313 		umull	r1, r3, r1, r3
 102 000c 1B09     		lsrs	r3, r3, #4
 103              	.LVL6:
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* lookup table for necessary bitshift of flags within status registers */
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->StreamIndex = flagBitshiftOffset[stream_number];
 104              		.loc 1 1208 0
ARM GAS  /tmp/ccledx0D.s 			page 24


 105 000e 0849     		ldr	r1, .L10+4
 106 0010 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 107 0012 C165     		str	r1, [r0, #92]
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if (stream_number > 3U)
 108              		.loc 1 1210 0
 109 0014 032B     		cmp	r3, #3
 110 0016 04D8     		bhi	.L9
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to HISR and HIFCR */
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to LISR and LIFCR */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 111              		.loc 1 1218 0
 112 0018 064B     		ldr	r3, .L10+8
 113              	.LVL7:
 114 001a 1340     		ands	r3, r3, r2
 115 001c 8365     		str	r3, [r0, #88]
 116              	.L8:
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->StreamBaseAddress;
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 117              		.loc 1 1222 0
 118 001e 806D     		ldr	r0, [r0, #88]
 119              	.LVL8:
 120 0020 7047     		bx	lr
 121              	.LVL9:
 122              	.L9:
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 123              		.loc 1 1213 0
 124 0022 044B     		ldr	r3, .L10+8
 125              	.LVL10:
 126 0024 1340     		ands	r3, r3, r2
 127 0026 0433     		adds	r3, r3, #4
 128 0028 8365     		str	r3, [r0, #88]
 129 002a F8E7     		b	.L8
 130              	.L11:
 131              		.align	2
 132              	.L10:
 133 002c ABAAAAAA 		.word	-1431655765
 134 0030 00000000 		.word	.LANCHOR0
 135 0034 00FCFFFF 		.word	-1024
 136              		.cfi_endproc
 137              	.LFE151:
 139              		.section	.text.DMA_CheckFifoParam,"ax",%progbits
 140              		.align	1
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv5-d16
 146              	DMA_CheckFifoParam:
 147              	.LFB152:
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccledx0D.s 			page 25


1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Check compatibility between FIFO threshold level and size of the memory burst
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 148              		.loc 1 1231 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153              	.LVL11:
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 154              		.loc 1 1233 0
 155 0000 836A     		ldr	r3, [r0, #40]
 156              	.LVL12:
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Byte */
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 157              		.loc 1 1236 0
 158 0002 8269     		ldr	r2, [r0, #24]
 159 0004 92B9     		cbnz	r2, .L13
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 160              		.loc 1 1238 0
 161 0006 012B     		cmp	r3, #1
 162 0008 0AD0     		beq	.L15
 163 000a 1BB1     		cbz	r3, .L16
 164 000c 022B     		cmp	r3, #2
 165 000e 01D0     		beq	.L16
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 166              		.loc 1 1232 0
 167 0010 0020     		movs	r0, #0
 168              	.LVL13:
 169 0012 7047     		bx	lr
 170              	.LVL14:
 171              	.L16:
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 172              		.loc 1 1242 0
 173 0014 C36A     		ldr	r3, [r0, #44]
 174              	.LVL15:
 175 0016 13F0807F 		tst	r3, #16777216
 176 001a 2CD1     		bne	.L25
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 177              		.loc 1 1232 0
 178 001c 0020     		movs	r0, #0
 179              	.LVL16:
 180 001e 7047     		bx	lr
 181              	.LVL17:
 182              	.L15:
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
ARM GAS  /tmp/ccledx0D.s 			page 26


1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 183              		.loc 1 1248 0
 184 0020 C36A     		ldr	r3, [r0, #44]
 185              	.LVL18:
 186 0022 B3F1C07F 		cmp	r3, #25165824
 187 0026 28D0     		beq	.L26
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 188              		.loc 1 1232 0
 189 0028 0020     		movs	r0, #0
 190              	.LVL19:
 191 002a 7047     		bx	lr
 192              	.LVL20:
 193              	.L13:
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Half-Word */
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 194              		.loc 1 1261 0
 195 002c B2F5005F 		cmp	r2, #8192
 196 0030 05D0     		beq	.L33
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;   
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
ARM GAS  /tmp/ccledx0D.s 			page 27


1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Word */
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 197              		.loc 1 1289 0
 198 0032 022B     		cmp	r3, #2
 199 0034 29D9     		bls	.L30
 200 0036 032B     		cmp	r3, #3
 201 0038 15D0     		beq	.L23
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 202              		.loc 1 1232 0
 203 003a 0020     		movs	r0, #0
 204              	.LVL21:
 205 003c 7047     		bx	lr
 206              	.LVL22:
 207              	.L33:
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 208              		.loc 1 1263 0
 209 003e 032B     		cmp	r3, #3
 210 0040 03D8     		bhi	.L18
 211 0042 DFE803F0 		tbb	[pc, r3]
 212              	.L19:
 213 0046 1C       		.byte	(.L27-.L19)/2
 214 0047 04       		.byte	(.L20-.L19)/2
 215 0048 1C       		.byte	(.L27-.L19)/2
 216 0049 0A       		.byte	(.L21-.L19)/2
 217              		.p2align 1
 218              	.L18:
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 219              		.loc 1 1232 0
 220 004a 0020     		movs	r0, #0
 221              	.LVL23:
 222 004c 7047     		bx	lr
 223              	.LVL24:
 224              	.L20:
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 225              		.loc 1 1270 0
 226 004e C36A     		ldr	r3, [r0, #44]
 227              	.LVL25:
 228 0050 13F0807F 		tst	r3, #16777216
 229 0054 15D1     		bne	.L28
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 230              		.loc 1 1232 0
 231 0056 0020     		movs	r0, #0
 232              	.LVL26:
 233 0058 7047     		bx	lr
 234              	.LVL27:
 235              	.L21:
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 236              		.loc 1 1276 0
 237 005a C36A     		ldr	r3, [r0, #44]
 238              	.LVL28:
 239 005c B3F1C07F 		cmp	r3, #25165824
 240 0060 11D0     		beq	.L29
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 241              		.loc 1 1232 0
 242 0062 0020     		movs	r0, #0
ARM GAS  /tmp/ccledx0D.s 			page 28


 243              	.LVL29:
 244 0064 7047     		bx	lr
 245              	.LVL30:
 246              	.L23:
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 247              		.loc 1 1297 0
 248 0066 C36A     		ldr	r3, [r0, #44]
 249              	.LVL31:
 250 0068 13F0807F 		tst	r3, #16777216
 251 006c 01D0     		beq	.L34
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 252              		.loc 1 1299 0
 253 006e 0120     		movs	r0, #1
 254              	.LVL32:
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 255              		.loc 1 1308 0
 256 0070 7047     		bx	lr
 257              	.LVL33:
 258              	.L34:
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 259              		.loc 1 1232 0
 260 0072 0020     		movs	r0, #0
 261              	.LVL34:
 262 0074 7047     		bx	lr
 263              	.LVL35:
 264              	.L25:
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 265              		.loc 1 1244 0
 266 0076 0120     		movs	r0, #1
 267              	.LVL36:
 268 0078 7047     		bx	lr
 269              	.LVL37:
 270              	.L26:
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 271              		.loc 1 1250 0
 272 007a 0120     		movs	r0, #1
 273              	.LVL38:
 274 007c 7047     		bx	lr
 275              	.LVL39:
 276              	.L27:
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
ARM GAS  /tmp/ccledx0D.s 			page 29


 277              		.loc 1 1267 0
 278 007e 0120     		movs	r0, #1
 279              	.LVL40:
 280 0080 7047     		bx	lr
 281              	.LVL41:
 282              	.L28:
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 283              		.loc 1 1272 0
 284 0082 0120     		movs	r0, #1
 285              	.LVL42:
 286 0084 7047     		bx	lr
 287              	.LVL43:
 288              	.L29:
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 289              		.loc 1 1278 0
 290 0086 0120     		movs	r0, #1
 291              	.LVL44:
 292 0088 7047     		bx	lr
 293              	.LVL45:
 294              	.L30:
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 295              		.loc 1 1294 0
 296 008a 0120     		movs	r0, #1
 297              	.LVL46:
 298 008c 7047     		bx	lr
 299              		.cfi_endproc
 300              	.LFE152:
 302              		.section	.text.HAL_DMA_Init,"ax",%progbits
 303              		.align	1
 304              		.global	HAL_DMA_Init
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv5-d16
 310              	HAL_DMA_Init:
 311              	.LFB138:
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = 0U;
 312              		.loc 1 189 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              	.LVL47:
 317 0000 70B5     		push	{r4, r5, r6, lr}
 318              	.LCFI3:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 4, -16
 321              		.cfi_offset 5, -12
 322              		.cfi_offset 6, -8
 323              		.cfi_offset 14, -4
 324 0002 0446     		mov	r4, r0
 325              	.LVL48:
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 326              		.loc 1 191 0
 327 0004 FFF7FEFF 		bl	HAL_GetTick
 328              	.LVL49:
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 329              		.loc 1 195 0
ARM GAS  /tmp/ccledx0D.s 			page 30


 330 0008 002C     		cmp	r4, #0
 331 000a 5BD0     		beq	.L41
 332 000c 0546     		mov	r5, r0
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 333              		.loc 1 221 0
 334 000e 0023     		movs	r3, #0
 335 0010 84F83430 		strb	r3, [r4, #52]
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 336              		.loc 1 224 0
 337 0014 0223     		movs	r3, #2
 338 0016 84F83530 		strb	r3, [r4, #53]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 339              		.loc 1 227 0
 340 001a 2268     		ldr	r2, [r4]
 341 001c 1368     		ldr	r3, [r2]
 342 001e 23F00103 		bic	r3, r3, #1
 343 0022 1360     		str	r3, [r2]
 344              	.LVL50:
 345              	.L37:
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 346              		.loc 1 230 0
 347 0024 2368     		ldr	r3, [r4]
 348 0026 1A68     		ldr	r2, [r3]
 349 0028 12F0010F 		tst	r2, #1
 350 002c 0AD0     		beq	.L43
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 351              		.loc 1 233 0
 352 002e FFF7FEFF 		bl	HAL_GetTick
 353              	.LVL51:
 354 0032 401B     		subs	r0, r0, r5
 355 0034 0528     		cmp	r0, #5
 356 0036 F5D9     		bls	.L37
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 357              		.loc 1 236 0
 358 0038 2023     		movs	r3, #32
 359 003a 6365     		str	r3, [r4, #84]
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 360              		.loc 1 239 0
 361 003c 0320     		movs	r0, #3
 362 003e 84F83500 		strb	r0, [r4, #53]
 363              	.LVL52:
 364              	.L36:
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 365              		.loc 1 319 0
 366 0042 70BD     		pop	{r4, r5, r6, pc}
 367              	.LVL53:
 368              	.L43:
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 369              		.loc 1 246 0
 370 0044 1A68     		ldr	r2, [r3]
 371              	.LVL54:
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 372              		.loc 1 249 0
 373 0046 2048     		ldr	r0, .L46
 374 0048 1040     		ands	r0, r0, r2
 375              	.LVL55:
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
ARM GAS  /tmp/ccledx0D.s 			page 31


 376              		.loc 1 255 0
 377 004a 6168     		ldr	r1, [r4, #4]
 378 004c A268     		ldr	r2, [r4, #8]
 379 004e 0A43     		orrs	r2, r2, r1
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 380              		.loc 1 256 0
 381 0050 E168     		ldr	r1, [r4, #12]
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 382              		.loc 1 255 0
 383 0052 0A43     		orrs	r2, r2, r1
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 384              		.loc 1 256 0
 385 0054 2169     		ldr	r1, [r4, #16]
 386 0056 0A43     		orrs	r2, r2, r1
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 387              		.loc 1 257 0
 388 0058 6169     		ldr	r1, [r4, #20]
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 389              		.loc 1 256 0
 390 005a 0A43     		orrs	r2, r2, r1
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 391              		.loc 1 257 0
 392 005c A169     		ldr	r1, [r4, #24]
 393 005e 0A43     		orrs	r2, r2, r1
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 394              		.loc 1 258 0
 395 0060 E169     		ldr	r1, [r4, #28]
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 396              		.loc 1 257 0
 397 0062 0A43     		orrs	r2, r2, r1
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 398              		.loc 1 258 0
 399 0064 216A     		ldr	r1, [r4, #32]
 400 0066 0A43     		orrs	r2, r2, r1
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 401              		.loc 1 255 0
 402 0068 0243     		orrs	r2, r2, r0
 403              	.LVL56:
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 404              		.loc 1 261 0
 405 006a 616A     		ldr	r1, [r4, #36]
 406 006c 0429     		cmp	r1, #4
 407 006e 1ED0     		beq	.L44
 408              	.L39:
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 409              		.loc 1 268 0
 410 0070 1A60     		str	r2, [r3]
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 411              		.loc 1 271 0
 412 0072 2668     		ldr	r6, [r4]
 413 0074 7569     		ldr	r5, [r6, #20]
 414              	.LVL57:
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 415              		.loc 1 274 0
 416 0076 25F00705 		bic	r5, r5, #7
 417              	.LVL58:
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccledx0D.s 			page 32


 418              		.loc 1 277 0
 419 007a 636A     		ldr	r3, [r4, #36]
 420 007c 1D43     		orrs	r5, r5, r3
 421              	.LVL59:
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 422              		.loc 1 280 0
 423 007e 042B     		cmp	r3, #4
 424 0080 07D1     		bne	.L40
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 425              		.loc 1 283 0
 426 0082 A36A     		ldr	r3, [r4, #40]
 427 0084 1D43     		orrs	r5, r5, r3
 428              	.LVL60:
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 429              		.loc 1 287 0
 430 0086 E36A     		ldr	r3, [r4, #44]
 431 0088 1BB1     		cbz	r3, .L40
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 432              		.loc 1 289 0
 433 008a 2046     		mov	r0, r4
 434 008c FFF7FEFF 		bl	DMA_CheckFifoParam
 435              	.LVL61:
 436 0090 90B9     		cbnz	r0, .L45
 437              	.L40:
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 438              		.loc 1 303 0
 439 0092 7561     		str	r5, [r6, #20]
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 440              		.loc 1 307 0
 441 0094 2046     		mov	r0, r4
 442 0096 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 443              	.LVL62:
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 444              		.loc 1 310 0
 445 009a E26D     		ldr	r2, [r4, #92]
 446 009c 3F23     		movs	r3, #63
 447 009e 9340     		lsls	r3, r3, r2
 448 00a0 8360     		str	r3, [r0, #8]
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                                                                                      
 449              		.loc 1 313 0
 450 00a2 0020     		movs	r0, #0
 451              	.LVL63:
 452 00a4 6065     		str	r0, [r4, #84]
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 453              		.loc 1 316 0
 454 00a6 0123     		movs	r3, #1
 455 00a8 84F83530 		strb	r3, [r4, #53]
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 456              		.loc 1 318 0
 457 00ac C9E7     		b	.L36
 458              	.LVL64:
 459              	.L44:
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 460              		.loc 1 264 0
 461 00ae E16A     		ldr	r1, [r4, #44]
 462 00b0 206B     		ldr	r0, [r4, #48]
 463 00b2 0143     		orrs	r1, r1, r0
ARM GAS  /tmp/ccledx0D.s 			page 33


 464 00b4 0A43     		orrs	r2, r2, r1
 465              	.LVL65:
 466 00b6 DBE7     		b	.L39
 467              	.LVL66:
 468              	.L45:
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 469              		.loc 1 292 0
 470 00b8 4023     		movs	r3, #64
 471 00ba 6365     		str	r3, [r4, #84]
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 472              		.loc 1 295 0
 473 00bc 0120     		movs	r0, #1
 474 00be 84F83500 		strb	r0, [r4, #53]
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 475              		.loc 1 297 0
 476 00c2 BEE7     		b	.L36
 477              	.LVL67:
 478              	.L41:
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 479              		.loc 1 197 0
 480 00c4 0120     		movs	r0, #1
 481              	.LVL68:
 482 00c6 BCE7     		b	.L36
 483              	.L47:
 484              		.align	2
 485              	.L46:
 486 00c8 3F8010E0 		.word	-535789505
 487              		.cfi_endproc
 488              	.LFE138:
 490              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 491              		.align	1
 492              		.global	HAL_DMA_DeInit
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 496              		.fpu fpv5-d16
 498              	HAL_DMA_DeInit:
 499              	.LFB139:
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 500              		.loc 1 328 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              	.LVL69:
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 505              		.loc 1 332 0
 506 0000 0028     		cmp	r0, #0
 507 0002 2CD0     		beq	.L50
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 508              		.loc 1 328 0
 509 0004 38B5     		push	{r3, r4, r5, lr}
 510              	.LCFI4:
 511              		.cfi_def_cfa_offset 16
 512              		.cfi_offset 3, -16
 513              		.cfi_offset 4, -12
 514              		.cfi_offset 5, -8
 515              		.cfi_offset 14, -4
ARM GAS  /tmp/ccledx0D.s 			page 34


 516 0006 0446     		mov	r4, r0
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 517              		.loc 1 338 0
 518 0008 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 519 000c DBB2     		uxtb	r3, r3
 520 000e 022B     		cmp	r3, #2
 521 0010 27D0     		beq	.L51
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 522              		.loc 1 348 0
 523 0012 0268     		ldr	r2, [r0]
 524 0014 1368     		ldr	r3, [r2]
 525 0016 23F00103 		bic	r3, r3, #1
 526 001a 1360     		str	r3, [r2]
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 527              		.loc 1 351 0
 528 001c 0368     		ldr	r3, [r0]
 529 001e 0025     		movs	r5, #0
 530 0020 1D60     		str	r5, [r3]
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 531              		.loc 1 354 0
 532 0022 0368     		ldr	r3, [r0]
 533 0024 5D60     		str	r5, [r3, #4]
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 534              		.loc 1 357 0
 535 0026 0368     		ldr	r3, [r0]
 536 0028 9D60     		str	r5, [r3, #8]
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 537              		.loc 1 360 0
 538 002a 0368     		ldr	r3, [r0]
 539 002c DD60     		str	r5, [r3, #12]
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 540              		.loc 1 363 0
 541 002e 0368     		ldr	r3, [r0]
 542 0030 1D61     		str	r5, [r3, #16]
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 543              		.loc 1 366 0
 544 0032 0368     		ldr	r3, [r0]
 545 0034 2122     		movs	r2, #33
 546 0036 5A61     		str	r2, [r3, #20]
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 547              		.loc 1 369 0
 548 0038 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 549              	.LVL70:
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 550              		.loc 1 372 0
 551 003c E26D     		ldr	r2, [r4, #92]
 552 003e 3F23     		movs	r3, #63
 553 0040 9340     		lsls	r3, r3, r2
 554 0042 8360     		str	r3, [r0, #8]
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 555              		.loc 1 375 0
 556 0044 E563     		str	r5, [r4, #60]
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1CpltCallback = NULL;
 557              		.loc 1 376 0
 558 0046 2564     		str	r5, [r4, #64]
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1HalfCpltCallback = NULL;
 559              		.loc 1 377 0
ARM GAS  /tmp/ccledx0D.s 			page 35


 560 0048 6564     		str	r5, [r4, #68]
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 561              		.loc 1 378 0
 562 004a A564     		str	r5, [r4, #72]
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;  
 563              		.loc 1 379 0
 564 004c E564     		str	r5, [r4, #76]
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 565              		.loc 1 380 0
 566 004e 2565     		str	r5, [r4, #80]
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 567              		.loc 1 383 0
 568 0050 6565     		str	r5, [r4, #84]
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 569              		.loc 1 386 0
 570 0052 84F83550 		strb	r5, [r4, #53]
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 571              		.loc 1 389 0
 572 0056 84F83450 		strb	r5, [r4, #52]
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 573              		.loc 1 391 0
 574 005a 2846     		mov	r0, r5
 575              	.LVL71:
 576              	.L49:
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 577              		.loc 1 392 0
 578 005c 38BD     		pop	{r3, r4, r5, pc}
 579              	.LVL72:
 580              	.L50:
 581              	.LCFI5:
 582              		.cfi_def_cfa_offset 0
 583              		.cfi_restore 3
 584              		.cfi_restore 4
 585              		.cfi_restore 5
 586              		.cfi_restore 14
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 587              		.loc 1 334 0
 588 005e 0120     		movs	r0, #1
 589              	.LVL73:
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 590              		.loc 1 392 0
 591 0060 7047     		bx	lr
 592              	.LVL74:
 593              	.L51:
 594              	.LCFI6:
 595              		.cfi_def_cfa_offset 16
 596              		.cfi_offset 3, -16
 597              		.cfi_offset 4, -12
 598              		.cfi_offset 5, -8
 599              		.cfi_offset 14, -4
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 600              		.loc 1 341 0
 601 0062 0220     		movs	r0, #2
 602              	.LVL75:
 603 0064 FAE7     		b	.L49
 604              		.cfi_endproc
 605              	.LFE139:
ARM GAS  /tmp/ccledx0D.s 			page 36


 607              		.section	.text.HAL_DMA_Start,"ax",%progbits
 608              		.align	1
 609              		.global	HAL_DMA_Start
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 613              		.fpu fpv5-d16
 615              	HAL_DMA_Start:
 616              	.LFB140:
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 617              		.loc 1 426 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              	.LVL76:
 622 0000 38B5     		push	{r3, r4, r5, lr}
 623              	.LCFI7:
 624              		.cfi_def_cfa_offset 16
 625              		.cfi_offset 3, -16
 626              		.cfi_offset 4, -12
 627              		.cfi_offset 5, -8
 628              		.cfi_offset 14, -4
 629              	.LVL77:
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 630              		.loc 1 433 0
 631 0002 90F83440 		ldrb	r4, [r0, #52]	@ zero_extendqisi2
 632 0006 012C     		cmp	r4, #1
 633 0008 1CD0     		beq	.L59
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 634              		.loc 1 433 0 is_stmt 0 discriminator 2
 635 000a 0124     		movs	r4, #1
 636 000c 80F83440 		strb	r4, [r0, #52]
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 637              		.loc 1 435 0 is_stmt 1 discriminator 2
 638 0010 90F83540 		ldrb	r4, [r0, #53]	@ zero_extendqisi2
 639 0014 E4B2     		uxtb	r4, r4
 640 0016 012C     		cmp	r4, #1
 641 0018 04D0     		beq	.L61
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 642              		.loc 1 452 0
 643 001a 0023     		movs	r3, #0
 644              	.LVL78:
 645 001c 80F83430 		strb	r3, [r0, #52]
 646              	.LVL79:
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
 647              		.loc 1 455 0
 648 0020 0220     		movs	r0, #2
 649              	.LVL80:
 650              	.L57:
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 651              		.loc 1 458 0
 652 0022 38BD     		pop	{r3, r4, r5, pc}
 653              	.LVL81:
 654              	.L61:
 655 0024 0546     		mov	r5, r0
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 656              		.loc 1 438 0
ARM GAS  /tmp/ccledx0D.s 			page 37


 657 0026 0220     		movs	r0, #2
 658              	.LVL82:
 659 0028 85F83500 		strb	r0, [r5, #53]
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 660              		.loc 1 441 0
 661 002c 0024     		movs	r4, #0
 662 002e 6C65     		str	r4, [r5, #84]
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 663              		.loc 1 444 0
 664 0030 2846     		mov	r0, r5
 665 0032 FFF7FEFF 		bl	DMA_SetConfig
 666              	.LVL83:
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 667              		.loc 1 447 0
 668 0036 2A68     		ldr	r2, [r5]
 669 0038 1368     		ldr	r3, [r2]
 670 003a 43F00103 		orr	r3, r3, #1
 671 003e 1360     		str	r3, [r2]
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 672              		.loc 1 427 0
 673 0040 2046     		mov	r0, r4
 674 0042 EEE7     		b	.L57
 675              	.LVL84:
 676              	.L59:
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 677              		.loc 1 433 0
 678 0044 0220     		movs	r0, #2
 679              	.LVL85:
 680 0046 ECE7     		b	.L57
 681              		.cfi_endproc
 682              	.LFE140:
 684              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 685              		.align	1
 686              		.global	HAL_DMA_Start_IT
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 690              		.fpu fpv5-d16
 692              	HAL_DMA_Start_IT:
 693              	.LFB141:
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 694              		.loc 1 470 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              	.LVL86:
 699 0000 38B5     		push	{r3, r4, r5, lr}
 700              	.LCFI8:
 701              		.cfi_def_cfa_offset 16
 702              		.cfi_offset 3, -16
 703              		.cfi_offset 4, -12
 704              		.cfi_offset 5, -8
 705              		.cfi_offset 14, -4
 706              	.LVL87:
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 707              		.loc 1 474 0
 708 0002 856D     		ldr	r5, [r0, #88]
ARM GAS  /tmp/ccledx0D.s 			page 38


 709              	.LVL88:
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 710              		.loc 1 480 0
 711 0004 90F83440 		ldrb	r4, [r0, #52]	@ zero_extendqisi2
 712 0008 012C     		cmp	r4, #1
 713 000a 31D0     		beq	.L66
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 714              		.loc 1 480 0 is_stmt 0 discriminator 2
 715 000c 0124     		movs	r4, #1
 716 000e 80F83440 		strb	r4, [r0, #52]
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 717              		.loc 1 482 0 is_stmt 1 discriminator 2
 718 0012 90F83540 		ldrb	r4, [r0, #53]	@ zero_extendqisi2
 719 0016 E4B2     		uxtb	r4, r4
 720 0018 012C     		cmp	r4, #1
 721 001a 04D0     		beq	.L68
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 722              		.loc 1 511 0
 723 001c 0023     		movs	r3, #0
 724              	.LVL89:
 725 001e 80F83430 		strb	r3, [r0, #52]
 726              	.LVL90:
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 727              		.loc 1 514 0
 728 0022 0220     		movs	r0, #2
 729              	.LVL91:
 730              	.L63:
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 731              		.loc 1 518 0
 732 0024 38BD     		pop	{r3, r4, r5, pc}
 733              	.LVL92:
 734              	.L68:
 735 0026 0446     		mov	r4, r0
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 736              		.loc 1 485 0
 737 0028 0220     		movs	r0, #2
 738              	.LVL93:
 739 002a 84F83500 		strb	r0, [r4, #53]
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 740              		.loc 1 488 0
 741 002e 0020     		movs	r0, #0
 742 0030 6065     		str	r0, [r4, #84]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 743              		.loc 1 491 0
 744 0032 2046     		mov	r0, r4
 745 0034 FFF7FEFF 		bl	DMA_SetConfig
 746              	.LVL94:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 747              		.loc 1 494 0
 748 0038 E26D     		ldr	r2, [r4, #92]
 749 003a 3F23     		movs	r3, #63
 750 003c 9340     		lsls	r3, r3, r2
 751 003e AB60     		str	r3, [r5, #8]
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 752              		.loc 1 497 0
 753 0040 2268     		ldr	r2, [r4]
 754 0042 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccledx0D.s 			page 39


 755 0044 43F01603 		orr	r3, r3, #22
 756 0048 1360     		str	r3, [r2]
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 757              		.loc 1 498 0
 758 004a 2268     		ldr	r2, [r4]
 759 004c 5369     		ldr	r3, [r2, #20]
 760 004e 43F08003 		orr	r3, r3, #128
 761 0052 5361     		str	r3, [r2, #20]
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 762              		.loc 1 500 0
 763 0054 236C     		ldr	r3, [r4, #64]
 764 0056 23B1     		cbz	r3, .L65
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 765              		.loc 1 502 0
 766 0058 2268     		ldr	r2, [r4]
 767 005a 1368     		ldr	r3, [r2]
 768 005c 43F00803 		orr	r3, r3, #8
 769 0060 1360     		str	r3, [r2]
 770              	.L65:
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 771              		.loc 1 506 0
 772 0062 2268     		ldr	r2, [r4]
 773 0064 1368     		ldr	r3, [r2]
 774 0066 43F00103 		orr	r3, r3, #1
 775 006a 1360     		str	r3, [r2]
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 776              		.loc 1 471 0
 777 006c 0020     		movs	r0, #0
 778 006e D9E7     		b	.L63
 779              	.LVL95:
 780              	.L66:
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 781              		.loc 1 480 0
 782 0070 0220     		movs	r0, #2
 783              	.LVL96:
 784 0072 D7E7     		b	.L63
 785              		.cfi_endproc
 786              	.LFE141:
 788              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 789              		.align	1
 790              		.global	HAL_DMA_Abort
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu fpv5-d16
 796              	HAL_DMA_Abort:
 797              	.LFB142:
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 798              		.loc 1 533 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              	.LVL97:
 803 0000 70B5     		push	{r4, r5, r6, lr}
 804              	.LCFI9:
 805              		.cfi_def_cfa_offset 16
 806              		.cfi_offset 4, -16
ARM GAS  /tmp/ccledx0D.s 			page 40


 807              		.cfi_offset 5, -12
 808              		.cfi_offset 6, -8
 809              		.cfi_offset 14, -4
 810 0002 0446     		mov	r4, r0
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 811              		.loc 1 535 0
 812 0004 866D     		ldr	r6, [r0, #88]
 813              	.LVL98:
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 814              		.loc 1 537 0
 815 0006 FFF7FEFF 		bl	HAL_GetTick
 816              	.LVL99:
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 817              		.loc 1 539 0
 818 000a 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 819 000e DBB2     		uxtb	r3, r3
 820 0010 022B     		cmp	r3, #2
 821 0012 06D0     		beq	.L70
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 822              		.loc 1 541 0
 823 0014 8023     		movs	r3, #128
 824 0016 6365     		str	r3, [r4, #84]
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 825              		.loc 1 544 0
 826 0018 0023     		movs	r3, #0
 827 001a 84F83430 		strb	r3, [r4, #52]
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 828              		.loc 1 546 0
 829 001e 0120     		movs	r0, #1
 830              	.LVL100:
 831              	.L71:
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 832              		.loc 1 591 0
 833 0020 70BD     		pop	{r4, r5, r6, pc}
 834              	.LVL101:
 835              	.L70:
 836 0022 0546     		mov	r5, r0
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 837              		.loc 1 551 0
 838 0024 2268     		ldr	r2, [r4]
 839 0026 1368     		ldr	r3, [r2]
 840 0028 23F01603 		bic	r3, r3, #22
 841 002c 1360     		str	r3, [r2]
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 842              		.loc 1 552 0
 843 002e 2268     		ldr	r2, [r4]
 844 0030 5369     		ldr	r3, [r2, #20]
 845 0032 23F08003 		bic	r3, r3, #128
 846 0036 5361     		str	r3, [r2, #20]
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 847              		.loc 1 554 0
 848 0038 236C     		ldr	r3, [r4, #64]
 849 003a E3B1     		cbz	r3, .L77
 850              	.L72:
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 851              		.loc 1 556 0
 852 003c 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccledx0D.s 			page 41


 853 003e 1368     		ldr	r3, [r2]
 854 0040 23F00803 		bic	r3, r3, #8
 855 0044 1360     		str	r3, [r2]
 856              	.L73:
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 857              		.loc 1 560 0
 858 0046 2268     		ldr	r2, [r4]
 859 0048 1368     		ldr	r3, [r2]
 860 004a 23F00103 		bic	r3, r3, #1
 861 004e 1360     		str	r3, [r2]
 862              	.LVL102:
 863              	.L74:
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 864              		.loc 1 563 0
 865 0050 2368     		ldr	r3, [r4]
 866 0052 1B68     		ldr	r3, [r3]
 867 0054 13F0010F 		tst	r3, #1
 868 0058 11D0     		beq	.L78
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 869              		.loc 1 566 0
 870 005a FFF7FEFF 		bl	HAL_GetTick
 871              	.LVL103:
 872 005e 401B     		subs	r0, r0, r5
 873 0060 0528     		cmp	r0, #5
 874 0062 F5D9     		bls	.L74
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 875              		.loc 1 569 0
 876 0064 2023     		movs	r3, #32
 877 0066 6365     		str	r3, [r4, #84]
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 878              		.loc 1 572 0
 879 0068 0023     		movs	r3, #0
 880 006a 84F83430 		strb	r3, [r4, #52]
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 881              		.loc 1 575 0
 882 006e 0320     		movs	r0, #3
 883 0070 84F83500 		strb	r0, [r4, #53]
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 884              		.loc 1 577 0
 885 0074 D4E7     		b	.L71
 886              	.LVL104:
 887              	.L77:
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 888              		.loc 1 554 0 discriminator 1
 889 0076 A36C     		ldr	r3, [r4, #72]
 890 0078 002B     		cmp	r3, #0
 891 007a DFD1     		bne	.L72
 892 007c E3E7     		b	.L73
 893              	.LVL105:
 894              	.L78:
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 895              		.loc 1 582 0
 896 007e E26D     		ldr	r2, [r4, #92]
 897 0080 3F23     		movs	r3, #63
 898 0082 9340     		lsls	r3, r3, r2
 899 0084 B360     		str	r3, [r6, #8]
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
ARM GAS  /tmp/ccledx0D.s 			page 42


 900              		.loc 1 585 0
 901 0086 0020     		movs	r0, #0
 902 0088 84F83400 		strb	r0, [r4, #52]
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 903              		.loc 1 588 0
 904 008c 0123     		movs	r3, #1
 905 008e 84F83530 		strb	r3, [r4, #53]
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 906              		.loc 1 590 0
 907 0092 C5E7     		b	.L71
 908              		.cfi_endproc
 909              	.LFE142:
 911              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 912              		.align	1
 913              		.global	HAL_DMA_Abort_IT
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 917              		.fpu fpv5-d16
 919              	HAL_DMA_Abort_IT:
 920              	.LFB143:
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 921              		.loc 1 600 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              		@ link register save eliminated.
 926              	.LVL106:
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 927              		.loc 1 601 0
 928 0000 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 929 0004 DBB2     		uxtb	r3, r3
 930 0006 022B     		cmp	r3, #2
 931 0008 03D0     		beq	.L80
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 932              		.loc 1 603 0
 933 000a 8023     		movs	r3, #128
 934 000c 4365     		str	r3, [r0, #84]
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 935              		.loc 1 604 0
 936 000e 0120     		movs	r0, #1
 937              	.LVL107:
 938 0010 7047     		bx	lr
 939              	.LVL108:
 940              	.L80:
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 941              		.loc 1 609 0
 942 0012 0523     		movs	r3, #5
 943 0014 80F83530 		strb	r3, [r0, #53]
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 944              		.loc 1 612 0
 945 0018 0268     		ldr	r2, [r0]
 946 001a 1368     		ldr	r3, [r2]
 947 001c 23F00103 		bic	r3, r3, #1
 948 0020 1360     		str	r3, [r2]
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 949              		.loc 1 615 0
ARM GAS  /tmp/ccledx0D.s 			page 43


 950 0022 0020     		movs	r0, #0
 951              	.LVL109:
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 952              		.loc 1 616 0
 953 0024 7047     		bx	lr
 954              		.cfi_endproc
 955              	.LFE143:
 957              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 958              		.align	1
 959              		.global	HAL_DMA_PollForTransfer
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu fpv5-d16
 965              	HAL_DMA_PollForTransfer:
 966              	.LFB144:
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 967              		.loc 1 630 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              	.LVL110:
 972 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 973              	.LCFI10:
 974              		.cfi_def_cfa_offset 32
 975              		.cfi_offset 3, -32
 976              		.cfi_offset 4, -28
 977              		.cfi_offset 5, -24
 978              		.cfi_offset 6, -20
 979              		.cfi_offset 7, -16
 980              		.cfi_offset 8, -12
 981              		.cfi_offset 9, -8
 982              		.cfi_offset 14, -4
 983 0004 0446     		mov	r4, r0
 984 0006 8946     		mov	r9, r1
 985 0008 1546     		mov	r5, r2
 986              	.LVL111:
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 987              		.loc 1 633 0
 988 000a FFF7FEFF 		bl	HAL_GetTick
 989              	.LVL112:
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 990              		.loc 1 639 0
 991 000e 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 992 0012 DBB2     		uxtb	r3, r3
 993 0014 022B     		cmp	r3, #2
 994 0016 07D0     		beq	.L83
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 995              		.loc 1 642 0
 996 0018 8023     		movs	r3, #128
 997 001a 6365     		str	r3, [r4, #84]
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 998              		.loc 1 643 0
 999 001c 0023     		movs	r3, #0
 1000 001e 84F83430 		strb	r3, [r4, #52]
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1001              		.loc 1 644 0
ARM GAS  /tmp/ccledx0D.s 			page 44


 1002 0022 0120     		movs	r0, #1
 1003              	.LVL113:
 1004              	.L84:
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1005              		.loc 1 757 0
 1006 0024 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1007              	.LVL114:
 1008              	.L83:
 1009 0028 8046     		mov	r8, r0
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1010              		.loc 1 648 0
 1011 002a 2368     		ldr	r3, [r4]
 1012 002c 1B68     		ldr	r3, [r3]
 1013 002e 13F4807F 		tst	r3, #256
 1014 0032 38D1     		bne	.L99
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1015              		.loc 1 655 0
 1016 0034 B9F1000F 		cmp	r9, #0
 1017 0038 3AD1     		bne	.L86
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1018              		.loc 1 658 0
 1019 003a E36D     		ldr	r3, [r4, #92]
 1020 003c 2027     		movs	r7, #32
 1021 003e 9F40     		lsls	r7, r7, r3
 1022              	.LVL115:
 1023              	.L87:
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 1024              		.loc 1 666 0
 1025 0040 A66D     		ldr	r6, [r4, #88]
 1026              	.LVL116:
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1027              		.loc 1 667 0
 1028 0042 3368     		ldr	r3, [r6]
 1029              	.LVL117:
 1030              	.L88:
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1031              		.loc 1 669 0
 1032 0044 1F42     		tst	r7, r3
 1033 0046 41D1     		bne	.L94
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1034              		.loc 1 669 0 is_stmt 0 discriminator 1
 1035 0048 636D     		ldr	r3, [r4, #84]
 1036              	.LVL118:
 1037 004a 13F0010F 		tst	r3, #1
 1038 004e 3DD1     		bne	.L94
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1039              		.loc 1 672 0 is_stmt 1
 1040 0050 B5F1FF3F 		cmp	r5, #-1
 1041 0054 07D0     		beq	.L89
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1042              		.loc 1 674 0
 1043 0056 002D     		cmp	r5, #0
 1044 0058 2ED0     		beq	.L90
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1045              		.loc 1 674 0 is_stmt 0 discriminator 1
 1046 005a FFF7FEFF 		bl	HAL_GetTick
 1047              	.LVL119:
ARM GAS  /tmp/ccledx0D.s 			page 45


 1048 005e A0EB0800 		sub	r0, r0, r8
 1049 0062 A842     		cmp	r0, r5
 1050 0064 28D8     		bhi	.L90
 1051              	.L89:
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1052              		.loc 1 690 0 is_stmt 1
 1053 0066 3368     		ldr	r3, [r6]
 1054              	.LVL120:
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1055              		.loc 1 692 0
 1056 0068 E16D     		ldr	r1, [r4, #92]
 1057 006a 0822     		movs	r2, #8
 1058 006c 8A40     		lsls	r2, r2, r1
 1059 006e 1A42     		tst	r2, r3
 1060 0070 04D0     		beq	.L91
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1061              		.loc 1 695 0
 1062 0072 616D     		ldr	r1, [r4, #84]
 1063 0074 41F00101 		orr	r1, r1, #1
 1064 0078 6165     		str	r1, [r4, #84]
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1065              		.loc 1 698 0
 1066 007a B260     		str	r2, [r6, #8]
 1067              	.L91:
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1068              		.loc 1 701 0
 1069 007c E16D     		ldr	r1, [r4, #92]
 1070 007e 0122     		movs	r2, #1
 1071 0080 8A40     		lsls	r2, r2, r1
 1072 0082 1A42     		tst	r2, r3
 1073 0084 04D0     		beq	.L92
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1074              		.loc 1 704 0
 1075 0086 616D     		ldr	r1, [r4, #84]
 1076 0088 41F00201 		orr	r1, r1, #2
 1077 008c 6165     		str	r1, [r4, #84]
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1078              		.loc 1 707 0
 1079 008e B260     		str	r2, [r6, #8]
 1080              	.L92:
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1081              		.loc 1 710 0
 1082 0090 E16D     		ldr	r1, [r4, #92]
 1083 0092 0422     		movs	r2, #4
 1084 0094 8A40     		lsls	r2, r2, r1
 1085 0096 1A42     		tst	r2, r3
 1086 0098 D4D0     		beq	.L88
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1087              		.loc 1 713 0
 1088 009a 616D     		ldr	r1, [r4, #84]
 1089 009c 41F00401 		orr	r1, r1, #4
 1090 00a0 6165     		str	r1, [r4, #84]
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1091              		.loc 1 716 0
 1092 00a2 B260     		str	r2, [r6, #8]
 1093 00a4 CEE7     		b	.L88
 1094              	.LVL121:
ARM GAS  /tmp/ccledx0D.s 			page 46


 1095              	.L99:
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 1096              		.loc 1 650 0
 1097 00a6 4FF48073 		mov	r3, #256
 1098 00aa 6365     		str	r3, [r4, #84]
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1099              		.loc 1 651 0
 1100 00ac 0120     		movs	r0, #1
 1101              	.LVL122:
 1102 00ae B9E7     		b	.L84
 1103              	.LVL123:
 1104              	.L86:
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1105              		.loc 1 663 0
 1106 00b0 E36D     		ldr	r3, [r4, #92]
 1107 00b2 1027     		movs	r7, #16
 1108 00b4 9F40     		lsls	r7, r7, r3
 1109              	.LVL124:
 1110 00b6 C3E7     		b	.L87
 1111              	.LVL125:
 1112              	.L90:
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1113              		.loc 1 677 0
 1114 00b8 2023     		movs	r3, #32
 1115 00ba 6365     		str	r3, [r4, #84]
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 1116              		.loc 1 680 0
 1117 00bc 0023     		movs	r3, #0
 1118 00be 84F83430 		strb	r3, [r4, #52]
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 1119              		.loc 1 683 0
 1120 00c2 0123     		movs	r3, #1
 1121 00c4 84F83530 		strb	r3, [r4, #53]
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 1122              		.loc 1 685 0
 1123 00c8 0320     		movs	r0, #3
 1124 00ca ABE7     		b	.L84
 1125              	.L94:
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1126              		.loc 1 720 0
 1127 00cc 636D     		ldr	r3, [r4, #84]
 1128 00ce 1BB1     		cbz	r3, .L96
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1129              		.loc 1 722 0
 1130 00d0 636D     		ldr	r3, [r4, #84]
 1131 00d2 13F0010F 		tst	r3, #1
 1132 00d6 08D1     		bne	.L100
 1133              	.L96:
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1134              		.loc 1 740 0
 1135 00d8 B9F1000F 		cmp	r9, #0
 1136 00dc 13D0     		beq	.L101
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1137              		.loc 1 753 0
 1138 00de E26D     		ldr	r2, [r4, #92]
 1139 00e0 1023     		movs	r3, #16
 1140 00e2 9340     		lsls	r3, r3, r2
ARM GAS  /tmp/ccledx0D.s 			page 47


 1141 00e4 B360     		str	r3, [r6, #8]
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1142              		.loc 1 756 0
 1143 00e6 0020     		movs	r0, #0
 1144 00e8 9CE7     		b	.L84
 1145              	.L100:
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 1146              		.loc 1 724 0
 1147 00ea 2046     		mov	r0, r4
 1148 00ec FFF7FEFF 		bl	HAL_DMA_Abort
 1149              	.LVL126:
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 1150              		.loc 1 727 0
 1151 00f0 E26D     		ldr	r2, [r4, #92]
 1152 00f2 3023     		movs	r3, #48
 1153 00f4 9340     		lsls	r3, r3, r2
 1154 00f6 B360     		str	r3, [r6, #8]
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1155              		.loc 1 730 0
 1156 00f8 0023     		movs	r3, #0
 1157 00fa 84F83430 		strb	r3, [r4, #52]
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1158              		.loc 1 733 0
 1159 00fe 0120     		movs	r0, #1
 1160 0100 84F83500 		strb	r0, [r4, #53]
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    }
 1161              		.loc 1 735 0
 1162 0104 8EE7     		b	.L84
 1163              	.L101:
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 1164              		.loc 1 743 0
 1165 0106 E26D     		ldr	r2, [r4, #92]
 1166 0108 3023     		movs	r3, #48
 1167 010a 9340     		lsls	r3, r3, r2
 1168 010c B360     		str	r3, [r6, #8]
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1169              		.loc 1 746 0
 1170 010e 0020     		movs	r0, #0
 1171 0110 84F83400 		strb	r0, [r4, #52]
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1172              		.loc 1 748 0
 1173 0114 0123     		movs	r3, #1
 1174 0116 84F83530 		strb	r3, [r4, #53]
 1175 011a 83E7     		b	.L84
 1176              		.cfi_endproc
 1177              	.LFE144:
 1179              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1180              		.align	1
 1181              		.global	HAL_DMA_IRQHandler
 1182              		.syntax unified
 1183              		.thumb
 1184              		.thumb_func
 1185              		.fpu fpv5-d16
 1187              	HAL_DMA_IRQHandler:
 1188              	.LFB145:
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 1189              		.loc 1 766 0
ARM GAS  /tmp/ccledx0D.s 			page 48


 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 8
 1192              		@ frame_needed = 0, uses_anonymous_args = 0
 1193              	.LVL127:
 1194 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1195              	.LCFI11:
 1196              		.cfi_def_cfa_offset 20
 1197              		.cfi_offset 4, -20
 1198              		.cfi_offset 5, -16
 1199              		.cfi_offset 6, -12
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 83B0     		sub	sp, sp, #12
 1203              	.LCFI12:
 1204              		.cfi_def_cfa_offset 32
 1205 0004 0446     		mov	r4, r0
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600;
 1206              		.loc 1 768 0
 1207 0006 0023     		movs	r3, #0
 1208 0008 0193     		str	r3, [sp, #4]
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1209              		.loc 1 769 0
 1210 000a 724B     		ldr	r3, .L124
 1211 000c 1D68     		ldr	r5, [r3]
 1212 000e 724B     		ldr	r3, .L124+4
 1213 0010 A3FB0535 		umull	r3, r5, r3, r5
 1214 0014 AD0A     		lsrs	r5, r5, #10
 1215              	.LVL128:
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1216              		.loc 1 772 0
 1217 0016 876D     		ldr	r7, [r0, #88]
 1218              	.LVL129:
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1219              		.loc 1 774 0
 1220 0018 3E68     		ldr	r6, [r7]
 1221              	.LVL130:
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1222              		.loc 1 777 0
 1223 001a C26D     		ldr	r2, [r0, #92]
 1224 001c 0823     		movs	r3, #8
 1225 001e 9340     		lsls	r3, r3, r2
 1226 0020 3342     		tst	r3, r6
 1227 0022 10D0     		beq	.L103
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1228              		.loc 1 779 0
 1229 0024 0368     		ldr	r3, [r0]
 1230 0026 1A68     		ldr	r2, [r3]
 1231 0028 12F0040F 		tst	r2, #4
 1232 002c 0BD0     		beq	.L103
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1233              		.loc 1 782 0
 1234 002e 1A68     		ldr	r2, [r3]
 1235 0030 22F00402 		bic	r2, r2, #4
 1236 0034 1A60     		str	r2, [r3]
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1237              		.loc 1 785 0
 1238 0036 C26D     		ldr	r2, [r0, #92]
ARM GAS  /tmp/ccledx0D.s 			page 49


 1239 0038 0823     		movs	r3, #8
 1240 003a 9340     		lsls	r3, r3, r2
 1241 003c BB60     		str	r3, [r7, #8]
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1242              		.loc 1 788 0
 1243 003e 436D     		ldr	r3, [r0, #84]
 1244 0040 43F00103 		orr	r3, r3, #1
 1245 0044 4365     		str	r3, [r0, #84]
 1246              	.L103:
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1247              		.loc 1 792 0
 1248 0046 E26D     		ldr	r2, [r4, #92]
 1249 0048 0123     		movs	r3, #1
 1250 004a 9340     		lsls	r3, r3, r2
 1251 004c 3342     		tst	r3, r6
 1252 004e 09D0     		beq	.L104
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1253              		.loc 1 794 0
 1254 0050 2268     		ldr	r2, [r4]
 1255 0052 5269     		ldr	r2, [r2, #20]
 1256 0054 12F0800F 		tst	r2, #128
 1257 0058 04D0     		beq	.L104
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1258              		.loc 1 797 0
 1259 005a BB60     		str	r3, [r7, #8]
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1260              		.loc 1 800 0
 1261 005c 636D     		ldr	r3, [r4, #84]
 1262 005e 43F00203 		orr	r3, r3, #2
 1263 0062 6365     		str	r3, [r4, #84]
 1264              	.L104:
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1265              		.loc 1 804 0
 1266 0064 E26D     		ldr	r2, [r4, #92]
 1267 0066 0423     		movs	r3, #4
 1268 0068 9340     		lsls	r3, r3, r2
 1269 006a 3342     		tst	r3, r6
 1270 006c 09D0     		beq	.L105
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1271              		.loc 1 806 0
 1272 006e 2268     		ldr	r2, [r4]
 1273 0070 1268     		ldr	r2, [r2]
 1274 0072 12F0020F 		tst	r2, #2
 1275 0076 04D0     		beq	.L105
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1276              		.loc 1 809 0
 1277 0078 BB60     		str	r3, [r7, #8]
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1278              		.loc 1 812 0
 1279 007a 636D     		ldr	r3, [r4, #84]
 1280 007c 43F00403 		orr	r3, r3, #4
 1281 0080 6365     		str	r3, [r4, #84]
 1282              	.L105:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1283              		.loc 1 816 0
 1284 0082 E26D     		ldr	r2, [r4, #92]
 1285 0084 1023     		movs	r3, #16
ARM GAS  /tmp/ccledx0D.s 			page 50


 1286 0086 9340     		lsls	r3, r3, r2
 1287 0088 3342     		tst	r3, r6
 1288 008a 24D0     		beq	.L106
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1289              		.loc 1 818 0
 1290 008c 2268     		ldr	r2, [r4]
 1291 008e 1268     		ldr	r2, [r2]
 1292 0090 12F0080F 		tst	r2, #8
 1293 0094 1FD0     		beq	.L106
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1294              		.loc 1 821 0
 1295 0096 BB60     		str	r3, [r7, #8]
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1296              		.loc 1 824 0
 1297 0098 2368     		ldr	r3, [r4]
 1298 009a 1A68     		ldr	r2, [r3]
 1299 009c 12F4802F 		tst	r2, #262144
 1300 00a0 0DD0     		beq	.L107
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1301              		.loc 1 827 0
 1302 00a2 1B68     		ldr	r3, [r3]
 1303 00a4 13F4002F 		tst	r3, #524288
 1304 00a8 04D1     		bne	.L108
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1305              		.loc 1 829 0
 1306 00aa 236C     		ldr	r3, [r4, #64]
 1307 00ac 9BB1     		cbz	r3, .L106
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1308              		.loc 1 832 0
 1309 00ae 2046     		mov	r0, r4
 1310              	.LVL131:
 1311 00b0 9847     		blx	r3
 1312              	.LVL132:
 1313 00b2 10E0     		b	.L106
 1314              	.LVL133:
 1315              	.L108:
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1316              		.loc 1 838 0
 1317 00b4 A36C     		ldr	r3, [r4, #72]
 1318 00b6 73B1     		cbz	r3, .L106
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1319              		.loc 1 841 0
 1320 00b8 2046     		mov	r0, r4
 1321              	.LVL134:
 1322 00ba 9847     		blx	r3
 1323              	.LVL135:
 1324 00bc 0BE0     		b	.L106
 1325              	.LVL136:
 1326              	.L107:
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1327              		.loc 1 848 0
 1328 00be 1A68     		ldr	r2, [r3]
 1329 00c0 12F4807F 		tst	r2, #256
 1330 00c4 03D1     		bne	.L109
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1331              		.loc 1 851 0
 1332 00c6 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccledx0D.s 			page 51


 1333 00c8 22F00802 		bic	r2, r2, #8
 1334 00cc 1A60     		str	r2, [r3]
 1335              	.L109:
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1336              		.loc 1 854 0
 1337 00ce 236C     		ldr	r3, [r4, #64]
 1338 00d0 0BB1     		cbz	r3, .L106
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1339              		.loc 1 857 0
 1340 00d2 2046     		mov	r0, r4
 1341              	.LVL137:
 1342 00d4 9847     		blx	r3
 1343              	.LVL138:
 1344              	.L106:
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1345              		.loc 1 863 0
 1346 00d6 E26D     		ldr	r2, [r4, #92]
 1347 00d8 2023     		movs	r3, #32
 1348 00da 9340     		lsls	r3, r3, r2
 1349 00dc 3342     		tst	r3, r6
 1350 00de 55D0     		beq	.L110
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1351              		.loc 1 865 0
 1352 00e0 2268     		ldr	r2, [r4]
 1353 00e2 1268     		ldr	r2, [r2]
 1354 00e4 12F0100F 		tst	r2, #16
 1355 00e8 50D0     		beq	.L110
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1356              		.loc 1 868 0
 1357 00ea BB60     		str	r3, [r7, #8]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1358              		.loc 1 870 0
 1359 00ec 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 1360 00f0 DBB2     		uxtb	r3, r3
 1361 00f2 052B     		cmp	r3, #5
 1362 00f4 0ED0     		beq	.L122
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1363              		.loc 1 897 0
 1364 00f6 2368     		ldr	r3, [r4]
 1365 00f8 1A68     		ldr	r2, [r3]
 1366 00fa 12F4802F 		tst	r2, #262144
 1367 00fe 33D0     		beq	.L115
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1368              		.loc 1 900 0
 1369 0100 1B68     		ldr	r3, [r3]
 1370 0102 13F4002F 		tst	r3, #524288
 1371 0106 2AD1     		bne	.L116
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1372              		.loc 1 902 0
 1373 0108 636C     		ldr	r3, [r4, #68]
 1374 010a 002B     		cmp	r3, #0
 1375 010c 3ED0     		beq	.L110
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1376              		.loc 1 905 0
 1377 010e 2046     		mov	r0, r4
 1378 0110 9847     		blx	r3
 1379              	.LVL139:
ARM GAS  /tmp/ccledx0D.s 			page 52


 1380 0112 3BE0     		b	.L110
 1381              	.L122:
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 1382              		.loc 1 873 0
 1383 0114 2268     		ldr	r2, [r4]
 1384 0116 1368     		ldr	r3, [r2]
 1385 0118 23F01603 		bic	r3, r3, #22
 1386 011c 1360     		str	r3, [r2]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 1387              		.loc 1 874 0
 1388 011e 2268     		ldr	r2, [r4]
 1389 0120 5369     		ldr	r3, [r2, #20]
 1390 0122 23F08003 		bic	r3, r3, #128
 1391 0126 5361     		str	r3, [r2, #20]
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1392              		.loc 1 876 0
 1393 0128 236C     		ldr	r3, [r4, #64]
 1394 012a A3B1     		cbz	r3, .L123
 1395              	.L112:
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1396              		.loc 1 878 0
 1397 012c 2268     		ldr	r2, [r4]
 1398 012e 1368     		ldr	r3, [r2]
 1399 0130 23F00803 		bic	r3, r3, #8
 1400 0134 1360     		str	r3, [r2]
 1401              	.L113:
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1402              		.loc 1 882 0
 1403 0136 E26D     		ldr	r2, [r4, #92]
 1404 0138 3F23     		movs	r3, #63
 1405 013a 9340     		lsls	r3, r3, r2
 1406 013c BB60     		str	r3, [r7, #8]
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1407              		.loc 1 885 0
 1408 013e 0023     		movs	r3, #0
 1409 0140 84F83430 		strb	r3, [r4, #52]
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1410              		.loc 1 888 0
 1411 0144 0123     		movs	r3, #1
 1412 0146 84F83530 		strb	r3, [r4, #53]
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1413              		.loc 1 890 0
 1414 014a 236D     		ldr	r3, [r4, #80]
 1415 014c 002B     		cmp	r3, #0
 1416 014e 3FD0     		beq	.L102
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1417              		.loc 1 892 0
 1418 0150 2046     		mov	r0, r4
 1419 0152 9847     		blx	r3
 1420              	.LVL140:
 1421 0154 3CE0     		b	.L102
 1422              	.L123:
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1423              		.loc 1 876 0 discriminator 1
 1424 0156 A36C     		ldr	r3, [r4, #72]
 1425 0158 002B     		cmp	r3, #0
 1426 015a E7D1     		bne	.L112
ARM GAS  /tmp/ccledx0D.s 			page 53


 1427 015c EBE7     		b	.L113
 1428              	.L116:
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1429              		.loc 1 911 0
 1430 015e E36B     		ldr	r3, [r4, #60]
 1431 0160 A3B1     		cbz	r3, .L110
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1432              		.loc 1 914 0
 1433 0162 2046     		mov	r0, r4
 1434 0164 9847     		blx	r3
 1435              	.LVL141:
 1436 0166 11E0     		b	.L110
 1437              	.L115:
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1438              		.loc 1 921 0
 1439 0168 1A68     		ldr	r2, [r3]
 1440 016a 12F4807F 		tst	r2, #256
 1441 016e 09D1     		bne	.L117
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1442              		.loc 1 924 0
 1443 0170 1A68     		ldr	r2, [r3]
 1444 0172 22F01002 		bic	r2, r2, #16
 1445 0176 1A60     		str	r2, [r3]
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1446              		.loc 1 927 0
 1447 0178 0023     		movs	r3, #0
 1448 017a 84F83430 		strb	r3, [r4, #52]
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1449              		.loc 1 930 0
 1450 017e 0123     		movs	r3, #1
 1451 0180 84F83530 		strb	r3, [r4, #53]
 1452              	.L117:
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1453              		.loc 1 933 0
 1454 0184 E36B     		ldr	r3, [r4, #60]
 1455 0186 0BB1     		cbz	r3, .L110
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1456              		.loc 1 936 0
 1457 0188 2046     		mov	r0, r4
 1458 018a 9847     		blx	r3
 1459              	.LVL142:
 1460              	.L110:
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1461              		.loc 1 943 0
 1462 018c 636D     		ldr	r3, [r4, #84]
 1463 018e FBB1     		cbz	r3, .L102
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1464              		.loc 1 945 0
 1465 0190 636D     		ldr	r3, [r4, #84]
 1466 0192 13F0010F 		tst	r3, #1
 1467 0196 17D0     		beq	.L118
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1468              		.loc 1 947 0
 1469 0198 0523     		movs	r3, #5
 1470 019a 84F83530 		strb	r3, [r4, #53]
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1471              		.loc 1 950 0
ARM GAS  /tmp/ccledx0D.s 			page 54


 1472 019e 2268     		ldr	r2, [r4]
 1473 01a0 1368     		ldr	r3, [r2]
 1474 01a2 23F00103 		bic	r3, r3, #1
 1475 01a6 1360     		str	r3, [r2]
 1476              	.L120:
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1477              		.loc 1 954 0
 1478 01a8 019B     		ldr	r3, [sp, #4]
 1479 01aa 0133     		adds	r3, r3, #1
 1480 01ac 0193     		str	r3, [sp, #4]
 1481 01ae AB42     		cmp	r3, r5
 1482 01b0 04D8     		bhi	.L119
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1483              		.loc 1 959 0
 1484 01b2 2368     		ldr	r3, [r4]
 1485 01b4 1B68     		ldr	r3, [r3]
 1486 01b6 13F0010F 		tst	r3, #1
 1487 01ba F5D1     		bne	.L120
 1488              	.L119:
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1489              		.loc 1 962 0
 1490 01bc 0023     		movs	r3, #0
 1491 01be 84F83430 		strb	r3, [r4, #52]
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1492              		.loc 1 965 0
 1493 01c2 0123     		movs	r3, #1
 1494 01c4 84F83530 		strb	r3, [r4, #53]
 1495              	.L118:
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1496              		.loc 1 968 0
 1497 01c8 E36C     		ldr	r3, [r4, #76]
 1498 01ca 0BB1     		cbz	r3, .L102
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1499              		.loc 1 971 0
 1500 01cc 2046     		mov	r0, r4
 1501 01ce 9847     		blx	r3
 1502              	.LVL143:
 1503              	.L102:
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1504              		.loc 1 974 0
 1505 01d0 03B0     		add	sp, sp, #12
 1506              	.LCFI13:
 1507              		.cfi_def_cfa_offset 20
 1508              		@ sp needed
 1509 01d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1510              	.LVL144:
 1511              	.L125:
 1512              		.align	2
 1513              	.L124:
 1514 01d4 00000000 		.word	SystemCoreClock
 1515 01d8 B5814E1B 		.word	458129845
 1516              		.cfi_endproc
 1517              	.LFE145:
 1519              		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1520              		.align	1
 1521              		.global	HAL_DMA_RegisterCallback
 1522              		.syntax unified
ARM GAS  /tmp/ccledx0D.s 			page 55


 1523              		.thumb
 1524              		.thumb_func
 1525              		.fpu fpv5-d16
 1527              	HAL_DMA_RegisterCallback:
 1528              	.LFB146:
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1529              		.loc 1 987 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 0
 1532              		@ frame_needed = 0, uses_anonymous_args = 0
 1533              		@ link register save eliminated.
 1534              	.LVL145:
 1535 0000 0346     		mov	r3, r0
 1536              	.LVL146:
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1537              		.loc 1 992 0
 1538 0002 90F83400 		ldrb	r0, [r0, #52]	@ zero_extendqisi2
 1539              	.LVL147:
 1540 0006 0128     		cmp	r0, #1
 1541 0008 27D0     		beq	.L136
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1542              		.loc 1 992 0 is_stmt 0 discriminator 2
 1543 000a 0120     		movs	r0, #1
 1544 000c 83F83400 		strb	r0, [r3, #52]
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1545              		.loc 1 994 0 is_stmt 1 discriminator 2
 1546 0010 93F83500 		ldrb	r0, [r3, #53]	@ zero_extendqisi2
 1547 0014 C0B2     		uxtb	r0, r0
 1548 0016 0128     		cmp	r0, #1
 1549 0018 04D0     		beq	.L139
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1550              		.loc 1 1029 0
 1551 001a 0120     		movs	r0, #1
 1552              	.L128:
 1553              	.LVL148:
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1554              		.loc 1 1033 0
 1555 001c 0022     		movs	r2, #0
 1556              	.LVL149:
 1557 001e 83F83420 		strb	r2, [r3, #52]
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1558              		.loc 1 1035 0
 1559 0022 7047     		bx	lr
 1560              	.LVL150:
 1561              	.L139:
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1562              		.loc 1 996 0
 1563 0024 0529     		cmp	r1, #5
 1564 0026 16D8     		bhi	.L138
 1565 0028 DFE801F0 		tbb	[pc, r1]
 1566              	.L130:
 1567 002c 03       		.byte	(.L129-.L130)/2
 1568 002d 06       		.byte	(.L131-.L130)/2
 1569 002e 09       		.byte	(.L132-.L130)/2
 1570 002f 0C       		.byte	(.L133-.L130)/2
 1571 0030 0F       		.byte	(.L134-.L130)/2
 1572 0031 12       		.byte	(.L135-.L130)/2
ARM GAS  /tmp/ccledx0D.s 			page 56


 1573              		.p2align 1
 1574              	.L129:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1575              		.loc 1 999 0
 1576 0032 DA63     		str	r2, [r3, #60]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1577              		.loc 1 989 0
 1578 0034 0020     		movs	r0, #0
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1579              		.loc 1 1000 0
 1580 0036 F1E7     		b	.L128
 1581              	.L131:
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1582              		.loc 1 1003 0
 1583 0038 1A64     		str	r2, [r3, #64]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1584              		.loc 1 989 0
 1585 003a 0020     		movs	r0, #0
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1586              		.loc 1 1004 0
 1587 003c EEE7     		b	.L128
 1588              	.L132:
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1589              		.loc 1 1007 0
 1590 003e 5A64     		str	r2, [r3, #68]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1591              		.loc 1 989 0
 1592 0040 0020     		movs	r0, #0
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1593              		.loc 1 1008 0
 1594 0042 EBE7     		b	.L128
 1595              	.L133:
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1596              		.loc 1 1011 0
 1597 0044 9A64     		str	r2, [r3, #72]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1598              		.loc 1 989 0
 1599 0046 0020     		movs	r0, #0
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1600              		.loc 1 1012 0
 1601 0048 E8E7     		b	.L128
 1602              	.L134:
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1603              		.loc 1 1015 0
 1604 004a DA64     		str	r2, [r3, #76]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1605              		.loc 1 989 0
 1606 004c 0020     		movs	r0, #0
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1607              		.loc 1 1016 0
 1608 004e E5E7     		b	.L128
 1609              	.L135:
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1610              		.loc 1 1019 0
 1611 0050 1A65     		str	r2, [r3, #80]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1612              		.loc 1 989 0
ARM GAS  /tmp/ccledx0D.s 			page 57


 1613 0052 0020     		movs	r0, #0
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1614              		.loc 1 1020 0
 1615 0054 E2E7     		b	.L128
 1616              	.L138:
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1617              		.loc 1 989 0
 1618 0056 0020     		movs	r0, #0
 1619 0058 E0E7     		b	.L128
 1620              	.L136:
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1621              		.loc 1 992 0
 1622 005a 0220     		movs	r0, #2
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1623              		.loc 1 1036 0
 1624 005c 7047     		bx	lr
 1625              		.cfi_endproc
 1626              	.LFE146:
 1628              		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1629              		.align	1
 1630              		.global	HAL_DMA_UnRegisterCallback
 1631              		.syntax unified
 1632              		.thumb
 1633              		.thumb_func
 1634              		.fpu fpv5-d16
 1636              	HAL_DMA_UnRegisterCallback:
 1637              	.LFB147:
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1638              		.loc 1 1047 0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 0
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642              		@ link register save eliminated.
 1643              	.LVL151:
 1644 0000 0346     		mov	r3, r0
 1645              	.LVL152:
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1646              		.loc 1 1051 0
 1647 0002 90F83420 		ldrb	r2, [r0, #52]	@ zero_extendqisi2
 1648 0006 012A     		cmp	r2, #1
 1649 0008 30D0     		beq	.L151
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1650              		.loc 1 1051 0 is_stmt 0 discriminator 2
 1651 000a 0122     		movs	r2, #1
 1652 000c 80F83420 		strb	r2, [r0, #52]
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1653              		.loc 1 1053 0 is_stmt 1 discriminator 2
 1654 0010 90F83520 		ldrb	r2, [r0, #53]	@ zero_extendqisi2
 1655 0014 D2B2     		uxtb	r2, r2
 1656 0016 012A     		cmp	r2, #1
 1657 0018 04D0     		beq	.L154
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1658              		.loc 1 1097 0
 1659 001a 0120     		movs	r0, #1
 1660              	.LVL153:
 1661              	.L142:
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
ARM GAS  /tmp/ccledx0D.s 			page 58


 1662              		.loc 1 1101 0
 1663 001c 0022     		movs	r2, #0
 1664 001e 83F83420 		strb	r2, [r3, #52]
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1665              		.loc 1 1103 0
 1666 0022 7047     		bx	lr
 1667              	.LVL154:
 1668              	.L154:
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1669              		.loc 1 1055 0
 1670 0024 0629     		cmp	r1, #6
 1671 0026 1FD8     		bhi	.L153
 1672 0028 DFE801F0 		tbb	[pc, r1]
 1673              	.L144:
 1674 002c 04       		.byte	(.L143-.L144)/2
 1675 002d 07       		.byte	(.L145-.L144)/2
 1676 002e 0A       		.byte	(.L146-.L144)/2
 1677 002f 0D       		.byte	(.L147-.L144)/2
 1678 0030 10       		.byte	(.L148-.L144)/2
 1679 0031 13       		.byte	(.L149-.L144)/2
 1680 0032 16       		.byte	(.L150-.L144)/2
 1681 0033 00       		.p2align 1
 1682              	.L143:
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1683              		.loc 1 1058 0
 1684 0034 0020     		movs	r0, #0
 1685              	.LVL155:
 1686 0036 D863     		str	r0, [r3, #60]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1687              		.loc 1 1059 0
 1688 0038 F0E7     		b	.L142
 1689              	.LVL156:
 1690              	.L145:
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1691              		.loc 1 1062 0
 1692 003a 0020     		movs	r0, #0
 1693              	.LVL157:
 1694 003c 1864     		str	r0, [r3, #64]
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1695              		.loc 1 1063 0
 1696 003e EDE7     		b	.L142
 1697              	.LVL158:
 1698              	.L146:
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1699              		.loc 1 1066 0
 1700 0040 0020     		movs	r0, #0
 1701              	.LVL159:
 1702 0042 5864     		str	r0, [r3, #68]
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1703              		.loc 1 1067 0
 1704 0044 EAE7     		b	.L142
 1705              	.LVL160:
 1706              	.L147:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1707              		.loc 1 1070 0
 1708 0046 0020     		movs	r0, #0
 1709              	.LVL161:
ARM GAS  /tmp/ccledx0D.s 			page 59


 1710 0048 9864     		str	r0, [r3, #72]
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1711              		.loc 1 1071 0
 1712 004a E7E7     		b	.L142
 1713              	.LVL162:
 1714              	.L148:
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1715              		.loc 1 1074 0
 1716 004c 0020     		movs	r0, #0
 1717              	.LVL163:
 1718 004e D864     		str	r0, [r3, #76]
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1719              		.loc 1 1075 0
 1720 0050 E4E7     		b	.L142
 1721              	.LVL164:
 1722              	.L149:
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 1723              		.loc 1 1078 0
 1724 0052 0020     		movs	r0, #0
 1725              	.LVL165:
 1726 0054 1865     		str	r0, [r3, #80]
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1727              		.loc 1 1079 0
 1728 0056 E1E7     		b	.L142
 1729              	.LVL166:
 1730              	.L150:
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1731              		.loc 1 1082 0
 1732 0058 0020     		movs	r0, #0
 1733              	.LVL167:
 1734 005a D863     		str	r0, [r3, #60]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1735              		.loc 1 1083 0
 1736 005c 1864     		str	r0, [r3, #64]
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1737              		.loc 1 1084 0
 1738 005e 5864     		str	r0, [r3, #68]
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1739              		.loc 1 1085 0
 1740 0060 9864     		str	r0, [r3, #72]
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1741              		.loc 1 1086 0
 1742 0062 D864     		str	r0, [r3, #76]
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 1743              		.loc 1 1087 0
 1744 0064 1865     		str	r0, [r3, #80]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1745              		.loc 1 1088 0
 1746 0066 D9E7     		b	.L142
 1747              	.LVL168:
 1748              	.L153:
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1749              		.loc 1 1091 0
 1750 0068 0120     		movs	r0, #1
 1751              	.LVL169:
 1752 006a D7E7     		b	.L142
 1753              	.LVL170:
ARM GAS  /tmp/ccledx0D.s 			page 60


 1754              	.L151:
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1755              		.loc 1 1051 0
 1756 006c 0220     		movs	r0, #2
 1757              	.LVL171:
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1758              		.loc 1 1104 0
 1759 006e 7047     		bx	lr
 1760              		.cfi_endproc
 1761              	.LFE147:
 1763              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1764              		.align	1
 1765              		.global	HAL_DMA_GetState
 1766              		.syntax unified
 1767              		.thumb
 1768              		.thumb_func
 1769              		.fpu fpv5-d16
 1771              	HAL_DMA_GetState:
 1772              	.LFB148:
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->State;
 1773              		.loc 1 1132 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 0
 1776              		@ frame_needed = 0, uses_anonymous_args = 0
 1777              		@ link register save eliminated.
 1778              	.LVL172:
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1779              		.loc 1 1133 0
 1780 0000 90F83500 		ldrb	r0, [r0, #53]	@ zero_extendqisi2
 1781              	.LVL173:
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1782              		.loc 1 1134 0
 1783 0004 7047     		bx	lr
 1784              		.cfi_endproc
 1785              	.LFE148:
 1787              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 1788              		.align	1
 1789              		.global	HAL_DMA_GetError
 1790              		.syntax unified
 1791              		.thumb
 1792              		.thumb_func
 1793              		.fpu fpv5-d16
 1795              	HAL_DMA_GetError:
 1796              	.LFB149:
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->ErrorCode;
 1797              		.loc 1 1143 0
 1798              		.cfi_startproc
 1799              		@ args = 0, pretend = 0, frame = 0
 1800              		@ frame_needed = 0, uses_anonymous_args = 0
 1801              		@ link register save eliminated.
 1802              	.LVL174:
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1803              		.loc 1 1144 0
 1804 0000 406D     		ldr	r0, [r0, #84]
 1805              	.LVL175:
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1806              		.loc 1 1145 0
ARM GAS  /tmp/ccledx0D.s 			page 61


 1807 0002 7047     		bx	lr
 1808              		.cfi_endproc
 1809              	.LFE149:
 1811              		.section	.rodata.flagBitshiftOffset.9235,"a",%progbits
 1812              		.align	2
 1813              		.set	.LANCHOR0,. + 0
 1816              	flagBitshiftOffset.9235:
 1817 0000 00       		.byte	0
 1818 0001 06       		.byte	6
 1819 0002 10       		.byte	16
 1820 0003 16       		.byte	22
 1821 0004 00       		.byte	0
 1822 0005 06       		.byte	6
 1823 0006 10       		.byte	16
 1824 0007 16       		.byte	22
 1825              		.text
 1826              	.Letext0:
 1827              		.file 2 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_d
 1828              		.file 3 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdin
 1829              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1830              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1831              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f765xx.h"
 1832              		.file 7 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h
 1833              		.file 8 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types
 1834              		.file 9 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/incl
 1835              		.file 10 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent
 1836              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1837              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1838              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1839              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccledx0D.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_dma.c
     /tmp/ccledx0D.s:17     .text.DMA_SetConfig:0000000000000000 $t
     /tmp/ccledx0D.s:23     .text.DMA_SetConfig:0000000000000000 DMA_SetConfig
     /tmp/ccledx0D.s:82     .text.DMA_CalcBaseAndBitshift:0000000000000000 $t
     /tmp/ccledx0D.s:88     .text.DMA_CalcBaseAndBitshift:0000000000000000 DMA_CalcBaseAndBitshift
     /tmp/ccledx0D.s:133    .text.DMA_CalcBaseAndBitshift:000000000000002c $d
     /tmp/ccledx0D.s:140    .text.DMA_CheckFifoParam:0000000000000000 $t
     /tmp/ccledx0D.s:146    .text.DMA_CheckFifoParam:0000000000000000 DMA_CheckFifoParam
     /tmp/ccledx0D.s:213    .text.DMA_CheckFifoParam:0000000000000046 $d
     /tmp/ccledx0D.s:217    .text.DMA_CheckFifoParam:000000000000004a $t
     /tmp/ccledx0D.s:303    .text.HAL_DMA_Init:0000000000000000 $t
     /tmp/ccledx0D.s:310    .text.HAL_DMA_Init:0000000000000000 HAL_DMA_Init
     /tmp/ccledx0D.s:486    .text.HAL_DMA_Init:00000000000000c8 $d
     /tmp/ccledx0D.s:491    .text.HAL_DMA_DeInit:0000000000000000 $t
     /tmp/ccledx0D.s:498    .text.HAL_DMA_DeInit:0000000000000000 HAL_DMA_DeInit
     /tmp/ccledx0D.s:608    .text.HAL_DMA_Start:0000000000000000 $t
     /tmp/ccledx0D.s:615    .text.HAL_DMA_Start:0000000000000000 HAL_DMA_Start
     /tmp/ccledx0D.s:685    .text.HAL_DMA_Start_IT:0000000000000000 $t
     /tmp/ccledx0D.s:692    .text.HAL_DMA_Start_IT:0000000000000000 HAL_DMA_Start_IT
     /tmp/ccledx0D.s:789    .text.HAL_DMA_Abort:0000000000000000 $t
     /tmp/ccledx0D.s:796    .text.HAL_DMA_Abort:0000000000000000 HAL_DMA_Abort
     /tmp/ccledx0D.s:912    .text.HAL_DMA_Abort_IT:0000000000000000 $t
     /tmp/ccledx0D.s:919    .text.HAL_DMA_Abort_IT:0000000000000000 HAL_DMA_Abort_IT
     /tmp/ccledx0D.s:958    .text.HAL_DMA_PollForTransfer:0000000000000000 $t
     /tmp/ccledx0D.s:965    .text.HAL_DMA_PollForTransfer:0000000000000000 HAL_DMA_PollForTransfer
     /tmp/ccledx0D.s:1180   .text.HAL_DMA_IRQHandler:0000000000000000 $t
     /tmp/ccledx0D.s:1187   .text.HAL_DMA_IRQHandler:0000000000000000 HAL_DMA_IRQHandler
     /tmp/ccledx0D.s:1514   .text.HAL_DMA_IRQHandler:00000000000001d4 $d
     /tmp/ccledx0D.s:1520   .text.HAL_DMA_RegisterCallback:0000000000000000 $t
     /tmp/ccledx0D.s:1527   .text.HAL_DMA_RegisterCallback:0000000000000000 HAL_DMA_RegisterCallback
     /tmp/ccledx0D.s:1567   .text.HAL_DMA_RegisterCallback:000000000000002c $d
     /tmp/ccledx0D.s:1573   .text.HAL_DMA_RegisterCallback:0000000000000032 $t
     /tmp/ccledx0D.s:1629   .text.HAL_DMA_UnRegisterCallback:0000000000000000 $t
     /tmp/ccledx0D.s:1636   .text.HAL_DMA_UnRegisterCallback:0000000000000000 HAL_DMA_UnRegisterCallback
     /tmp/ccledx0D.s:1674   .text.HAL_DMA_UnRegisterCallback:000000000000002c $d
     /tmp/ccledx0D.s:1764   .text.HAL_DMA_GetState:0000000000000000 $t
     /tmp/ccledx0D.s:1771   .text.HAL_DMA_GetState:0000000000000000 HAL_DMA_GetState
     /tmp/ccledx0D.s:1788   .text.HAL_DMA_GetError:0000000000000000 $t
     /tmp/ccledx0D.s:1795   .text.HAL_DMA_GetError:0000000000000000 HAL_DMA_GetError
     /tmp/ccledx0D.s:1812   .rodata.flagBitshiftOffset.9235:0000000000000000 $d
     /tmp/ccledx0D.s:1816   .rodata.flagBitshiftOffset.9235:0000000000000000 flagBitshiftOffset.9235
     /tmp/ccledx0D.s:1681   .text.HAL_DMA_UnRegisterCallback:0000000000000033 $d
     /tmp/ccledx0D.s:1681   .text.HAL_DMA_UnRegisterCallback:0000000000000034 $t

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock

ARM GAS  /tmp/cciXgPzD.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_i2c.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	I2C_Flush_TXDR:
  24              	.LFB196:
  25              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @file    stm32f7xx_hal_i2c.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   @verbatim
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ==============================================================================
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the HAL_I2C_MspInit() API:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) I2C pins configuration
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive stream
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
ARM GAS  /tmp/cciXgPzD.s 			page 2


  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx stream
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   the DMA Tx or Rx stream
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the HAL_I2C_Init(), configures also the low level H
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized HAL_I2C_MspInit(&hi2c) API.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function HAL_I2C_IsDeviceRead
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Polling mode IO operation ***
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =================================
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using HAL_I2C_Master_Transmit(
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using HAL_I2C_Master_Receive()
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Transmit()
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Receive()
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =====================================
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using HAL_I2C_Mem_W
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using HAL_I2C_Mem_
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ===================================
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Trans
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and user can
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Receiv
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and user can
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Transmi
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and user can
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Receive_
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and user can
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode IO sequential operation ***
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ==============================================
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
ARM GAS  /tmp/cciXgPzD.s 			page 3


  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           when a direction change during transfer
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Option field values are defined through @ref I2C_XFEROPTIONS and are listed below:
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functionnal is same as associated interfa
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and data to transfer without a final stop condition
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             several times (like HAL_I2C_Master_Sequential_Transmit_IT() then HAL_I2
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME_NO_STOP: Sequential usage (Master only), this option allow to manage a re
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             interface several times (link with option I2C_FIRST_AND_NEXT_FRAME).
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one using HAL_I2C_Master_Seque
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Sequential_Receive_IT(option I2C_FIRST_AND_NEXT_FRA
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Then usage of this option I2C_LAST_FRAME_NO_STOP at the last Transmit o
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               without stopping the communication and so generate a restart conditio
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Differents sequential I2C interfaces are listed below:
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using HAL_
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_MasterTxCpltCallback() is execut
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using HAL_I
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_MasterRxCpltCallback() is executed 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using HAL_I2C_EnableListen_IT()
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) When address slave I2C match, HAL_I2C_AddrCallback() is executed and user can
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At Listen mode end HAL_I2C_ListenCpltCallback() is executed and user can
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ListenCpltCallback()
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using HAL_I
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_SlaveTxCpltCallback() is execute
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using HAL_I2
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_SlaveRxCpltCallback() is executed a
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =======================================
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
ARM GAS  /tmp/cciXgPzD.s 			page 4


 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_Mem_Write_IT()
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and user can
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_Mem_Read_IT()
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and user can
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** DMA mode IO operation ***
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ==============================
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_Master_Transmit_DMA()
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and user can
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_Master_Receive_DMA()
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and user can
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_Slave_Transmit_DMA()
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and user can
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_Slave_Receive_DMA()
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and user can
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =================================
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_Mem_Write_DMA()
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and user can
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_Mem_Read_DMA()
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and user can
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      ==================================
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      [..]
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 5


 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE: Enable the I2C peripheral
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE: Disable the I2C peripheral
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      [..]
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   @endverbatim
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @attention
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * Redistribution and use in source and binary forms, with or without modification,
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * are permitted provided that the following conditions are met:
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *      this list of conditions and the following disclaimer.
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *      this list of conditions and the following disclaimer in the documentation
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *      and/or other materials provided with the distribution.
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *      may be used to endorse or promote products derived from this software
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *      without specific prior written permission.
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #include "stm32f7xx_hal.h"
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @addtogroup STM32F7xx_HAL_Driver
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C I2C
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief I2C HAL module driver
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/cciXgPzD.s 			page 6


 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define SlaveAddr_SHIFT     7U
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define SlaveAddr_MSK       0x06U
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((HAL_I2C_STATE_BUSY_TX | HAL_I2C_STATE_BUSY_RX) & (~(
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (0x00000001U)
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (0x00000002U)
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (0x00000004U)
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (0x00000011U)
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (0x00000012U)
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (0x00000012U)
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_GET_DMA_REMAIN_DATA(__HANDLE__) ((((__HANDLE__)->State) == HAL_I2C_STATE_BUSY_TX)   ? \
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                               ((uint32_t)(((DMA_Stream_TypeDef *)(__HANDLE__)->hdma
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                               ((uint32_t)(((DMA_Stream_TypeDef *)(__HANDLE__)->hdma
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/cciXgPzD.s 			page 7


 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterSequentialCplt(I2C_HandleTypeDef *hi2c);
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveSequentialCplt(I2C_HandleTypeDef *hi2c);
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to flush TXDR register */
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle  start, restart or stop a transfer */
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c,  uint16_t DevAddress, uint8_t Size, uint32_
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *  @brief    Initialization and Configuration functions
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
ARM GAS  /tmp/cciXgPzD.s 			page 8


 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           the selected configuration:
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Clock Timing
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 1
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Dual Addressing mode
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 2
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 2 Mask
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) General call mode
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Nostretch mode
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c == NULL)
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_RESET)
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 9


 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/cciXgPzD.s 			page 10


 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c == NULL)
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  /tmp/cciXgPzD.s 			page 11


 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *  @brief   Data transfers functions
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                       ##### IO operation functions #####
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     transfers.
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) There are two modes of transfer:
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             The status of all data processing is returned by the same function
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             after finishing transfer.
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             The end of the data processing will be indicated through the
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             using DMA mode.
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Blocking mode functions are :
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
ARM GAS  /tmp/cciXgPzD.s 			page 12


 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
ARM GAS  /tmp/cciXgPzD.s 			page 13


 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRIT
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
ARM GAS  /tmp/cciXgPzD.s 			page 14


 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
ARM GAS  /tmp/cciXgPzD.s 			page 15


 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
ARM GAS  /tmp/cciXgPzD.s 			page 16


 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode.
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
ARM GAS  /tmp/cciXgPzD.s 			page 17


 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag */
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/cciXgPzD.s 			page 18


 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Normal use case for Transmitter mode */
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* A NACK is generated to confirm the end of transfer */
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP flag */
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 19


1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
ARM GAS  /tmp/cciXgPzD.s 			page 20


1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Store Last receive data if any */
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Read data from RXDR */
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferCount--;
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_TIMEOUT)
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP flag */
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 21


1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
ARM GAS  /tmp/cciXgPzD.s 			page 22


1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cciXgPzD.s 			page 23


1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/cciXgPzD.s 			page 24


1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
ARM GAS  /tmp/cciXgPzD.s 			page 25


1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 26


1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSi
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/cciXgPzD.s 			page 27


1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
ARM GAS  /tmp/cciXgPzD.s 			page 28


1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSi
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
ARM GAS  /tmp/cciXgPzD.s 			page 29


1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the DMA error callback */
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
ARM GAS  /tmp/cciXgPzD.s 			page 30


1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
ARM GAS  /tmp/cciXgPzD.s 			page 31


1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the DMA error callback */
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 32


1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
ARM GAS  /tmp/cciXgPzD.s 			page 33


1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
ARM GAS  /tmp/cciXgPzD.s 			page 34


1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 35


1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
ARM GAS  /tmp/cciXgPzD.s 			page 36


1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
ARM GAS  /tmp/cciXgPzD.s 			page 37


2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
ARM GAS  /tmp/cciXgPzD.s 			page 38


2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cciXgPzD.s 			page 39


2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 40


2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 41


2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the DMA error callback */
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update XferCount value */
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
ARM GAS  /tmp/cciXgPzD.s 			page 42


2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be read
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
ARM GAS  /tmp/cciXgPzD.s 			page 43


2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the DMA error callback */
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update XferCount value */
ARM GAS  /tmp/cciXgPzD.s 			page 44


2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This function is used with Memory devices
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Trials Number of trials
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0U;
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Generate Start */
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
2484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 45


2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tickstart = HAL_GetTick();
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_F
2489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (Timeout != HAL_MAX_DELAY)
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Device is ready */
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Process Unlocked */
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             return HAL_TIMEOUT;
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Device is ready */
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_OK;
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_Trials++ == Trials)
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate Stop */
ARM GAS  /tmp/cciXgPzD.s 			page 46


2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
2543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (I2C_Trials < Trials);
2555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_TIMEOUT;
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Sequential_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddres
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
ARM GAS  /tmp/cciXgPzD.s 			page 47


2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If size > MAX_NBYTE_SIZE, use reload mode */
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change, do not generate Restart Condition */
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, xferrequest);
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
2644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
2648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Sequential_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
ARM GAS  /tmp/cciXgPzD.s 			page 48


2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change, do not generate Restart Condition */
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, xferrequest);
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/cciXgPzD.s 			page 49


2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Sequential_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uin
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
2739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
2749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
2766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
ARM GAS  /tmp/cciXgPzD.s 			page 50


2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
2777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Sequential_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
2818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
2819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
2823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
2826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
ARM GAS  /tmp/cciXgPzD.s 			page 51


2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
2838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
2844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
2851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
2854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
2860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
2865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
ARM GAS  /tmp/cciXgPzD.s 			page 52


2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
2889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmp;
2897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_LISTEN)
2900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
2929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
2934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
2938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
ARM GAS  /tmp/cciXgPzD.s 			page 53


2941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
2951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wrong usage of abort function */
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
2958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
2964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  * @{
2968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  */
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferISR != NULL)
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
2991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
2994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
2996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
ARM GAS  /tmp/cciXgPzD.s 			page 54


2998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((itflags & I2C_FLAG_BERR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
3002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear BERR flag */
3006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((itflags & I2C_FLAG_OVR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
3011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
3013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear OVR flag */
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((itflags & I2C_FLAG_ARLO) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
3020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
3022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ARLO flag */
3024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
3028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->ErrorCode & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C
3029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
3036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
3041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
3047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
ARM GAS  /tmp/cciXgPzD.s 			page 55


3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
3064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
3079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
3088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
3091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_XFE
3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  AddrMatchCode Address Match Code
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
3109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(TransferDirection);
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 56


3112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
3114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Listen Complete callback.
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
3135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
3143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
3151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
3162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C error callback.
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  /tmp/cciXgPzD.s 			page 57


3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
3178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
3179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C abort callback.
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
3202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *  @brief   Peripheral State, Mode and Error functions
3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
3206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
3207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
3209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     and the data flow.
3211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
3214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL state
3221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
3223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Return I2C handle state */
3225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->State;
ARM GAS  /tmp/cciXgPzD.s 			page 58


3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         the configuration information for I2C module
3232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL mode
3233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->Mode;
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Return the I2C error code.
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** * @retval I2C Error Code
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** */
3245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
3246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->ErrorCode;
3248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
3264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress = 0U;
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Locked */
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
3276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set corresponding Error Code */
ARM GAS  /tmp/cciXgPzD.s 			page 59


3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
3284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
3289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
3293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
3295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Write data to TXDR */
3300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
3311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
3313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
3319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, hi2c->XferOptions, I2C_NO_STARTSTOP)
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
3331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
3334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITMasterSequentialCplt(hi2c);
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
ARM GAS  /tmp/cciXgPzD.s 			page 60


3340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_TC) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
3345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
3351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Generate Stop */
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
3355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITMasterSequentialCplt(hi2c);
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Master complete process */
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
3375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
3378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
3395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
ARM GAS  /tmp/cciXgPzD.s 			page 61


3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
3399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
3400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean XferCount == 0*/
3401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (((hi2c->XferOptions == I2C_FIRST_AND_LAST_FRAME) || (hi2c->XferOptions == I2C_LAST_FRAME)
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           (hi2c->State == HAL_I2C_STATE_LISTEN))
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Listen complete process */
3408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, ITFlags);
3409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else if ((hi2c->XferOptions != I2C_NO_OPTION_FRAME) && (hi2c->State == HAL_I2C_STATE_BUSY_TX_
3411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Flush TX register */
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
3425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear NACK Flag */
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
3443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
3444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && \
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (hi2c->XferOptions != I2C_NO_OPTION_FRAME))
3450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITSlaveSequentialCplt(hi2c);
3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cciXgPzD.s 			page 62


3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
3462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
3463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if all Datas have already been sent */
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
3469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
3471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferOptions == I2C_NEXT_FRAME) || (hi2c->XferOptions == I2C_FIRST_FRAME))
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
3477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
3479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if STOPF is set */
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
3488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress = 0U;
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Locked */
3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
ARM GAS  /tmp/cciXgPzD.s 			page 63


3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set corresponding Error Code */
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
3523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC interrupt */
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
3532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Recover Slave address */
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
3537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
3543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
3547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_AUTOEND_MODE;
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
3558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/cciXgPzD.s 			page 64


3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wrong size Status regarding TCR flag event */
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
3574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Master complete process */
3576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
3577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean XferCount == 0 */
3603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
3605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear NACK Flag */
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
3612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear NACK Flag */
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
3620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
ARM GAS  /tmp/cciXgPzD.s 			page 65


3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
3627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
3628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
3631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
3638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
3641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
3643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
3644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
3646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
3662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
3666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Memory Address */
3669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
3678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
ARM GAS  /tmp/cciXgPzD.s 			page 66


3682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TCR flag is set */
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_TIMEOUT;
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address which contain device 7 or 10 bits address value
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
3710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
3718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
3720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
3729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
3733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
3734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Memory Address */
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
ARM GAS  /tmp/cciXgPzD.s 			page 67


3739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
3743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
3745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
3754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
3758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TC flag is set */
3762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
3763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_TIMEOUT;
3765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
3768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
3777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection = 0U;
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t slaveaddrcode = 0U;
3780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t ownadd1code = 0U;
3781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t ownadd2code = 0U;
3782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(ITFlags);
3785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
3787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
3788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
3790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
3792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
3793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
3795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
ARM GAS  /tmp/cciXgPzD.s 			page 68


3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
3798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AddrEventCount++;
3801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
3802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Reset Address Event counter */
3804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear ADDR flag */
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Process Unlocked */
3810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
3811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call Slave Addr callback */
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
3814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
3819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
3821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Slave Addr callback */
3827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
3831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
3834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call Slave Addr callback */
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
3841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Else clear address flag only */
3844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/cciXgPzD.s 			page 69


3853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
3856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterSequentialCplt(I2C_HandleTypeDef *hi2c)
3860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
3862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
3863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
3866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
3867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
3869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
3870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
3873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
3880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
3882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
3885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
3886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
3887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
3889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
3896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
3901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveSequentialCplt(I2C_HandleTypeDef *hi2c)
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
3907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
ARM GAS  /tmp/cciXgPzD.s 			page 70


3910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
3912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
3913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
3914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
3916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Tx complete callback to inform upper layer of the end of transmit process */
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
3923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
3928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
3929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
3932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Rx complete callback to inform upper layer of the end of receive process */
3938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
3939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Master complete process.
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
3947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
3949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
3954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
3955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
3957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
3958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
3959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((ITFlags & I2C_FLAG_AF) != RESET)
3962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set acknowledge error code */
ARM GAS  /tmp/cciXgPzD.s 			page 71


3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register */
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
3972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts */
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_RX_IT);
3975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->ErrorCode != HAL_I2C_ERROR_NONE) || (hi2c->State == HAL_I2C_STATE_ABORT))
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
3983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
3984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
3988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
3990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
3996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
4006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
4009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
4014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
4021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/cciXgPzD.s 			page 72


4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
4030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
4036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
4044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear ADDR flag */
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable all interrupts */
4049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT | I2C_XFER_RX_IT);
4050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Address Acknowledge */
4052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
4053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
4056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register */
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
4059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
4061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN) ||
4062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN))
4063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
4065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
4068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
4069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
4071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store Last receive data if any */
4075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_RXNE) != RESET))
4076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
4078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
4079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
ARM GAS  /tmp/cciXgPzD.s 			page 73


4081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
4083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
4084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
4092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
4093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
4095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_LISTEN)
4101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call I2C Listen complete process */
4103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, ITFlags);
4104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
4109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
4116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
4118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Slave Rx Complete callback */
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
4127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Slave Tx Complete callback */
4136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
4137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/cciXgPzD.s 			page 74


4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
4142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
4147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
4149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
4150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
4151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
4152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
4153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
4154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store Last receive data if any */
4156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_RXNE) != RESET))
4157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
4159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
4160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
4162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
4164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
4165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable all Interrupts*/
4172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
4173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear NACK Flag */
4175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
4178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
4182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
4186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
4188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
4191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
4193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
4194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
ARM GAS  /tmp/cciXgPzD.s 			page 75


4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
4196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Set new error code */
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
4199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts */
4201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_LISTEN)         ||
4202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
4203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN))
4204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
4207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
4209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
4210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
4211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
4212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable all interrupts */
4216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
4217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If state is an abort treatment on goind, don't change state */
4219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* This change will be do later */
4220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State != HAL_I2C_STATE_ABORT)
4221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
4223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
4224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
4226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
4227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
4230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the I2C DMA Abort callback :
4235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Abort DMA TX */
4242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call Directly XferAbortCallback function in case of error */
4245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
ARM GAS  /tmp/cciXgPzD.s 			page 76


4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the I2C DMA Abort callback :
4254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Abort DMA RX */
4261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
4264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_ABORT)
4268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
4276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
4284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
4289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
4293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
  26              		.loc 1 4293 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
4294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
4295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
4296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
  32              		.loc 1 4296 0
  33 0000 0368     		ldr	r3, [r0]
  34 0002 9A69     		ldr	r2, [r3, #24]
  35 0004 12F0020F 		tst	r2, #2
  36 0008 01D0     		beq	.L2
4297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cciXgPzD.s 			page 77


4298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = 0x00U;
  37              		.loc 1 4298 0
  38 000a 0022     		movs	r2, #0
  39 000c 9A62     		str	r2, [r3, #40]
  40              	.L2:
4299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register if not empty */
4302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
  41              		.loc 1 4302 0
  42 000e 0368     		ldr	r3, [r0]
  43 0010 9A69     		ldr	r2, [r3, #24]
  44 0012 12F0010F 		tst	r2, #1
  45 0016 03D1     		bne	.L1
4303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
  46              		.loc 1 4304 0
  47 0018 9A69     		ldr	r2, [r3, #24]
  48 001a 42F00102 		orr	r2, r2, #1
  49 001e 9A61     		str	r2, [r3, #24]
  50              	.L1:
4305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
  51              		.loc 1 4306 0
  52 0020 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE196:
  56              		.section	.text.I2C_DMASlaveTransmitCplt,"ax",%progbits
  57              		.align	1
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu fpv5-d16
  63              	I2C_DMASlaveTransmitCplt:
  64              	.LFB198:
4307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
4310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
4311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
4314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
4316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable DMA Request */
4318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
4321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
4322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupt */
4324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
4327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cciXgPzD.s 			page 78


4329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update Buffer pointer */
4330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
4331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
4333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
4334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
4336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
4340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
4343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, hi2c-
4344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable TC interrupts */
4346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
4347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
4352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
4353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
4356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
  65              		.loc 1 4356 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70              	.LVL1:
4357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hdma);
4359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* No specific action, Master fully manage the generation of STOP condition */
4361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Mean that this generation can arrive at any time, at the end or during DMA process */
4362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* So STOP condition should be manage through Interrupt treatment */
4363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
  71              		.loc 1 4363 0
  72 0000 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE198:
  76              		.section	.text.I2C_DMASlaveReceiveCplt,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv5-d16
  83              	I2C_DMASlaveReceiveCplt:
  84              	.LFB200:
4364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
4367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
ARM GAS  /tmp/cciXgPzD.s 			page 79


4368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
4371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
4373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable DMA Request */
4375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
4378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
4379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupt */
4381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
4384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update Buffer pointer */
4387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
4388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
4390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
4391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
4393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
4397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
4400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, hi2c-
4401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable TC interrupts */
4403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
4404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
4409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
4410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
4413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
  85              		.loc 1 4413 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.LVL2:
4414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hdma);
4416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* No specific action, Master fully manage the generation of STOP condition */
4418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Mean that this generation can arrive at any time, at the end or during DMA process */
ARM GAS  /tmp/cciXgPzD.s 			page 80


4419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* So STOP condition should be manage through Interrupt treatment */
4420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
  91              		.loc 1 4420 0
  92 0000 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE200:
  96              		.section	.text.I2C_TransferConfig,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu fpv5-d16
 103              	I2C_TransferConfig:
 104              	.LFB208:
4421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
4424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param hdma DMA handle
4425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
4428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
4430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Acknowledge */
4432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
4433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
4435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
4436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
4440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
4441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param hdma DMA handle.
4442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
4445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
4447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Acknowledge */
4449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
4450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
4452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->hdmatx->XferAbortCallback = NULL;
4453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->hdmarx->XferAbortCallback = NULL;
4454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if come from abort from user */
4456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
4457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
4462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
ARM GAS  /tmp/cciXgPzD.s 			page 81


4464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
4467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
4472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
4475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
4476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
4481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
4483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
4485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
4486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
4488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
4490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
4491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
4493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
4494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
4495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
4503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
4512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
4514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
4515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
4517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
4520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
ARM GAS  /tmp/cciXgPzD.s 			page 82


4521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
4523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
4525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
4526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
4527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
4529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
4530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
4532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
4540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
4549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
4551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
4552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
4554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
4557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
4558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
4560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
4561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
4567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
4574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
ARM GAS  /tmp/cciXgPzD.s 			page 83


4578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
4583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
4585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
4586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
4588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a STOPF is detected */
4591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
4592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if an RXNE is pending */
4594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Store Last receive data if any */
4595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
4596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return HAL_OK */
4598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* The Reading of data from RXDR will be done in caller function */
4599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_OK;
4600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
4604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
4605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear Configuration Register 2 */
4607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_RESET_CR2(hi2c);
4608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
4611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
4612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
4614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
4615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
4617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
4621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
4622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
4624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
4625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
4630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 84


4635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
4637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
4644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
4646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP Flag is reset */
4648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
4649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
4650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check for the Timeout */
4652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (Timeout != HAL_MAX_DELAY)
4653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
4655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
4657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
4658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Process Unlocked */
4660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
4661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
4662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACKF Flag */
4667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
4670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
4671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
4673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
4676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
4677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_AF;
4679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
ARM GAS  /tmp/cciXgPzD.s 			page 85


4692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
4694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
4695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
4696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
4697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
4698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
4699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
4700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
4701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
4702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
4703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
4704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
4705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
4706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
4707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c,  uint16_t DevAddress, uint8_t Size, uint32_
4710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 105              		.loc 1 4710 0
 106              		.cfi_startproc
 107              		@ args = 4, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.LVL3:
 111 0000 70B4     		push	{r4, r5, r6}
 112              	.LCFI0:
 113              		.cfi_def_cfa_offset 12
 114              		.cfi_offset 4, -12
 115              		.cfi_offset 5, -8
 116              		.cfi_offset 6, -4
 117 0002 039E     		ldr	r6, [sp, #12]
4711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
4712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
4713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
4714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
4715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* update CR2 register */
4717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CR2, ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEN
 118              		.loc 1 4717 0
 119 0004 0568     		ldr	r5, [r0]
 120 0006 6868     		ldr	r0, [r5, #4]
 121              	.LVL4:
 122 0008 740D     		lsrs	r4, r6, #21
 123 000a 04F48064 		and	r4, r4, #1024
 124 000e 44F07F74 		orr	r4, r4, #66846720
 125 0012 44F45834 		orr	r4, r4, #221184
 126 0016 44F47F74 		orr	r4, r4, #1020
 127 001a 44F00304 		orr	r4, r4, #3
 128 001e 20EA0400 		bic	r0, r0, r4
 129 0022 C1F30901 		ubfx	r1, r1, #0, #10
 130              	.LVL5:
 131 0026 41EA0241 		orr	r1, r1, r2, lsl #16
 132 002a 1943     		orrs	r1, r1, r3
 133 002c 3143     		orrs	r1, r1, r6
 134 002e 0143     		orrs	r1, r1, r0
 135 0030 6960     		str	r1, [r5, #4]
ARM GAS  /tmp/cciXgPzD.s 			page 86


4718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****              (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << I2C_CR2_NBYTES_
4719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 136              		.loc 1 4719 0
 137 0032 70BC     		pop	{r4, r5, r6}
 138              	.LCFI1:
 139              		.cfi_restore 6
 140              		.cfi_restore 5
 141              		.cfi_restore 4
 142              		.cfi_def_cfa_offset 0
 143              	.LVL6:
 144 0034 7047     		bx	lr
 145              		.cfi_endproc
 146              	.LFE208:
 148              		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 149              		.align	1
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu fpv5-d16
 155              	I2C_Enable_IRQ:
 156              	.LFB209:
4720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
4723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
4726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
4729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 157              		.loc 1 4729 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162              	.LVL7:
4730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
4731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->XferISR == I2C_Master_ISR_DMA) || \
 163              		.loc 1 4732 0
 164 0000 436B     		ldr	r3, [r0, #52]
 165 0002 1E4A     		ldr	r2, .L23
 166 0004 9342     		cmp	r3, r2
 167 0006 17D0     		beq	.L9
 168              		.loc 1 4732 0 is_stmt 0 discriminator 1
 169 0008 1D4A     		ldr	r2, .L23+4
 170 000a 9342     		cmp	r3, r2
 171 000c 14D0     		beq	.L9
4733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (hi2c->XferISR == I2C_Slave_ISR_DMA))
4734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
4736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
4739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 87


4741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
4742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
4744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
4745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
4748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable STOP interrupts */
4750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
4751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
4754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
4756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
4757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 172              		.loc 1 4761 0 is_stmt 1
 173 000e 11F0040F 		tst	r1, #4
 174 0012 30D1     		bne	.L19
4730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 175              		.loc 1 4730 0
 176 0014 0023     		movs	r3, #0
 177              	.L15:
 178              	.LVL8:
4762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, and ADDR interrupts */
4764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
4765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 179              		.loc 1 4767 0
 180 0016 11F0010F 		tst	r1, #1
 181 001a 01D0     		beq	.L16
4768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
4770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 182              		.loc 1 4770 0
 183 001c 43F0F203 		orr	r3, r3, #242
 184              	.LVL9:
 185              	.L16:
4771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 186              		.loc 1 4773 0
 187 0020 11F0020F 		tst	r1, #2
 188 0024 01D0     		beq	.L17
4774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
4776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 189              		.loc 1 4776 0
 190 0026 43F0F403 		orr	r3, r3, #244
 191              	.LVL10:
ARM GAS  /tmp/cciXgPzD.s 			page 88


 192              	.L17:
4777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 193              		.loc 1 4779 0
 194 002a 01F01201 		and	r1, r1, #18
 195              	.LVL11:
 196 002e 1229     		cmp	r1, #18
 197 0030 10D1     		bne	.L14
4780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable STOP interrupts */
4782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 198              		.loc 1 4782 0
 199 0032 43F02003 		orr	r3, r3, #32
 200              	.LVL12:
 201 0036 0DE0     		b	.L14
 202              	.LVL13:
 203              	.L9:
4735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 204              		.loc 1 4735 0
 205 0038 11F0040F 		tst	r1, #4
 206 003c 10D1     		bne	.L18
4730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 207              		.loc 1 4730 0
 208 003e 0023     		movs	r3, #0
 209              	.L11:
 210              	.LVL14:
4741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 211              		.loc 1 4741 0
 212 0040 01F01102 		and	r2, r1, #17
 213 0044 112A     		cmp	r2, #17
 214 0046 0DD0     		beq	.L20
 215              	.L12:
 216 0048 01F01201 		and	r1, r1, #18
 217              	.LVL15:
4747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 218              		.loc 1 4747 0
 219 004c 1229     		cmp	r1, #18
 220 004e 0CD0     		beq	.L21
 221              	.L13:
4753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 222              		.loc 1 4753 0
 223 0050 1229     		cmp	r1, #18
 224 0052 0DD0     		beq	.L22
 225              	.L14:
4783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable interrupts only at the end */
4787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
4788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* all interrupts requested done */
4789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 226              		.loc 1 4789 0
 227 0054 0168     		ldr	r1, [r0]
 228 0056 0A68     		ldr	r2, [r1]
 229 0058 1343     		orrs	r3, r3, r2
 230              	.LVL16:
ARM GAS  /tmp/cciXgPzD.s 			page 89


 231 005a 0B60     		str	r3, [r1]
4790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 232              		.loc 1 4792 0
 233 005c 0020     		movs	r0, #0
 234              	.LVL17:
 235 005e 7047     		bx	lr
 236              	.LVL18:
 237              	.L18:
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 238              		.loc 1 4738 0
 239 0060 B823     		movs	r3, #184
 240 0062 EDE7     		b	.L11
 241              	.LVL19:
 242              	.L20:
4744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 243              		.loc 1 4744 0
 244 0064 43F09003 		orr	r3, r3, #144
 245              	.LVL20:
 246 0068 EEE7     		b	.L12
 247              	.LVL21:
 248              	.L21:
4750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 249              		.loc 1 4750 0
 250 006a 43F02003 		orr	r3, r3, #32
 251              	.LVL22:
 252 006e EFE7     		b	.L13
 253              	.L22:
4756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 254              		.loc 1 4756 0
 255 0070 43F04003 		orr	r3, r3, #64
 256              	.LVL23:
 257 0074 EEE7     		b	.L14
 258              	.LVL24:
 259              	.L19:
4764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 260              		.loc 1 4764 0
 261 0076 B823     		movs	r3, #184
 262 0078 CDE7     		b	.L15
 263              	.L24:
 264 007a 00BF     		.align	2
 265              	.L23:
 266 007c 00000000 		.word	I2C_Master_ISR_DMA
 267 0080 00000000 		.word	I2C_Slave_ISR_DMA
 268              		.cfi_endproc
 269              	.LFE209:
 271              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
 272              		.align	1
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv5-d16
 278              	I2C_Disable_IRQ:
 279              	.LFB210:
4793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
ARM GAS  /tmp/cciXgPzD.s 			page 90


4795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
4796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
4799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
4802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 280              		.loc 1 4802 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285              	.LVL25:
 286 0000 10B4     		push	{r4}
 287              	.LCFI2:
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 4, -4
 290              	.LVL26:
4803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
4804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 291              		.loc 1 4805 0
 292 0002 11F0010F 		tst	r1, #1
 293 0006 09D0     		beq	.L32
 294              	.LVL27:
4806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
4808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
4809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->State & HAL_I2C_STATE_LISTEN) != HAL_I2C_STATE_LISTEN)
 295              		.loc 1 4810 0
 296 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 297 000c 03F02803 		and	r3, r3, #40
 298 0010 282B     		cmp	r3, #40
 299 0012 01D0     		beq	.L36
4811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
4813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 300              		.loc 1 4813 0
 301 0014 F223     		movs	r3, #242
 302 0016 02E0     		b	.L26
 303              	.L36:
4808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 304              		.loc 1 4808 0
 305 0018 4223     		movs	r3, #66
 306 001a 00E0     		b	.L26
 307              	.LVL28:
 308              	.L32:
4803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 309              		.loc 1 4803 0
 310 001c 0023     		movs	r3, #0
 311              	.LVL29:
 312              	.L26:
4814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 91


4817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 313              		.loc 1 4817 0
 314 001e 11F0020F 		tst	r1, #2
 315 0022 09D0     		beq	.L27
4818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
4820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 316              		.loc 1 4820 0
 317 0024 43F04404 		orr	r4, r3, #68
 318              	.LVL30:
4821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->State & HAL_I2C_STATE_LISTEN) != HAL_I2C_STATE_LISTEN)
 319              		.loc 1 4822 0
 320 0028 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 321 002c 02F02802 		and	r2, r2, #40
 322 0030 282A     		cmp	r2, #40
 323 0032 19D0     		beq	.L34
4823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
4825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 324              		.loc 1 4825 0
 325 0034 43F0F403 		orr	r3, r3, #244
 326              	.LVL31:
 327              	.L27:
4826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 328              		.loc 1 4829 0
 329 0038 11F0040F 		tst	r1, #4
 330 003c 01D0     		beq	.L28
4830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
4832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 331              		.loc 1 4832 0
 332 003e 43F0B803 		orr	r3, r3, #184
 333              	.LVL32:
 334              	.L28:
4833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
 335              		.loc 1 4835 0
 336 0042 01F01102 		and	r2, r1, #17
 337 0046 112A     		cmp	r2, #17
 338 0048 10D0     		beq	.L37
 339              	.L29:
 340 004a 01F01201 		and	r1, r1, #18
 341              	.LVL33:
4836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
4838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
4839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 342              		.loc 1 4841 0
 343 004e 1229     		cmp	r1, #18
 344 0050 0FD0     		beq	.L38
ARM GAS  /tmp/cciXgPzD.s 			page 92


 345              	.L30:
4842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupts */
4844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
4845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
 346              		.loc 1 4847 0
 347 0052 1229     		cmp	r1, #18
 348 0054 10D0     		beq	.L39
 349              	.L31:
4848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable TC interrupts */
4850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
4851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable interrupts only at the end */
4854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
4855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* all disable interrupts request are not done */
4856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 350              		.loc 1 4856 0
 351 0056 0168     		ldr	r1, [r0]
 352 0058 0A68     		ldr	r2, [r1]
 353 005a 22EA0303 		bic	r3, r2, r3
 354              	.LVL34:
 355 005e 0B60     		str	r3, [r1]
4857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 356              		.loc 1 4859 0
 357 0060 0020     		movs	r0, #0
 358              	.LVL35:
 359 0062 5DF8044B 		ldr	r4, [sp], #4
 360              	.LCFI3:
 361              		.cfi_remember_state
 362              		.cfi_restore 4
 363              		.cfi_def_cfa_offset 0
 364 0066 7047     		bx	lr
 365              	.LVL36:
 366              	.L34:
 367              	.LCFI4:
 368              		.cfi_restore_state
4820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 369              		.loc 1 4820 0
 370 0068 2346     		mov	r3, r4
 371 006a E5E7     		b	.L27
 372              	.LVL37:
 373              	.L37:
4838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 374              		.loc 1 4838 0
 375 006c 43F09003 		orr	r3, r3, #144
 376              	.LVL38:
 377 0070 EBE7     		b	.L29
 378              	.LVL39:
 379              	.L38:
4844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 380              		.loc 1 4844 0
ARM GAS  /tmp/cciXgPzD.s 			page 93


 381 0072 43F02003 		orr	r3, r3, #32
 382              	.LVL40:
 383 0076 ECE7     		b	.L30
 384              	.L39:
4850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 385              		.loc 1 4850 0
 386 0078 43F04003 		orr	r3, r3, #64
 387              	.LVL41:
 388 007c EBE7     		b	.L31
 389              		.cfi_endproc
 390              	.LFE210:
 392              		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 393              		.align	1
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu fpv5-d16
 399              	I2C_IsAcknowledgeFailed:
 400              	.LFB207:
4644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 401              		.loc 1 4644 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              	.LVL42:
 406 0000 70B5     		push	{r4, r5, r6, lr}
 407              	.LCFI5:
 408              		.cfi_def_cfa_offset 16
 409              		.cfi_offset 4, -16
 410              		.cfi_offset 5, -12
 411              		.cfi_offset 6, -8
 412              		.cfi_offset 14, -4
 413 0002 0446     		mov	r4, r0
 414 0004 0D46     		mov	r5, r1
 415 0006 1646     		mov	r6, r2
4645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 416              		.loc 1 4645 0
 417 0008 0368     		ldr	r3, [r0]
 418 000a 9B69     		ldr	r3, [r3, #24]
 419 000c 13F0100F 		tst	r3, #16
 420 0010 17D0     		beq	.L47
 421              	.LVL43:
 422              	.L43:
4649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 423              		.loc 1 4649 0
 424 0012 2368     		ldr	r3, [r4]
 425 0014 9A69     		ldr	r2, [r3, #24]
 426 0016 12F0200F 		tst	r2, #32
 427 001a 14D1     		bne	.L48
4652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 428              		.loc 1 4652 0
 429 001c B5F1FF3F 		cmp	r5, #-1
 430 0020 F7D0     		beq	.L43
4654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 431              		.loc 1 4654 0
 432 0022 25B1     		cbz	r5, .L44
4654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
ARM GAS  /tmp/cciXgPzD.s 			page 94


 433              		.loc 1 4654 0 is_stmt 0 discriminator 1
 434 0024 FFF7FEFF 		bl	HAL_GetTick
 435              	.LVL44:
 436 0028 801B     		subs	r0, r0, r6
 437 002a A842     		cmp	r0, r5
 438 002c F1D9     		bls	.L43
 439              	.L44:
4656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 440              		.loc 1 4656 0 is_stmt 1
 441 002e 2023     		movs	r3, #32
 442 0030 84F84130 		strb	r3, [r4, #65]
4657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 443              		.loc 1 4657 0
 444 0034 0023     		movs	r3, #0
 445 0036 84F84230 		strb	r3, [r4, #66]
4660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_TIMEOUT;
 446              		.loc 1 4660 0
 447 003a 84F84030 		strb	r3, [r4, #64]
4661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 448              		.loc 1 4661 0
 449 003e 0320     		movs	r0, #3
 450 0040 1EE0     		b	.L42
 451              	.LVL45:
 452              	.L47:
4687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 453              		.loc 1 4687 0
 454 0042 0020     		movs	r0, #0
 455              	.LVL46:
 456 0044 1CE0     		b	.L42
 457              	.LVL47:
 458              	.L48:
4667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 459              		.loc 1 4667 0
 460 0046 1022     		movs	r2, #16
 461 0048 DA61     		str	r2, [r3, #28]
4670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 462              		.loc 1 4670 0
 463 004a 2368     		ldr	r3, [r4]
 464 004c 2025     		movs	r5, #32
 465              	.LVL48:
 466 004e DD61     		str	r5, [r3, #28]
4673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 467              		.loc 1 4673 0
 468 0050 2046     		mov	r0, r4
 469 0052 FFF7FEFF 		bl	I2C_Flush_TXDR
 470              	.LVL49:
4676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 471              		.loc 1 4676 0
 472 0056 2268     		ldr	r2, [r4]
 473 0058 5368     		ldr	r3, [r2, #4]
 474 005a 23F0FF73 		bic	r3, r3, #33423360
 475 005e 23F48B33 		bic	r3, r3, #71168
 476 0062 23F4FF73 		bic	r3, r3, #510
 477 0066 23F00103 		bic	r3, r3, #1
 478 006a 5360     		str	r3, [r2, #4]
4678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 479              		.loc 1 4678 0
ARM GAS  /tmp/cciXgPzD.s 			page 95


 480 006c 0423     		movs	r3, #4
 481 006e 6364     		str	r3, [r4, #68]
4679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 482              		.loc 1 4679 0
 483 0070 84F84150 		strb	r5, [r4, #65]
4680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 484              		.loc 1 4680 0
 485 0074 0023     		movs	r3, #0
 486 0076 84F84230 		strb	r3, [r4, #66]
4683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 487              		.loc 1 4683 0
 488 007a 84F84030 		strb	r3, [r4, #64]
4685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 489              		.loc 1 4685 0
 490 007e 0120     		movs	r0, #1
 491              	.L42:
4688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 492              		.loc 1 4688 0
 493 0080 70BD     		pop	{r4, r5, r6, pc}
 494              		.cfi_endproc
 495              	.LFE207:
 497              		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 498              		.align	1
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv5-d16
 504              	I2C_WaitOnTXISFlagUntilTimeout:
 505              	.LFB204:
4510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 506              		.loc 1 4510 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              	.LVL50:
 511 0000 70B5     		push	{r4, r5, r6, lr}
 512              	.LCFI6:
 513              		.cfi_def_cfa_offset 16
 514              		.cfi_offset 4, -16
 515              		.cfi_offset 5, -12
 516              		.cfi_offset 6, -8
 517              		.cfi_offset 14, -4
 518 0002 0446     		mov	r4, r0
 519 0004 0D46     		mov	r5, r1
 520 0006 1646     		mov	r6, r2
 521              	.LVL51:
 522              	.L52:
4511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 523              		.loc 1 4511 0
 524 0008 2368     		ldr	r3, [r4]
 525 000a 9B69     		ldr	r3, [r3, #24]
 526 000c 13F0020F 		tst	r3, #2
 527 0010 1CD1     		bne	.L57
4514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 528              		.loc 1 4514 0
 529 0012 3246     		mov	r2, r6
 530 0014 2946     		mov	r1, r5
ARM GAS  /tmp/cciXgPzD.s 			page 96


 531 0016 2046     		mov	r0, r4
 532 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 533              	.LVL52:
 534 001c C0B9     		cbnz	r0, .L55
4520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 535              		.loc 1 4520 0
 536 001e B5F1FF3F 		cmp	r5, #-1
 537 0022 F1D0     		beq	.L52
4522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 538              		.loc 1 4522 0
 539 0024 25B1     		cbz	r5, .L53
4522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 540              		.loc 1 4522 0 is_stmt 0 discriminator 1
 541 0026 FFF7FEFF 		bl	HAL_GetTick
 542              	.LVL53:
 543 002a 801B     		subs	r0, r0, r6
 544 002c A842     		cmp	r0, r5
 545 002e EBD9     		bls	.L52
 546              	.L53:
4524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 547              		.loc 1 4524 0 is_stmt 1
 548 0030 636C     		ldr	r3, [r4, #68]
 549 0032 43F02003 		orr	r3, r3, #32
 550 0036 6364     		str	r3, [r4, #68]
4525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 551              		.loc 1 4525 0
 552 0038 2023     		movs	r3, #32
 553 003a 84F84130 		strb	r3, [r4, #65]
4526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 554              		.loc 1 4526 0
 555 003e 0023     		movs	r3, #0
 556 0040 84F84230 		strb	r3, [r4, #66]
4529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 557              		.loc 1 4529 0
 558 0044 84F84030 		strb	r3, [r4, #64]
4531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 559              		.loc 1 4531 0
 560 0048 0320     		movs	r0, #3
 561 004a 00E0     		b	.L51
 562              	.L57:
4535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 563              		.loc 1 4535 0
 564 004c 0020     		movs	r0, #0
 565              	.L51:
4536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 566              		.loc 1 4536 0
 567 004e 70BD     		pop	{r4, r5, r6, pc}
 568              	.LVL54:
 569              	.L55:
4516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 570              		.loc 1 4516 0
 571 0050 0120     		movs	r0, #1
 572 0052 FCE7     		b	.L51
 573              		.cfi_endproc
 574              	.LFE204:
 576              		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 577              		.align	1
ARM GAS  /tmp/cciXgPzD.s 			page 97


 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv5-d16
 583              	I2C_WaitOnFlagUntilTimeout:
 584              	.LFB203:
4481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 585              		.loc 1 4481 0
 586              		.cfi_startproc
 587              		@ args = 4, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              	.LVL55:
 590 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 591              	.LCFI7:
 592              		.cfi_def_cfa_offset 24
 593              		.cfi_offset 3, -24
 594              		.cfi_offset 4, -20
 595              		.cfi_offset 5, -16
 596              		.cfi_offset 6, -12
 597              		.cfi_offset 7, -8
 598              		.cfi_offset 14, -4
 599 0002 0546     		mov	r5, r0
 600 0004 0F46     		mov	r7, r1
 601 0006 1646     		mov	r6, r2
 602 0008 1C46     		mov	r4, r3
 603              	.LVL56:
 604              	.L60:
4482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 605              		.loc 1 4482 0
 606 000a 2B68     		ldr	r3, [r5]
 607 000c 9B69     		ldr	r3, [r3, #24]
 608 000e 37EA0303 		bics	r3, r7, r3
 609 0012 0CBF     		ite	eq
 610 0014 0123     		moveq	r3, #1
 611 0016 0023     		movne	r3, #0
 612 0018 B342     		cmp	r3, r6
 613 001a 13D1     		bne	.L65
4485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 614              		.loc 1 4485 0
 615 001c B4F1FF3F 		cmp	r4, #-1
 616 0020 F3D0     		beq	.L60
4487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 617              		.loc 1 4487 0
 618 0022 2CB1     		cbz	r4, .L61
4487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 619              		.loc 1 4487 0 is_stmt 0 discriminator 1
 620 0024 FFF7FEFF 		bl	HAL_GetTick
 621              	.LVL57:
 622 0028 069B     		ldr	r3, [sp, #24]
 623 002a C01A     		subs	r0, r0, r3
 624 002c A042     		cmp	r0, r4
 625 002e ECD9     		bls	.L60
 626              	.L61:
4489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 627              		.loc 1 4489 0 is_stmt 1
 628 0030 2023     		movs	r3, #32
 629 0032 85F84130 		strb	r3, [r5, #65]
ARM GAS  /tmp/cciXgPzD.s 			page 98


4490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 630              		.loc 1 4490 0
 631 0036 0023     		movs	r3, #0
 632 0038 85F84230 		strb	r3, [r5, #66]
4493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 633              		.loc 1 4493 0
 634 003c 85F84030 		strb	r3, [r5, #64]
4494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 635              		.loc 1 4494 0
 636 0040 0320     		movs	r0, #3
 637 0042 00E0     		b	.L62
 638              	.L65:
4498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 639              		.loc 1 4498 0
 640 0044 0020     		movs	r0, #0
 641              	.L62:
4499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 642              		.loc 1 4499 0
 643 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 644              		.cfi_endproc
 645              	.LFE203:
 647              		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 648              		.align	1
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 652              		.fpu fpv5-d16
 654              	I2C_RequestMemoryWrite:
 655              	.LFB187:
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 656              		.loc 1 3649 0
 657              		.cfi_startproc
 658              		@ args = 8, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              	.LVL58:
 661 0000 70B5     		push	{r4, r5, r6, lr}
 662              	.LCFI8:
 663              		.cfi_def_cfa_offset 16
 664              		.cfi_offset 4, -16
 665              		.cfi_offset 5, -12
 666              		.cfi_offset 6, -8
 667              		.cfi_offset 14, -4
 668 0002 82B0     		sub	sp, sp, #8
 669              	.LCFI9:
 670              		.cfi_def_cfa_offset 24
 671 0004 0446     		mov	r4, r0
 672 0006 1646     		mov	r6, r2
 673 0008 1D46     		mov	r5, r3
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 674              		.loc 1 3650 0
 675 000a 1E4B     		ldr	r3, .L75
 676              	.LVL59:
 677 000c 0093     		str	r3, [sp]
 678 000e 4FF08073 		mov	r3, #16777216
 679 0012 EAB2     		uxtb	r2, r5
 680              	.LVL60:
 681 0014 FFF7FEFF 		bl	I2C_TransferConfig
ARM GAS  /tmp/cciXgPzD.s 			page 99


 682              	.LVL61:
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 683              		.loc 1 3653 0
 684 0018 079A     		ldr	r2, [sp, #28]
 685 001a 0699     		ldr	r1, [sp, #24]
 686 001c 2046     		mov	r0, r4
 687 001e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 688              	.LVL62:
 689 0022 30B1     		cbz	r0, .L67
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 690              		.loc 1 3655 0
 691 0024 636C     		ldr	r3, [r4, #68]
 692 0026 042B     		cmp	r3, #4
 693 0028 27D1     		bne	.L72
3657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 694              		.loc 1 3657 0
 695 002a 0123     		movs	r3, #1
 696              	.L68:
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 697              		.loc 1 3701 0
 698 002c 1846     		mov	r0, r3
 699 002e 02B0     		add	sp, sp, #8
 700              	.LCFI10:
 701              		.cfi_remember_state
 702              		.cfi_def_cfa_offset 16
 703              		@ sp needed
 704 0030 70BD     		pop	{r4, r5, r6, pc}
 705              	.LVL63:
 706              	.L67:
 707              	.LCFI11:
 708              		.cfi_restore_state
3666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 709              		.loc 1 3666 0
 710 0032 012D     		cmp	r5, #1
 711 0034 0FD1     		bne	.L69
3669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 712              		.loc 1 3669 0
 713 0036 2368     		ldr	r3, [r4]
 714 0038 F6B2     		uxtb	r6, r6
 715 003a 9E62     		str	r6, [r3, #40]
 716              	.L70:
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 717              		.loc 1 3695 0
 718 003c 079B     		ldr	r3, [sp, #28]
 719 003e 0093     		str	r3, [sp]
 720 0040 069B     		ldr	r3, [sp, #24]
 721 0042 0022     		movs	r2, #0
 722 0044 8021     		movs	r1, #128
 723 0046 2046     		mov	r0, r4
 724 0048 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 725              	.LVL64:
 726 004c 0346     		mov	r3, r0
 727 004e 0028     		cmp	r0, #0
 728 0050 ECD0     		beq	.L68
3697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 729              		.loc 1 3697 0
 730 0052 0323     		movs	r3, #3
ARM GAS  /tmp/cciXgPzD.s 			page 100


 731 0054 EAE7     		b	.L68
 732              	.L69:
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 733              		.loc 1 3675 0
 734 0056 2368     		ldr	r3, [r4]
 735 0058 320A     		lsrs	r2, r6, #8
 736 005a 9A62     		str	r2, [r3, #40]
3678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 737              		.loc 1 3678 0
 738 005c 079A     		ldr	r2, [sp, #28]
 739 005e 0699     		ldr	r1, [sp, #24]
 740 0060 2046     		mov	r0, r4
 741 0062 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 742              	.LVL65:
 743 0066 20B1     		cbz	r0, .L71
3680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 744              		.loc 1 3680 0
 745 0068 636C     		ldr	r3, [r4, #68]
 746 006a 042B     		cmp	r3, #4
 747 006c 07D1     		bne	.L73
3682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 748              		.loc 1 3682 0
 749 006e 0123     		movs	r3, #1
 750 0070 DCE7     		b	.L68
 751              	.L71:
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 752              		.loc 1 3691 0
 753 0072 2368     		ldr	r3, [r4]
 754 0074 F6B2     		uxtb	r6, r6
 755 0076 9E62     		str	r6, [r3, #40]
 756 0078 E0E7     		b	.L70
 757              	.L72:
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 758              		.loc 1 3661 0
 759 007a 0323     		movs	r3, #3
 760 007c D6E7     		b	.L68
 761              	.L73:
3686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 762              		.loc 1 3686 0
 763 007e 0323     		movs	r3, #3
 764 0080 D4E7     		b	.L68
 765              	.L76:
 766 0082 00BF     		.align	2
 767              	.L75:
 768 0084 00200080 		.word	-2147475456
 769              		.cfi_endproc
 770              	.LFE187:
 772              		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 773              		.align	1
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu fpv5-d16
 779              	I2C_RequestMemoryRead:
 780              	.LFB188:
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 781              		.loc 1 3716 0
ARM GAS  /tmp/cciXgPzD.s 			page 101


 782              		.cfi_startproc
 783              		@ args = 8, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              	.LVL66:
 786 0000 70B5     		push	{r4, r5, r6, lr}
 787              	.LCFI12:
 788              		.cfi_def_cfa_offset 16
 789              		.cfi_offset 4, -16
 790              		.cfi_offset 5, -12
 791              		.cfi_offset 6, -8
 792              		.cfi_offset 14, -4
 793 0002 82B0     		sub	sp, sp, #8
 794              	.LCFI13:
 795              		.cfi_def_cfa_offset 24
 796 0004 0446     		mov	r4, r0
 797 0006 1646     		mov	r6, r2
 798 0008 1D46     		mov	r5, r3
3717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 799              		.loc 1 3717 0
 800 000a 1D4B     		ldr	r3, .L86
 801              	.LVL67:
 802 000c 0093     		str	r3, [sp]
 803 000e 0023     		movs	r3, #0
 804 0010 EAB2     		uxtb	r2, r5
 805              	.LVL68:
 806 0012 FFF7FEFF 		bl	I2C_TransferConfig
 807              	.LVL69:
3720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 808              		.loc 1 3720 0
 809 0016 079A     		ldr	r2, [sp, #28]
 810 0018 0699     		ldr	r1, [sp, #24]
 811 001a 2046     		mov	r0, r4
 812 001c FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 813              	.LVL70:
 814 0020 30B1     		cbz	r0, .L78
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 815              		.loc 1 3722 0
 816 0022 636C     		ldr	r3, [r4, #68]
 817 0024 042B     		cmp	r3, #4
 818 0026 27D1     		bne	.L83
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 819              		.loc 1 3724 0
 820 0028 0123     		movs	r3, #1
 821              	.L79:
3768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 822              		.loc 1 3768 0
 823 002a 1846     		mov	r0, r3
 824 002c 02B0     		add	sp, sp, #8
 825              	.LCFI14:
 826              		.cfi_remember_state
 827              		.cfi_def_cfa_offset 16
 828              		@ sp needed
 829 002e 70BD     		pop	{r4, r5, r6, pc}
 830              	.LVL71:
 831              	.L78:
 832              	.LCFI15:
 833              		.cfi_restore_state
ARM GAS  /tmp/cciXgPzD.s 			page 102


3733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 834              		.loc 1 3733 0
 835 0030 012D     		cmp	r5, #1
 836 0032 0FD1     		bne	.L80
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 837              		.loc 1 3736 0
 838 0034 2368     		ldr	r3, [r4]
 839 0036 F6B2     		uxtb	r6, r6
 840 0038 9E62     		str	r6, [r3, #40]
 841              	.L81:
3762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 842              		.loc 1 3762 0
 843 003a 079B     		ldr	r3, [sp, #28]
 844 003c 0093     		str	r3, [sp]
 845 003e 069B     		ldr	r3, [sp, #24]
 846 0040 0022     		movs	r2, #0
 847 0042 4021     		movs	r1, #64
 848 0044 2046     		mov	r0, r4
 849 0046 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 850              	.LVL72:
 851 004a 0346     		mov	r3, r0
 852 004c 0028     		cmp	r0, #0
 853 004e ECD0     		beq	.L79
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 854              		.loc 1 3764 0
 855 0050 0323     		movs	r3, #3
 856 0052 EAE7     		b	.L79
 857              	.L80:
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 858              		.loc 1 3742 0
 859 0054 2368     		ldr	r3, [r4]
 860 0056 320A     		lsrs	r2, r6, #8
 861 0058 9A62     		str	r2, [r3, #40]
3745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 862              		.loc 1 3745 0
 863 005a 079A     		ldr	r2, [sp, #28]
 864 005c 0699     		ldr	r1, [sp, #24]
 865 005e 2046     		mov	r0, r4
 866 0060 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 867              	.LVL73:
 868 0064 20B1     		cbz	r0, .L82
3747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 869              		.loc 1 3747 0
 870 0066 636C     		ldr	r3, [r4, #68]
 871 0068 042B     		cmp	r3, #4
 872 006a 07D1     		bne	.L84
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 873              		.loc 1 3749 0
 874 006c 0123     		movs	r3, #1
 875 006e DCE7     		b	.L79
 876              	.L82:
3758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 877              		.loc 1 3758 0
 878 0070 2368     		ldr	r3, [r4]
 879 0072 F6B2     		uxtb	r6, r6
 880 0074 9E62     		str	r6, [r3, #40]
 881 0076 E0E7     		b	.L81
ARM GAS  /tmp/cciXgPzD.s 			page 103


 882              	.L83:
3728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 883              		.loc 1 3728 0
 884 0078 0323     		movs	r3, #3
 885 007a D6E7     		b	.L79
 886              	.L84:
3753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 887              		.loc 1 3753 0
 888 007c 0323     		movs	r3, #3
 889 007e D4E7     		b	.L79
 890              	.L87:
 891              		.align	2
 892              	.L86:
 893 0080 00200080 		.word	-2147475456
 894              		.cfi_endproc
 895              	.LFE188:
 897              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 898              		.align	1
 899              		.syntax unified
 900              		.thumb
 901              		.thumb_func
 902              		.fpu fpv5-d16
 904              	I2C_WaitOnSTOPFlagUntilTimeout:
 905              	.LFB205:
4547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 906              		.loc 1 4547 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 0
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910              	.LVL74:
 911 0000 70B5     		push	{r4, r5, r6, lr}
 912              	.LCFI16:
 913              		.cfi_def_cfa_offset 16
 914              		.cfi_offset 4, -16
 915              		.cfi_offset 5, -12
 916              		.cfi_offset 6, -8
 917              		.cfi_offset 14, -4
 918 0002 0546     		mov	r5, r0
 919 0004 0C46     		mov	r4, r1
 920 0006 1646     		mov	r6, r2
 921              	.LVL75:
 922              	.L89:
4548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 923              		.loc 1 4548 0
 924 0008 2B68     		ldr	r3, [r5]
 925 000a 9B69     		ldr	r3, [r3, #24]
 926 000c 13F0200F 		tst	r3, #32
 927 0010 19D1     		bne	.L95
4551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 928              		.loc 1 4551 0
 929 0012 3246     		mov	r2, r6
 930 0014 2146     		mov	r1, r4
 931 0016 2846     		mov	r0, r5
 932 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 933              	.LVL76:
 934 001c A8B9     		cbnz	r0, .L93
4557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/cciXgPzD.s 			page 104


 935              		.loc 1 4557 0
 936 001e 24B1     		cbz	r4, .L91
4557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 937              		.loc 1 4557 0 is_stmt 0 discriminator 1
 938 0020 FFF7FEFF 		bl	HAL_GetTick
 939              	.LVL77:
 940 0024 801B     		subs	r0, r0, r6
 941 0026 A042     		cmp	r0, r4
 942 0028 EED9     		bls	.L89
 943              	.L91:
4559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 944              		.loc 1 4559 0 is_stmt 1
 945 002a 6B6C     		ldr	r3, [r5, #68]
 946 002c 43F02003 		orr	r3, r3, #32
 947 0030 6B64     		str	r3, [r5, #68]
4560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 948              		.loc 1 4560 0
 949 0032 2023     		movs	r3, #32
 950 0034 85F84130 		strb	r3, [r5, #65]
4561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 951              		.loc 1 4561 0
 952 0038 0023     		movs	r3, #0
 953 003a 85F84230 		strb	r3, [r5, #66]
4564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 954              		.loc 1 4564 0
 955 003e 85F84030 		strb	r3, [r5, #64]
4566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 956              		.loc 1 4566 0
 957 0042 0320     		movs	r0, #3
 958              	.L90:
4570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 959              		.loc 1 4570 0
 960 0044 70BD     		pop	{r4, r5, r6, pc}
 961              	.LVL78:
 962              	.L95:
4569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 963              		.loc 1 4569 0
 964 0046 0020     		movs	r0, #0
 965 0048 FCE7     		b	.L90
 966              	.L93:
4553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 967              		.loc 1 4553 0
 968 004a 0120     		movs	r0, #1
 969 004c FAE7     		b	.L90
 970              		.cfi_endproc
 971              	.LFE205:
 973              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 974              		.align	1
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 978              		.fpu fpv5-d16
 980              	I2C_WaitOnRXNEFlagUntilTimeout:
 981              	.LFB206:
4581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 982              		.loc 1 4581 0
 983              		.cfi_startproc
ARM GAS  /tmp/cciXgPzD.s 			page 105


 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986              	.LVL79:
 987 0000 70B5     		push	{r4, r5, r6, lr}
 988              	.LCFI17:
 989              		.cfi_def_cfa_offset 16
 990              		.cfi_offset 4, -16
 991              		.cfi_offset 5, -12
 992              		.cfi_offset 6, -8
 993              		.cfi_offset 14, -4
 994 0002 0446     		mov	r4, r0
 995 0004 0D46     		mov	r5, r1
 996 0006 1646     		mov	r6, r2
 997              	.LVL80:
 998              	.L97:
4582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 999              		.loc 1 4582 0
 1000 0008 2368     		ldr	r3, [r4]
 1001 000a 9B69     		ldr	r3, [r3, #24]
 1002 000c 13F0040F 		tst	r3, #4
 1003 0010 3DD1     		bne	.L105
4585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1004              		.loc 1 4585 0
 1005 0012 3246     		mov	r2, r6
 1006 0014 2946     		mov	r1, r5
 1007 0016 2046     		mov	r0, r4
 1008 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 1009              	.LVL81:
 1010 001c 0146     		mov	r1, r0
 1011 001e 0028     		cmp	r0, #0
 1012 0020 37D1     		bne	.L103
4591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1013              		.loc 1 4591 0
 1014 0022 2368     		ldr	r3, [r4]
 1015 0024 9A69     		ldr	r2, [r3, #24]
 1016 0026 12F0200F 		tst	r2, #32
 1017 002a 12D1     		bne	.L106
4621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1018              		.loc 1 4621 0
 1019 002c 25B1     		cbz	r5, .L101
4621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1020              		.loc 1 4621 0 is_stmt 0 discriminator 1
 1021 002e FFF7FEFF 		bl	HAL_GetTick
 1022              	.LVL82:
 1023 0032 801B     		subs	r0, r0, r6
 1024 0034 A842     		cmp	r0, r5
 1025 0036 E7D9     		bls	.L97
 1026              	.L101:
4623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 1027              		.loc 1 4623 0 is_stmt 1
 1028 0038 636C     		ldr	r3, [r4, #68]
 1029 003a 43F02003 		orr	r3, r3, #32
 1030 003e 6364     		str	r3, [r4, #68]
4624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1031              		.loc 1 4624 0
 1032 0040 2023     		movs	r3, #32
 1033 0042 84F84130 		strb	r3, [r4, #65]
ARM GAS  /tmp/cciXgPzD.s 			page 106


4627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1034              		.loc 1 4627 0
 1035 0046 0023     		movs	r3, #0
 1036 0048 84F84030 		strb	r3, [r4, #64]
4629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1037              		.loc 1 4629 0
 1038 004c 0321     		movs	r1, #3
 1039              	.L98:
4633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1040              		.loc 1 4633 0
 1041 004e 0846     		mov	r0, r1
 1042 0050 70BD     		pop	{r4, r5, r6, pc}
 1043              	.LVL83:
 1044              	.L106:
4595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1045              		.loc 1 4595 0
 1046 0052 9A69     		ldr	r2, [r3, #24]
 1047 0054 12F0040F 		tst	r2, #4
 1048 0058 02D0     		beq	.L100
4595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1049              		.loc 1 4595 0 is_stmt 0 discriminator 1
 1050 005a 228D     		ldrh	r2, [r4, #40]
 1051 005c 002A     		cmp	r2, #0
 1052 005e F6D1     		bne	.L98
 1053              	.L100:
4604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1054              		.loc 1 4604 0 is_stmt 1
 1055 0060 2022     		movs	r2, #32
 1056 0062 DA61     		str	r2, [r3, #28]
4607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1057              		.loc 1 4607 0
 1058 0064 2168     		ldr	r1, [r4]
 1059 0066 4B68     		ldr	r3, [r1, #4]
 1060 0068 23F0FF73 		bic	r3, r3, #33423360
 1061 006c 23F48B33 		bic	r3, r3, #71168
 1062 0070 23F4FF73 		bic	r3, r3, #510
 1063 0074 23F00103 		bic	r3, r3, #1
 1064 0078 4B60     		str	r3, [r1, #4]
4609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 1065              		.loc 1 4609 0
 1066 007a 0023     		movs	r3, #0
 1067 007c 6364     		str	r3, [r4, #68]
4610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 1068              		.loc 1 4610 0
 1069 007e 84F84120 		strb	r2, [r4, #65]
4611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1070              		.loc 1 4611 0
 1071 0082 84F84230 		strb	r3, [r4, #66]
4614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1072              		.loc 1 4614 0
 1073 0086 84F84030 		strb	r3, [r4, #64]
4616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1074              		.loc 1 4616 0
 1075 008a 0121     		movs	r1, #1
 1076 008c DFE7     		b	.L98
 1077              	.L105:
4632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/cciXgPzD.s 			page 107


 1078              		.loc 1 4632 0
 1079 008e 0021     		movs	r1, #0
 1080 0090 DDE7     		b	.L98
 1081              	.L103:
4587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1082              		.loc 1 4587 0
 1083 0092 0121     		movs	r1, #1
 1084 0094 DBE7     		b	.L98
 1085              		.cfi_endproc
 1086              	.LFE206:
 1088              		.section	.text.I2C_DMAMasterTransmitCplt,"ax",%progbits
 1089              		.align	1
 1090              		.syntax unified
 1091              		.thumb
 1092              		.thumb_func
 1093              		.fpu fpv5-d16
 1095              	I2C_DMAMasterTransmitCplt:
 1096              	.LFB197:
4314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1097              		.loc 1 4314 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              	.LVL84:
 1102 0000 10B5     		push	{r4, lr}
 1103              	.LCFI18:
 1104              		.cfi_def_cfa_offset 8
 1105              		.cfi_offset 4, -8
 1106              		.cfi_offset 14, -4
4315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1107              		.loc 1 4315 0
 1108 0002 846B     		ldr	r4, [r0, #56]
 1109              	.LVL85:
4318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1110              		.loc 1 4318 0
 1111 0004 2268     		ldr	r2, [r4]
 1112 0006 1368     		ldr	r3, [r2]
 1113 0008 23F48043 		bic	r3, r3, #16384
 1114 000c 1360     		str	r3, [r2]
4321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1115              		.loc 1 4321 0
 1116 000e 638D     		ldrh	r3, [r4, #42]
 1117 0010 9BB2     		uxth	r3, r3
 1118 0012 A3B1     		cbz	r3, .L113
4330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1119              		.loc 1 4330 0
 1120 0014 238D     		ldrh	r3, [r4, #40]
 1121 0016 616A     		ldr	r1, [r4, #36]
 1122 0018 1944     		add	r1, r1, r3
 1123 001a 6162     		str	r1, [r4, #36]
4333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1124              		.loc 1 4333 0
 1125 001c 638D     		ldrh	r3, [r4, #42]
 1126 001e 9BB2     		uxth	r3, r3
 1127 0020 FF2B     		cmp	r3, #255
 1128 0022 11D9     		bls	.L110
4335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cciXgPzD.s 			page 108


 1129              		.loc 1 4335 0
 1130 0024 FF23     		movs	r3, #255
 1131 0026 2385     		strh	r3, [r4, #40]	@ movhi
 1132              	.L111:
4343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1133              		.loc 1 4343 0
 1134 0028 2268     		ldr	r2, [r4]
 1135 002a 238D     		ldrh	r3, [r4, #40]
 1136 002c 2832     		adds	r2, r2, #40
 1137 002e A06B     		ldr	r0, [r4, #56]
 1138              	.LVL86:
 1139 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1140              	.LVL87:
4346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1141              		.loc 1 4346 0
 1142 0034 1221     		movs	r1, #18
 1143 0036 2046     		mov	r0, r4
 1144 0038 FFF7FEFF 		bl	I2C_Enable_IRQ
 1145              	.LVL88:
 1146              	.L107:
4348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1147              		.loc 1 4348 0
 1148 003c 10BD     		pop	{r4, pc}
 1149              	.LVL89:
 1150              	.L113:
4324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1151              		.loc 1 4324 0
 1152 003e 1221     		movs	r1, #18
 1153 0040 2046     		mov	r0, r4
 1154              	.LVL90:
 1155 0042 FFF7FEFF 		bl	I2C_Enable_IRQ
 1156              	.LVL91:
 1157 0046 F9E7     		b	.L107
 1158              	.LVL92:
 1159              	.L110:
4339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1160              		.loc 1 4339 0
 1161 0048 638D     		ldrh	r3, [r4, #42]
 1162 004a 2385     		strh	r3, [r4, #40]	@ movhi
 1163 004c ECE7     		b	.L111
 1164              		.cfi_endproc
 1165              	.LFE197:
 1167              		.section	.text.I2C_DMAMasterReceiveCplt,"ax",%progbits
 1168              		.align	1
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1172              		.fpu fpv5-d16
 1174              	I2C_DMAMasterReceiveCplt:
 1175              	.LFB199:
4371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1176              		.loc 1 4371 0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180              	.LVL93:
 1181 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/cciXgPzD.s 			page 109


 1182              	.LCFI19:
 1183              		.cfi_def_cfa_offset 8
 1184              		.cfi_offset 4, -8
 1185              		.cfi_offset 14, -4
4372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1186              		.loc 1 4372 0
 1187 0002 846B     		ldr	r4, [r0, #56]
 1188              	.LVL94:
4375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1189              		.loc 1 4375 0
 1190 0004 2268     		ldr	r2, [r4]
 1191 0006 1368     		ldr	r3, [r2]
 1192 0008 23F40043 		bic	r3, r3, #32768
 1193 000c 1360     		str	r3, [r2]
4378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1194              		.loc 1 4378 0
 1195 000e 638D     		ldrh	r3, [r4, #42]
 1196 0010 9BB2     		uxth	r3, r3
 1197 0012 A3B1     		cbz	r3, .L120
4387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1198              		.loc 1 4387 0
 1199 0014 238D     		ldrh	r3, [r4, #40]
 1200 0016 626A     		ldr	r2, [r4, #36]
 1201 0018 1A44     		add	r2, r2, r3
 1202 001a 6262     		str	r2, [r4, #36]
4390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1203              		.loc 1 4390 0
 1204 001c 638D     		ldrh	r3, [r4, #42]
 1205 001e 9BB2     		uxth	r3, r3
 1206 0020 FF2B     		cmp	r3, #255
 1207 0022 11D9     		bls	.L117
4392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1208              		.loc 1 4392 0
 1209 0024 FF23     		movs	r3, #255
 1210 0026 2385     		strh	r3, [r4, #40]	@ movhi
 1211              	.L118:
4400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1212              		.loc 1 4400 0
 1213 0028 2168     		ldr	r1, [r4]
 1214 002a 238D     		ldrh	r3, [r4, #40]
 1215 002c 2431     		adds	r1, r1, #36
 1216 002e E06B     		ldr	r0, [r4, #60]
 1217              	.LVL95:
 1218 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1219              	.LVL96:
4403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1220              		.loc 1 4403 0
 1221 0034 1221     		movs	r1, #18
 1222 0036 2046     		mov	r0, r4
 1223 0038 FFF7FEFF 		bl	I2C_Enable_IRQ
 1224              	.LVL97:
 1225              	.L114:
4405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1226              		.loc 1 4405 0
 1227 003c 10BD     		pop	{r4, pc}
 1228              	.LVL98:
 1229              	.L120:
ARM GAS  /tmp/cciXgPzD.s 			page 110


4381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1230              		.loc 1 4381 0
 1231 003e 1221     		movs	r1, #18
 1232 0040 2046     		mov	r0, r4
 1233              	.LVL99:
 1234 0042 FFF7FEFF 		bl	I2C_Enable_IRQ
 1235              	.LVL100:
 1236 0046 F9E7     		b	.L114
 1237              	.LVL101:
 1238              	.L117:
4396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1239              		.loc 1 4396 0
 1240 0048 638D     		ldrh	r3, [r4, #42]
 1241 004a 2385     		strh	r3, [r4, #40]	@ movhi
 1242 004c ECE7     		b	.L118
 1243              		.cfi_endproc
 1244              	.LFE199:
 1246              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 1247              		.align	1
 1248              		.weak	HAL_I2C_MspInit
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1252              		.fpu fpv5-d16
 1254              	HAL_I2C_MspInit:
 1255              	.LFB140:
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1256              		.loc 1 534 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260              		@ link register save eliminated.
 1261              	.LVL102:
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1262              		.loc 1 541 0
 1263 0000 7047     		bx	lr
 1264              		.cfi_endproc
 1265              	.LFE140:
 1267              		.section	.text.HAL_I2C_Init,"ax",%progbits
 1268              		.align	1
 1269              		.global	HAL_I2C_Init
 1270              		.syntax unified
 1271              		.thumb
 1272              		.thumb_func
 1273              		.fpu fpv5-d16
 1275              	HAL_I2C_Init:
 1276              	.LFB138:
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1277              		.loc 1 411 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              	.LVL103:
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1282              		.loc 1 413 0
 1283 0000 0028     		cmp	r0, #0
 1284 0002 57D0     		beq	.L128
ARM GAS  /tmp/cciXgPzD.s 			page 111


 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1285              		.loc 1 411 0
 1286 0004 10B5     		push	{r4, lr}
 1287              	.LCFI20:
 1288              		.cfi_def_cfa_offset 8
 1289              		.cfi_offset 4, -8
 1290              		.cfi_offset 14, -4
 1291 0006 0446     		mov	r4, r0
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1292              		.loc 1 428 0
 1293 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1294 000c 002B     		cmp	r3, #0
 1295 000e 41D0     		beq	.L133
 1296              	.LVL104:
 1297              	.L124:
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1298              		.loc 1 437 0
 1299 0010 2423     		movs	r3, #36
 1300 0012 84F84130 		strb	r3, [r4, #65]
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1301              		.loc 1 440 0
 1302 0016 2268     		ldr	r2, [r4]
 1303 0018 1368     		ldr	r3, [r2]
 1304 001a 23F00103 		bic	r3, r3, #1
 1305 001e 1360     		str	r3, [r2]
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1306              		.loc 1 444 0
 1307 0020 6368     		ldr	r3, [r4, #4]
 1308 0022 2268     		ldr	r2, [r4]
 1309 0024 23F07063 		bic	r3, r3, #251658240
 1310 0028 1361     		str	r3, [r2, #16]
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1311              		.loc 1 448 0
 1312 002a 2268     		ldr	r2, [r4]
 1313 002c 9368     		ldr	r3, [r2, #8]
 1314 002e 23F40043 		bic	r3, r3, #32768
 1315 0032 9360     		str	r3, [r2, #8]
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1316              		.loc 1 451 0
 1317 0034 E368     		ldr	r3, [r4, #12]
 1318 0036 012B     		cmp	r3, #1
 1319 0038 31D0     		beq	.L134
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1320              		.loc 1 457 0
 1321 003a A368     		ldr	r3, [r4, #8]
 1322 003c 2268     		ldr	r2, [r4]
 1323 003e 43F40443 		orr	r3, r3, #33792
 1324 0042 9360     		str	r3, [r2, #8]
 1325              	.L126:
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1326              		.loc 1 462 0
 1327 0044 E368     		ldr	r3, [r4, #12]
 1328 0046 022B     		cmp	r3, #2
 1329 0048 2FD0     		beq	.L135
 1330              	.L127:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1331              		.loc 1 467 0
ARM GAS  /tmp/cciXgPzD.s 			page 112


 1332 004a 2268     		ldr	r2, [r4]
 1333 004c 5168     		ldr	r1, [r2, #4]
 1334 004e 1A4B     		ldr	r3, .L136
 1335 0050 0B43     		orrs	r3, r3, r1
 1336 0052 5360     		str	r3, [r2, #4]
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1337              		.loc 1 471 0
 1338 0054 2268     		ldr	r2, [r4]
 1339 0056 D368     		ldr	r3, [r2, #12]
 1340 0058 23F40043 		bic	r3, r3, #32768
 1341 005c D360     		str	r3, [r2, #12]
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1342              		.loc 1 474 0
 1343 005e 2369     		ldr	r3, [r4, #16]
 1344 0060 6269     		ldr	r2, [r4, #20]
 1345 0062 1343     		orrs	r3, r3, r2
 1346 0064 A169     		ldr	r1, [r4, #24]
 1347 0066 2268     		ldr	r2, [r4]
 1348 0068 43EA0123 		orr	r3, r3, r1, lsl #8
 1349 006c D360     		str	r3, [r2, #12]
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1350              		.loc 1 478 0
 1351 006e E369     		ldr	r3, [r4, #28]
 1352 0070 216A     		ldr	r1, [r4, #32]
 1353 0072 2268     		ldr	r2, [r4]
 1354 0074 0B43     		orrs	r3, r3, r1
 1355 0076 1360     		str	r3, [r2]
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1356              		.loc 1 481 0
 1357 0078 2268     		ldr	r2, [r4]
 1358 007a 1368     		ldr	r3, [r2]
 1359 007c 43F00103 		orr	r3, r3, #1
 1360 0080 1360     		str	r3, [r2]
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1361              		.loc 1 483 0
 1362 0082 0020     		movs	r0, #0
 1363 0084 6064     		str	r0, [r4, #68]
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1364              		.loc 1 484 0
 1365 0086 2023     		movs	r3, #32
 1366 0088 84F84130 		strb	r3, [r4, #65]
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1367              		.loc 1 485 0
 1368 008c 2063     		str	r0, [r4, #48]
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1369              		.loc 1 486 0
 1370 008e 84F84200 		strb	r0, [r4, #66]
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1371              		.loc 1 489 0
 1372 0092 10BD     		pop	{r4, pc}
 1373              	.LVL105:
 1374              	.L133:
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1375              		.loc 1 431 0
 1376 0094 80F84030 		strb	r3, [r0, #64]
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1377              		.loc 1 434 0
ARM GAS  /tmp/cciXgPzD.s 			page 113


 1378 0098 FFF7FEFF 		bl	HAL_I2C_MspInit
 1379              	.LVL106:
 1380 009c B8E7     		b	.L124
 1381              	.L134:
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1382              		.loc 1 453 0
 1383 009e A368     		ldr	r3, [r4, #8]
 1384 00a0 2268     		ldr	r2, [r4]
 1385 00a2 43F40043 		orr	r3, r3, #32768
 1386 00a6 9360     		str	r3, [r2, #8]
 1387 00a8 CCE7     		b	.L126
 1388              	.L135:
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1389              		.loc 1 464 0
 1390 00aa 2368     		ldr	r3, [r4]
 1391 00ac 4FF40062 		mov	r2, #2048
 1392 00b0 5A60     		str	r2, [r3, #4]
 1393 00b2 CAE7     		b	.L127
 1394              	.LVL107:
 1395              	.L128:
 1396              	.LCFI21:
 1397              		.cfi_def_cfa_offset 0
 1398              		.cfi_restore 4
 1399              		.cfi_restore 14
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1400              		.loc 1 415 0
 1401 00b4 0120     		movs	r0, #1
 1402              	.LVL108:
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1403              		.loc 1 489 0
 1404 00b6 7047     		bx	lr
 1405              	.L137:
 1406              		.align	2
 1407              	.L136:
 1408 00b8 00800002 		.word	33587200
 1409              		.cfi_endproc
 1410              	.LFE138:
 1412              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 1413              		.align	1
 1414              		.weak	HAL_I2C_MspDeInit
 1415              		.syntax unified
 1416              		.thumb
 1417              		.thumb_func
 1418              		.fpu fpv5-d16
 1420              	HAL_I2C_MspDeInit:
 1421              	.LFB141:
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1422              		.loc 1 550 0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 0
 1425              		@ frame_needed = 0, uses_anonymous_args = 0
 1426              		@ link register save eliminated.
 1427              	.LVL109:
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1428              		.loc 1 557 0
 1429 0000 7047     		bx	lr
 1430              		.cfi_endproc
ARM GAS  /tmp/cciXgPzD.s 			page 114


 1431              	.LFE141:
 1433              		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 1434              		.align	1
 1435              		.global	HAL_I2C_DeInit
 1436              		.syntax unified
 1437              		.thumb
 1438              		.thumb_func
 1439              		.fpu fpv5-d16
 1441              	HAL_I2C_DeInit:
 1442              	.LFB139:
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1443              		.loc 1 498 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 0
 1446              		@ frame_needed = 0, uses_anonymous_args = 0
 1447              	.LVL110:
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1448              		.loc 1 500 0
 1449 0000 A8B1     		cbz	r0, .L141
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1450              		.loc 1 498 0
 1451 0002 10B5     		push	{r4, lr}
 1452              	.LCFI22:
 1453              		.cfi_def_cfa_offset 8
 1454              		.cfi_offset 4, -8
 1455              		.cfi_offset 14, -4
 1456 0004 0446     		mov	r4, r0
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1457              		.loc 1 508 0
 1458 0006 2423     		movs	r3, #36
 1459 0008 80F84130 		strb	r3, [r0, #65]
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1460              		.loc 1 511 0
 1461 000c 0268     		ldr	r2, [r0]
 1462 000e 1368     		ldr	r3, [r2]
 1463 0010 23F00103 		bic	r3, r3, #1
 1464 0014 1360     		str	r3, [r2]
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1465              		.loc 1 514 0
 1466 0016 FFF7FEFF 		bl	HAL_I2C_MspDeInit
 1467              	.LVL111:
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1468              		.loc 1 516 0
 1469 001a 0020     		movs	r0, #0
 1470 001c 6064     		str	r0, [r4, #68]
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1471              		.loc 1 517 0
 1472 001e 84F84100 		strb	r0, [r4, #65]
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1473              		.loc 1 518 0
 1474 0022 2063     		str	r0, [r4, #48]
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1475              		.loc 1 519 0
 1476 0024 84F84200 		strb	r0, [r4, #66]
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1477              		.loc 1 522 0
 1478 0028 84F84000 		strb	r0, [r4, #64]
ARM GAS  /tmp/cciXgPzD.s 			page 115


 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1479              		.loc 1 525 0
 1480 002c 10BD     		pop	{r4, pc}
 1481              	.LVL112:
 1482              	.L141:
 1483              	.LCFI23:
 1484              		.cfi_def_cfa_offset 0
 1485              		.cfi_restore 4
 1486              		.cfi_restore 14
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1487              		.loc 1 502 0
 1488 002e 0120     		movs	r0, #1
 1489              	.LVL113:
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1490              		.loc 1 525 0
 1491 0030 7047     		bx	lr
 1492              		.cfi_endproc
 1493              	.LFE139:
 1495              		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 1496              		.align	1
 1497              		.global	HAL_I2C_Master_Transmit
 1498              		.syntax unified
 1499              		.thumb
 1500              		.thumb_func
 1501              		.fpu fpv5-d16
 1503              	HAL_I2C_Master_Transmit:
 1504              	.LFB142:
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 1505              		.loc 1 634 0
 1506              		.cfi_startproc
 1507              		@ args = 4, pretend = 0, frame = 0
 1508              		@ frame_needed = 0, uses_anonymous_args = 0
 1509              	.LVL114:
 1510 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1511              	.LCFI24:
 1512              		.cfi_def_cfa_offset 28
 1513              		.cfi_offset 4, -28
 1514              		.cfi_offset 5, -24
 1515              		.cfi_offset 6, -20
 1516              		.cfi_offset 7, -16
 1517              		.cfi_offset 8, -12
 1518              		.cfi_offset 9, -8
 1519              		.cfi_offset 14, -4
 1520 0004 83B0     		sub	sp, sp, #12
 1521              	.LCFI25:
 1522              		.cfi_def_cfa_offset 40
 1523              	.LVL115:
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1524              		.loc 1 637 0
 1525 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1526 000a EDB2     		uxtb	r5, r5
 1527 000c 202D     		cmp	r5, #32
 1528 000e 40F0AD80 		bne	.L156
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1529              		.loc 1 640 0
 1530 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1531 0016 012C     		cmp	r4, #1
ARM GAS  /tmp/cciXgPzD.s 			page 116


 1532 0018 00F0AD80 		beq	.L157
 1533 001c 9846     		mov	r8, r3
 1534 001e 1746     		mov	r7, r2
 1535 0020 0E46     		mov	r6, r1
 1536 0022 0446     		mov	r4, r0
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1537              		.loc 1 640 0 is_stmt 0 discriminator 2
 1538 0024 4FF00109 		mov	r9, #1
 1539 0028 80F84090 		strb	r9, [r0, #64]
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1540              		.loc 1 643 0 is_stmt 1 discriminator 2
 1541 002c FFF7FEFF 		bl	HAL_GetTick
 1542              	.LVL116:
 1543 0030 0546     		mov	r5, r0
 1544              	.LVL117:
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1545              		.loc 1 645 0 discriminator 2
 1546 0032 0090     		str	r0, [sp]
 1547 0034 1923     		movs	r3, #25
 1548 0036 4A46     		mov	r2, r9
 1549 0038 4FF40041 		mov	r1, #32768
 1550 003c 2046     		mov	r0, r4
 1551              	.LVL118:
 1552 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1553              	.LVL119:
 1554 0042 0028     		cmp	r0, #0
 1555 0044 40F09980 		bne	.L158
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1556              		.loc 1 650 0
 1557 0048 2123     		movs	r3, #33
 1558 004a 84F84130 		strb	r3, [r4, #65]
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1559              		.loc 1 651 0
 1560 004e 1023     		movs	r3, #16
 1561 0050 84F84230 		strb	r3, [r4, #66]
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1562              		.loc 1 652 0
 1563 0054 0023     		movs	r3, #0
 1564 0056 6364     		str	r3, [r4, #68]
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1565              		.loc 1 655 0
 1566 0058 6762     		str	r7, [r4, #36]
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1567              		.loc 1 656 0
 1568 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1569              		.loc 1 657 0
 1570 005e 6363     		str	r3, [r4, #52]
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1571              		.loc 1 661 0
 1572 0060 638D     		ldrh	r3, [r4, #42]
 1573 0062 9BB2     		uxth	r3, r3
 1574 0064 FF2B     		cmp	r3, #255
 1575 0066 0AD9     		bls	.L148
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRIT
 1576              		.loc 1 663 0
 1577 0068 FF22     		movs	r2, #255
ARM GAS  /tmp/cciXgPzD.s 			page 117


 1578 006a 2285     		strh	r2, [r4, #40]	@ movhi
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1579              		.loc 1 664 0
 1580 006c 474B     		ldr	r3, .L165
 1581 006e 0093     		str	r3, [sp]
 1582 0070 4FF08073 		mov	r3, #16777216
 1583 0074 3146     		mov	r1, r6
 1584 0076 2046     		mov	r0, r4
 1585 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1586              	.LVL120:
 1587 007c 1DE0     		b	.L150
 1588              	.L148:
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
 1589              		.loc 1 668 0
 1590 007e 628D     		ldrh	r2, [r4, #42]
 1591 0080 92B2     		uxth	r2, r2
 1592 0082 2285     		strh	r2, [r4, #40]	@ movhi
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1593              		.loc 1 669 0
 1594 0084 414B     		ldr	r3, .L165
 1595 0086 0093     		str	r3, [sp]
 1596 0088 4FF00073 		mov	r3, #33554432
 1597 008c D2B2     		uxtb	r2, r2
 1598 008e 3146     		mov	r1, r6
 1599 0090 2046     		mov	r0, r4
 1600 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1601              	.LVL121:
 1602 0096 10E0     		b	.L150
 1603              	.L164:
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1604              		.loc 1 677 0
 1605 0098 636C     		ldr	r3, [r4, #68]
 1606 009a 042B     		cmp	r3, #4
 1607 009c 6FD1     		bne	.L159
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1608              		.loc 1 679 0
 1609 009e 0123     		movs	r3, #1
 1610 00a0 65E0     		b	.L147
 1611              	.L153:
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 1612              		.loc 1 706 0
 1613 00a2 628D     		ldrh	r2, [r4, #42]
 1614 00a4 92B2     		uxth	r2, r2
 1615 00a6 2285     		strh	r2, [r4, #40]	@ movhi
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1616              		.loc 1 707 0
 1617 00a8 0023     		movs	r3, #0
 1618 00aa 0093     		str	r3, [sp]
 1619 00ac 4FF00073 		mov	r3, #33554432
 1620 00b0 D2B2     		uxtb	r2, r2
 1621 00b2 3146     		mov	r1, r6
 1622 00b4 2046     		mov	r0, r4
 1623 00b6 FFF7FEFF 		bl	I2C_TransferConfig
 1624              	.LVL122:
 1625              	.L150:
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1626              		.loc 1 672 0
ARM GAS  /tmp/cciXgPzD.s 			page 118


 1627 00ba 638D     		ldrh	r3, [r4, #42]
 1628 00bc 9BB2     		uxth	r3, r3
 1629 00be 002B     		cmp	r3, #0
 1630 00c0 32D0     		beq	.L163
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1631              		.loc 1 675 0
 1632 00c2 2A46     		mov	r2, r5
 1633 00c4 0A99     		ldr	r1, [sp, #40]
 1634 00c6 2046     		mov	r0, r4
 1635 00c8 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1636              	.LVL123:
 1637 00cc 0028     		cmp	r0, #0
 1638 00ce E3D1     		bne	.L164
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 1639              		.loc 1 687 0
 1640 00d0 636A     		ldr	r3, [r4, #36]
 1641 00d2 5A1C     		adds	r2, r3, #1
 1642 00d4 6262     		str	r2, [r4, #36]
 1643 00d6 2268     		ldr	r2, [r4]
 1644 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1645 00da 9362     		str	r3, [r2, #40]
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 1646              		.loc 1 688 0
 1647 00dc 638D     		ldrh	r3, [r4, #42]
 1648 00de 013B     		subs	r3, r3, #1
 1649 00e0 9BB2     		uxth	r3, r3
 1650 00e2 6385     		strh	r3, [r4, #42]	@ movhi
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1651              		.loc 1 689 0
 1652 00e4 238D     		ldrh	r3, [r4, #40]
 1653 00e6 013B     		subs	r3, r3, #1
 1654 00e8 9BB2     		uxth	r3, r3
 1655 00ea 2385     		strh	r3, [r4, #40]	@ movhi
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1656              		.loc 1 691 0
 1657 00ec 002B     		cmp	r3, #0
 1658 00ee E4D1     		bne	.L150
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1659              		.loc 1 691 0 is_stmt 0 discriminator 1
 1660 00f0 638D     		ldrh	r3, [r4, #42]
 1661 00f2 9BB2     		uxth	r3, r3
 1662 00f4 002B     		cmp	r3, #0
 1663 00f6 E0D0     		beq	.L150
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1664              		.loc 1 694 0 is_stmt 1
 1665 00f8 0095     		str	r5, [sp]
 1666 00fa 0A9B     		ldr	r3, [sp, #40]
 1667 00fc 0022     		movs	r2, #0
 1668 00fe 8021     		movs	r1, #128
 1669 0100 2046     		mov	r0, r4
 1670 0102 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1671              	.LVL124:
 1672 0106 0028     		cmp	r0, #0
 1673 0108 3BD1     		bne	.L160
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1674              		.loc 1 699 0
 1675 010a 638D     		ldrh	r3, [r4, #42]
ARM GAS  /tmp/cciXgPzD.s 			page 119


 1676 010c 9BB2     		uxth	r3, r3
 1677 010e FF2B     		cmp	r3, #255
 1678 0110 C7D9     		bls	.L153
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 1679              		.loc 1 701 0
 1680 0112 FF22     		movs	r2, #255
 1681 0114 2285     		strh	r2, [r4, #40]	@ movhi
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1682              		.loc 1 702 0
 1683 0116 0023     		movs	r3, #0
 1684 0118 0093     		str	r3, [sp]
 1685 011a 4FF08073 		mov	r3, #16777216
 1686 011e 3146     		mov	r1, r6
 1687 0120 2046     		mov	r0, r4
 1688 0122 FFF7FEFF 		bl	I2C_TransferConfig
 1689              	.LVL125:
 1690 0126 C8E7     		b	.L150
 1691              	.L163:
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1692              		.loc 1 714 0
 1693 0128 2A46     		mov	r2, r5
 1694 012a 0A99     		ldr	r1, [sp, #40]
 1695 012c 2046     		mov	r0, r4
 1696 012e FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1697              	.LVL126:
 1698 0132 0346     		mov	r3, r0
 1699 0134 20B1     		cbz	r0, .L155
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1700              		.loc 1 716 0
 1701 0136 636C     		ldr	r3, [r4, #68]
 1702 0138 042B     		cmp	r3, #4
 1703 013a 24D1     		bne	.L161
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1704              		.loc 1 718 0
 1705 013c 0123     		movs	r3, #1
 1706 013e 16E0     		b	.L147
 1707              	.L155:
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1708              		.loc 1 727 0
 1709 0140 2268     		ldr	r2, [r4]
 1710 0142 2021     		movs	r1, #32
 1711 0144 D161     		str	r1, [r2, #28]
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1712              		.loc 1 730 0
 1713 0146 2068     		ldr	r0, [r4]
 1714 0148 4268     		ldr	r2, [r0, #4]
 1715 014a 22F0FF72 		bic	r2, r2, #33423360
 1716 014e 22F48B32 		bic	r2, r2, #71168
 1717 0152 22F4FF72 		bic	r2, r2, #510
 1718 0156 22F00102 		bic	r2, r2, #1
 1719 015a 4260     		str	r2, [r0, #4]
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1720              		.loc 1 732 0
 1721 015c 84F84110 		strb	r1, [r4, #65]
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1722              		.loc 1 733 0
 1723 0160 0022     		movs	r2, #0
ARM GAS  /tmp/cciXgPzD.s 			page 120


 1724 0162 84F84220 		strb	r2, [r4, #66]
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1725              		.loc 1 736 0
 1726 0166 84F84020 		strb	r2, [r4, #64]
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1727              		.loc 1 738 0
 1728 016a 00E0     		b	.L147
 1729              	.LVL127:
 1730              	.L156:
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1731              		.loc 1 742 0
 1732 016c 0223     		movs	r3, #2
 1733              	.LVL128:
 1734              	.L147:
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1735              		.loc 1 744 0
 1736 016e 1846     		mov	r0, r3
 1737 0170 03B0     		add	sp, sp, #12
 1738              	.LCFI26:
 1739              		.cfi_remember_state
 1740              		.cfi_def_cfa_offset 28
 1741              		@ sp needed
 1742 0172 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1743              	.LVL129:
 1744              	.L157:
 1745              	.LCFI27:
 1746              		.cfi_restore_state
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1747              		.loc 1 640 0
 1748 0176 0223     		movs	r3, #2
 1749              	.LVL130:
 1750 0178 F9E7     		b	.L147
 1751              	.LVL131:
 1752              	.L158:
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1753              		.loc 1 647 0
 1754 017a 0323     		movs	r3, #3
 1755 017c F7E7     		b	.L147
 1756              	.L159:
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1757              		.loc 1 683 0
 1758 017e 0323     		movs	r3, #3
 1759 0180 F5E7     		b	.L147
 1760              	.L160:
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1761              		.loc 1 696 0
 1762 0182 0323     		movs	r3, #3
 1763 0184 F3E7     		b	.L147
 1764              	.L161:
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1765              		.loc 1 722 0
 1766 0186 0323     		movs	r3, #3
 1767 0188 F1E7     		b	.L147
 1768              	.L166:
 1769 018a 00BF     		.align	2
 1770              	.L165:
 1771 018c 00200080 		.word	-2147475456
ARM GAS  /tmp/cciXgPzD.s 			page 121


 1772              		.cfi_endproc
 1773              	.LFE142:
 1775              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 1776              		.align	1
 1777              		.global	HAL_I2C_Master_Receive
 1778              		.syntax unified
 1779              		.thumb
 1780              		.thumb_func
 1781              		.fpu fpv5-d16
 1783              	HAL_I2C_Master_Receive:
 1784              	.LFB143:
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 1785              		.loc 1 758 0
 1786              		.cfi_startproc
 1787              		@ args = 4, pretend = 0, frame = 0
 1788              		@ frame_needed = 0, uses_anonymous_args = 0
 1789              	.LVL132:
 1790 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1791              	.LCFI28:
 1792              		.cfi_def_cfa_offset 28
 1793              		.cfi_offset 4, -28
 1794              		.cfi_offset 5, -24
 1795              		.cfi_offset 6, -20
 1796              		.cfi_offset 7, -16
 1797              		.cfi_offset 8, -12
 1798              		.cfi_offset 9, -8
 1799              		.cfi_offset 14, -4
 1800 0004 83B0     		sub	sp, sp, #12
 1801              	.LCFI29:
 1802              		.cfi_def_cfa_offset 40
 1803              	.LVL133:
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1804              		.loc 1 761 0
 1805 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1806 000a EDB2     		uxtb	r5, r5
 1807 000c 202D     		cmp	r5, #32
 1808 000e 40F0AD80 		bne	.L177
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1809              		.loc 1 764 0
 1810 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1811 0016 012C     		cmp	r4, #1
 1812 0018 00F0AD80 		beq	.L178
 1813 001c 9846     		mov	r8, r3
 1814 001e 1746     		mov	r7, r2
 1815 0020 0E46     		mov	r6, r1
 1816 0022 0446     		mov	r4, r0
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1817              		.loc 1 764 0 is_stmt 0 discriminator 2
 1818 0024 4FF00109 		mov	r9, #1
 1819 0028 80F84090 		strb	r9, [r0, #64]
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1820              		.loc 1 767 0 is_stmt 1 discriminator 2
 1821 002c FFF7FEFF 		bl	HAL_GetTick
 1822              	.LVL134:
 1823 0030 0546     		mov	r5, r0
 1824              	.LVL135:
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/cciXgPzD.s 			page 122


 1825              		.loc 1 769 0 discriminator 2
 1826 0032 0090     		str	r0, [sp]
 1827 0034 1923     		movs	r3, #25
 1828 0036 4A46     		mov	r2, r9
 1829 0038 4FF40041 		mov	r1, #32768
 1830 003c 2046     		mov	r0, r4
 1831              	.LVL136:
 1832 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1833              	.LVL137:
 1834 0042 0028     		cmp	r0, #0
 1835 0044 40F09980 		bne	.L179
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1836              		.loc 1 774 0
 1837 0048 2223     		movs	r3, #34
 1838 004a 84F84130 		strb	r3, [r4, #65]
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1839              		.loc 1 775 0
 1840 004e 1023     		movs	r3, #16
 1841 0050 84F84230 		strb	r3, [r4, #66]
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1842              		.loc 1 776 0
 1843 0054 0023     		movs	r3, #0
 1844 0056 6364     		str	r3, [r4, #68]
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1845              		.loc 1 779 0
 1846 0058 6762     		str	r7, [r4, #36]
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1847              		.loc 1 780 0
 1848 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1849              		.loc 1 781 0
 1850 005e 6363     		str	r3, [r4, #52]
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1851              		.loc 1 785 0
 1852 0060 638D     		ldrh	r3, [r4, #42]
 1853 0062 9BB2     		uxth	r3, r3
 1854 0064 FF2B     		cmp	r3, #255
 1855 0066 0AD9     		bls	.L169
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
 1856              		.loc 1 787 0
 1857 0068 FF22     		movs	r2, #255
 1858 006a 2285     		strh	r2, [r4, #40]	@ movhi
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1859              		.loc 1 788 0
 1860 006c 474B     		ldr	r3, .L186
 1861 006e 0093     		str	r3, [sp]
 1862 0070 4FF08073 		mov	r3, #16777216
 1863 0074 3146     		mov	r1, r6
 1864 0076 2046     		mov	r0, r4
 1865 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1866              	.LVL138:
 1867 007c 1DE0     		b	.L171
 1868              	.L169:
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 1869              		.loc 1 792 0
 1870 007e 628D     		ldrh	r2, [r4, #42]
 1871 0080 92B2     		uxth	r2, r2
ARM GAS  /tmp/cciXgPzD.s 			page 123


 1872 0082 2285     		strh	r2, [r4, #40]	@ movhi
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1873              		.loc 1 793 0
 1874 0084 414B     		ldr	r3, .L186
 1875 0086 0093     		str	r3, [sp]
 1876 0088 4FF00073 		mov	r3, #33554432
 1877 008c D2B2     		uxtb	r2, r2
 1878 008e 3146     		mov	r1, r6
 1879 0090 2046     		mov	r0, r4
 1880 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1881              	.LVL139:
 1882 0096 10E0     		b	.L171
 1883              	.L185:
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1884              		.loc 1 801 0
 1885 0098 636C     		ldr	r3, [r4, #68]
 1886 009a 042B     		cmp	r3, #4
 1887 009c 6FD1     		bne	.L180
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1888              		.loc 1 803 0
 1889 009e 0123     		movs	r3, #1
 1890 00a0 65E0     		b	.L168
 1891              	.L174:
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 1892              		.loc 1 831 0
 1893 00a2 628D     		ldrh	r2, [r4, #42]
 1894 00a4 92B2     		uxth	r2, r2
 1895 00a6 2285     		strh	r2, [r4, #40]	@ movhi
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1896              		.loc 1 832 0
 1897 00a8 0023     		movs	r3, #0
 1898 00aa 0093     		str	r3, [sp]
 1899 00ac 4FF00073 		mov	r3, #33554432
 1900 00b0 D2B2     		uxtb	r2, r2
 1901 00b2 3146     		mov	r1, r6
 1902 00b4 2046     		mov	r0, r4
 1903 00b6 FFF7FEFF 		bl	I2C_TransferConfig
 1904              	.LVL140:
 1905              	.L171:
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1906              		.loc 1 796 0
 1907 00ba 638D     		ldrh	r3, [r4, #42]
 1908 00bc 9BB2     		uxth	r3, r3
 1909 00be 002B     		cmp	r3, #0
 1910 00c0 32D0     		beq	.L184
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1911              		.loc 1 799 0
 1912 00c2 2A46     		mov	r2, r5
 1913 00c4 0A99     		ldr	r1, [sp, #40]
 1914 00c6 2046     		mov	r0, r4
 1915 00c8 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 1916              	.LVL141:
 1917 00cc 0028     		cmp	r0, #0
 1918 00ce E3D1     		bne	.L185
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 1919              		.loc 1 812 0
 1920 00d0 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cciXgPzD.s 			page 124


 1921 00d2 5A6A     		ldr	r2, [r3, #36]
 1922 00d4 636A     		ldr	r3, [r4, #36]
 1923 00d6 591C     		adds	r1, r3, #1
 1924 00d8 6162     		str	r1, [r4, #36]
 1925 00da 1A70     		strb	r2, [r3]
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 1926              		.loc 1 813 0
 1927 00dc 238D     		ldrh	r3, [r4, #40]
 1928 00de 013B     		subs	r3, r3, #1
 1929 00e0 9BB2     		uxth	r3, r3
 1930 00e2 2385     		strh	r3, [r4, #40]	@ movhi
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1931              		.loc 1 814 0
 1932 00e4 628D     		ldrh	r2, [r4, #42]
 1933 00e6 013A     		subs	r2, r2, #1
 1934 00e8 92B2     		uxth	r2, r2
 1935 00ea 6285     		strh	r2, [r4, #42]	@ movhi
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1936              		.loc 1 816 0
 1937 00ec 002B     		cmp	r3, #0
 1938 00ee E4D1     		bne	.L171
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1939              		.loc 1 816 0 is_stmt 0 discriminator 1
 1940 00f0 638D     		ldrh	r3, [r4, #42]
 1941 00f2 9BB2     		uxth	r3, r3
 1942 00f4 002B     		cmp	r3, #0
 1943 00f6 E0D0     		beq	.L171
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1944              		.loc 1 819 0 is_stmt 1
 1945 00f8 0095     		str	r5, [sp]
 1946 00fa 0A9B     		ldr	r3, [sp, #40]
 1947 00fc 0022     		movs	r2, #0
 1948 00fe 8021     		movs	r1, #128
 1949 0100 2046     		mov	r0, r4
 1950 0102 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1951              	.LVL142:
 1952 0106 0028     		cmp	r0, #0
 1953 0108 3BD1     		bne	.L181
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1954              		.loc 1 824 0
 1955 010a 638D     		ldrh	r3, [r4, #42]
 1956 010c 9BB2     		uxth	r3, r3
 1957 010e FF2B     		cmp	r3, #255
 1958 0110 C7D9     		bls	.L174
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 1959              		.loc 1 826 0
 1960 0112 FF22     		movs	r2, #255
 1961 0114 2285     		strh	r2, [r4, #40]	@ movhi
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1962              		.loc 1 827 0
 1963 0116 0023     		movs	r3, #0
 1964 0118 0093     		str	r3, [sp]
 1965 011a 4FF08073 		mov	r3, #16777216
 1966 011e 3146     		mov	r1, r6
 1967 0120 2046     		mov	r0, r4
 1968 0122 FFF7FEFF 		bl	I2C_TransferConfig
 1969              	.LVL143:
ARM GAS  /tmp/cciXgPzD.s 			page 125


 1970 0126 C8E7     		b	.L171
 1971              	.L184:
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1972              		.loc 1 839 0
 1973 0128 2A46     		mov	r2, r5
 1974 012a 0A99     		ldr	r1, [sp, #40]
 1975 012c 2046     		mov	r0, r4
 1976 012e FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1977              	.LVL144:
 1978 0132 0346     		mov	r3, r0
 1979 0134 20B1     		cbz	r0, .L176
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1980              		.loc 1 841 0
 1981 0136 636C     		ldr	r3, [r4, #68]
 1982 0138 042B     		cmp	r3, #4
 1983 013a 24D1     		bne	.L182
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1984              		.loc 1 843 0
 1985 013c 0123     		movs	r3, #1
 1986 013e 16E0     		b	.L168
 1987              	.L176:
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1988              		.loc 1 852 0
 1989 0140 2268     		ldr	r2, [r4]
 1990 0142 2021     		movs	r1, #32
 1991 0144 D161     		str	r1, [r2, #28]
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1992              		.loc 1 855 0
 1993 0146 2068     		ldr	r0, [r4]
 1994 0148 4268     		ldr	r2, [r0, #4]
 1995 014a 22F0FF72 		bic	r2, r2, #33423360
 1996 014e 22F48B32 		bic	r2, r2, #71168
 1997 0152 22F4FF72 		bic	r2, r2, #510
 1998 0156 22F00102 		bic	r2, r2, #1
 1999 015a 4260     		str	r2, [r0, #4]
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2000              		.loc 1 857 0
 2001 015c 84F84110 		strb	r1, [r4, #65]
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2002              		.loc 1 858 0
 2003 0160 0022     		movs	r2, #0
 2004 0162 84F84220 		strb	r2, [r4, #66]
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2005              		.loc 1 861 0
 2006 0166 84F84020 		strb	r2, [r4, #64]
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2007              		.loc 1 863 0
 2008 016a 00E0     		b	.L168
 2009              	.LVL145:
 2010              	.L177:
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2011              		.loc 1 867 0
 2012 016c 0223     		movs	r3, #2
 2013              	.LVL146:
 2014              	.L168:
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2015              		.loc 1 869 0
ARM GAS  /tmp/cciXgPzD.s 			page 126


 2016 016e 1846     		mov	r0, r3
 2017 0170 03B0     		add	sp, sp, #12
 2018              	.LCFI30:
 2019              		.cfi_remember_state
 2020              		.cfi_def_cfa_offset 28
 2021              		@ sp needed
 2022 0172 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2023              	.LVL147:
 2024              	.L178:
 2025              	.LCFI31:
 2026              		.cfi_restore_state
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2027              		.loc 1 764 0
 2028 0176 0223     		movs	r3, #2
 2029              	.LVL148:
 2030 0178 F9E7     		b	.L168
 2031              	.LVL149:
 2032              	.L179:
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2033              		.loc 1 771 0
 2034 017a 0323     		movs	r3, #3
 2035 017c F7E7     		b	.L168
 2036              	.L180:
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 2037              		.loc 1 807 0
 2038 017e 0323     		movs	r3, #3
 2039 0180 F5E7     		b	.L168
 2040              	.L181:
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 2041              		.loc 1 821 0
 2042 0182 0323     		movs	r3, #3
 2043 0184 F3E7     		b	.L168
 2044              	.L182:
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2045              		.loc 1 847 0
 2046 0186 0323     		movs	r3, #3
 2047 0188 F1E7     		b	.L168
 2048              	.L187:
 2049 018a 00BF     		.align	2
 2050              	.L186:
 2051 018c 00240080 		.word	-2147474432
 2052              		.cfi_endproc
 2053              	.LFE143:
 2055              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 2056              		.align	1
 2057              		.global	HAL_I2C_Slave_Transmit
 2058              		.syntax unified
 2059              		.thumb
 2060              		.thumb_func
 2061              		.fpu fpv5-d16
 2063              	HAL_I2C_Slave_Transmit:
 2064              	.LFB144:
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 2065              		.loc 1 881 0
 2066              		.cfi_startproc
 2067              		@ args = 0, pretend = 0, frame = 0
 2068              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cciXgPzD.s 			page 127


 2069              	.LVL150:
 2070 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2071              	.LCFI32:
 2072              		.cfi_def_cfa_offset 24
 2073              		.cfi_offset 4, -24
 2074              		.cfi_offset 5, -20
 2075              		.cfi_offset 6, -16
 2076              		.cfi_offset 7, -12
 2077              		.cfi_offset 8, -8
 2078              		.cfi_offset 14, -4
 2079 0004 82B0     		sub	sp, sp, #8
 2080              	.LCFI33:
 2081              		.cfi_def_cfa_offset 32
 2082              	.LVL151:
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2083              		.loc 1 884 0
 2084 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 2085 000a EDB2     		uxtb	r5, r5
 2086 000c 202D     		cmp	r5, #32
 2087 000e 40F0B080 		bne	.L198
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2088              		.loc 1 886 0
 2089 0012 B2FA82F5 		clz	r5, r2
 2090 0016 6D09     		lsrs	r5, r5, #5
 2091 0018 0029     		cmp	r1, #0
 2092 001a 08BF     		it	eq
 2093 001c 0125     		moveq	r5, #1
 2094 001e 002D     		cmp	r5, #0
 2095 0020 40F0AC80 		bne	.L199
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2096              		.loc 1 891 0
 2097 0024 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2098 0028 012C     		cmp	r4, #1
 2099 002a 00F0A980 		beq	.L200
 2100 002e 1D46     		mov	r5, r3
 2101 0030 9046     		mov	r8, r2
 2102 0032 0F46     		mov	r7, r1
 2103 0034 0446     		mov	r4, r0
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2104              		.loc 1 891 0 is_stmt 0 discriminator 2
 2105 0036 0123     		movs	r3, #1
 2106              	.LVL152:
 2107 0038 80F84030 		strb	r3, [r0, #64]
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2108              		.loc 1 894 0 is_stmt 1 discriminator 2
 2109 003c FFF7FEFF 		bl	HAL_GetTick
 2110              	.LVL153:
 2111 0040 0646     		mov	r6, r0
 2112              	.LVL154:
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2113              		.loc 1 896 0 discriminator 2
 2114 0042 2123     		movs	r3, #33
 2115 0044 84F84130 		strb	r3, [r4, #65]
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2116              		.loc 1 897 0 discriminator 2
 2117 0048 2023     		movs	r3, #32
 2118 004a 84F84230 		strb	r3, [r4, #66]
ARM GAS  /tmp/cciXgPzD.s 			page 128


 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2119              		.loc 1 898 0 discriminator 2
 2120 004e 0022     		movs	r2, #0
 2121 0050 6264     		str	r2, [r4, #68]
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2122              		.loc 1 901 0 discriminator 2
 2123 0052 6762     		str	r7, [r4, #36]
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2124              		.loc 1 902 0 discriminator 2
 2125 0054 A4F82A80 		strh	r8, [r4, #42]	@ movhi
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2126              		.loc 1 903 0 discriminator 2
 2127 0058 6263     		str	r2, [r4, #52]
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2128              		.loc 1 906 0 discriminator 2
 2129 005a 2168     		ldr	r1, [r4]
 2130 005c 4B68     		ldr	r3, [r1, #4]
 2131 005e 23F40043 		bic	r3, r3, #32768
 2132 0062 4B60     		str	r3, [r1, #4]
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2133              		.loc 1 909 0 discriminator 2
 2134 0064 0090     		str	r0, [sp]
 2135 0066 2B46     		mov	r3, r5
 2136 0068 0821     		movs	r1, #8
 2137 006a 2046     		mov	r0, r4
 2138              	.LVL155:
 2139 006c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2140              	.LVL156:
 2141 0070 A8B9     		cbnz	r0, .L204
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2142              		.loc 1 917 0
 2143 0072 2368     		ldr	r3, [r4]
 2144 0074 0822     		movs	r2, #8
 2145 0076 DA61     		str	r2, [r3, #28]
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2146              		.loc 1 920 0
 2147 0078 E368     		ldr	r3, [r4, #12]
 2148 007a 022B     		cmp	r3, #2
 2149 007c 16D0     		beq	.L205
 2150              	.L191:
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2151              		.loc 1 935 0
 2152 007e 0096     		str	r6, [sp]
 2153 0080 2B46     		mov	r3, r5
 2154 0082 0022     		movs	r2, #0
 2155 0084 4FF48031 		mov	r1, #65536
 2156 0088 2046     		mov	r0, r4
 2157 008a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2158              	.LVL157:
 2159 008e 50B3     		cbz	r0, .L193
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2160              		.loc 1 938 0
 2161 0090 2268     		ldr	r2, [r4]
 2162 0092 5368     		ldr	r3, [r2, #4]
 2163 0094 43F40043 		orr	r3, r3, #32768
 2164 0098 5360     		str	r3, [r2, #4]
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cciXgPzD.s 			page 129


 2165              		.loc 1 939 0
 2166 009a 0323     		movs	r3, #3
 2167 009c 6AE0     		b	.L189
 2168              	.L204:
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2169              		.loc 1 912 0
 2170 009e 2268     		ldr	r2, [r4]
 2171 00a0 5368     		ldr	r3, [r2, #4]
 2172 00a2 43F40043 		orr	r3, r3, #32768
 2173 00a6 5360     		str	r3, [r2, #4]
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2174              		.loc 1 913 0
 2175 00a8 0323     		movs	r3, #3
 2176 00aa 63E0     		b	.L189
 2177              	.L205:
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2178              		.loc 1 923 0
 2179 00ac 0096     		str	r6, [sp]
 2180 00ae 2B46     		mov	r3, r5
 2181 00b0 0022     		movs	r2, #0
 2182 00b2 0821     		movs	r1, #8
 2183 00b4 2046     		mov	r0, r4
 2184 00b6 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2185              	.LVL158:
 2186 00ba 18B9     		cbnz	r0, .L206
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2187              		.loc 1 931 0
 2188 00bc 2368     		ldr	r3, [r4]
 2189 00be 0822     		movs	r2, #8
 2190 00c0 DA61     		str	r2, [r3, #28]
 2191 00c2 DCE7     		b	.L191
 2192              	.L206:
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 2193              		.loc 1 926 0
 2194 00c4 2268     		ldr	r2, [r4]
 2195 00c6 5368     		ldr	r3, [r2, #4]
 2196 00c8 43F40043 		orr	r3, r3, #32768
 2197 00cc 5360     		str	r3, [r2, #4]
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2198              		.loc 1 927 0
 2199 00ce 0323     		movs	r3, #3
 2200 00d0 50E0     		b	.L189
 2201              	.L194:
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 2202              		.loc 1 961 0
 2203 00d2 636A     		ldr	r3, [r4, #36]
 2204 00d4 5A1C     		adds	r2, r3, #1
 2205 00d6 6262     		str	r2, [r4, #36]
 2206 00d8 2268     		ldr	r2, [r4]
 2207 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2208 00dc 9362     		str	r3, [r2, #40]
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2209              		.loc 1 962 0
 2210 00de 628D     		ldrh	r2, [r4, #42]
 2211 00e0 013A     		subs	r2, r2, #1
 2212 00e2 92B2     		uxth	r2, r2
 2213 00e4 6285     		strh	r2, [r4, #42]	@ movhi
ARM GAS  /tmp/cciXgPzD.s 			page 130


 2214              	.L193:
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2215              		.loc 1 942 0
 2216 00e6 638D     		ldrh	r3, [r4, #42]
 2217 00e8 9BB2     		uxth	r3, r3
 2218 00ea 83B1     		cbz	r3, .L207
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2219              		.loc 1 945 0
 2220 00ec 3246     		mov	r2, r6
 2221 00ee 2946     		mov	r1, r5
 2222 00f0 2046     		mov	r0, r4
 2223 00f2 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 2224              	.LVL159:
 2225 00f6 0028     		cmp	r0, #0
 2226 00f8 EBD0     		beq	.L194
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2227              		.loc 1 948 0
 2228 00fa 2268     		ldr	r2, [r4]
 2229 00fc 5368     		ldr	r3, [r2, #4]
 2230 00fe 43F40043 		orr	r3, r3, #32768
 2231 0102 5360     		str	r3, [r2, #4]
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 2232              		.loc 1 950 0
 2233 0104 636C     		ldr	r3, [r4, #68]
 2234 0106 042B     		cmp	r3, #4
 2235 0108 3CD1     		bne	.L201
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 2236              		.loc 1 952 0
 2237 010a 0123     		movs	r3, #1
 2238 010c 32E0     		b	.L189
 2239              	.L207:
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2240              		.loc 1 966 0
 2241 010e 3246     		mov	r2, r6
 2242 0110 2946     		mov	r1, r5
 2243 0112 2046     		mov	r0, r4
 2244 0114 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2245              	.LVL160:
 2246 0118 48B1     		cbz	r0, .L196
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2247              		.loc 1 969 0
 2248 011a 2268     		ldr	r2, [r4]
 2249 011c 5368     		ldr	r3, [r2, #4]
 2250 011e 43F40043 		orr	r3, r3, #32768
 2251 0122 5360     		str	r3, [r2, #4]
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2252              		.loc 1 971 0
 2253 0124 636C     		ldr	r3, [r4, #68]
 2254 0126 042B     		cmp	r3, #4
 2255 0128 2ED1     		bne	.L202
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2256              		.loc 1 975 0
 2257 012a 0023     		movs	r3, #0
 2258 012c 6364     		str	r3, [r4, #68]
 2259              	.L196:
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2260              		.loc 1 984 0
ARM GAS  /tmp/cciXgPzD.s 			page 131


 2261 012e 2368     		ldr	r3, [r4]
 2262 0130 2022     		movs	r2, #32
 2263 0132 DA61     		str	r2, [r3, #28]
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2264              		.loc 1 987 0
 2265 0134 0096     		str	r6, [sp]
 2266 0136 2B46     		mov	r3, r5
 2267 0138 0122     		movs	r2, #1
 2268 013a 4FF40041 		mov	r1, #32768
 2269 013e 2046     		mov	r0, r4
 2270 0140 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2271              	.LVL161:
 2272 0144 0346     		mov	r3, r0
 2273 0146 68B9     		cbnz	r0, .L208
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2274              		.loc 1 995 0
 2275 0148 2168     		ldr	r1, [r4]
 2276 014a 4A68     		ldr	r2, [r1, #4]
 2277 014c 42F40042 		orr	r2, r2, #32768
 2278 0150 4A60     		str	r2, [r1, #4]
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2279              		.loc 1 997 0
 2280 0152 2022     		movs	r2, #32
 2281 0154 84F84120 		strb	r2, [r4, #65]
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2282              		.loc 1 998 0
 2283 0158 0022     		movs	r2, #0
 2284 015a 84F84220 		strb	r2, [r4, #66]
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2285              		.loc 1 1001 0
 2286 015e 84F84020 		strb	r2, [r4, #64]
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2287              		.loc 1 1003 0
 2288 0162 07E0     		b	.L189
 2289              	.L208:
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2290              		.loc 1 990 0
 2291 0164 2268     		ldr	r2, [r4]
 2292 0166 5368     		ldr	r3, [r2, #4]
 2293 0168 43F40043 		orr	r3, r3, #32768
 2294 016c 5360     		str	r3, [r2, #4]
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2295              		.loc 1 991 0
 2296 016e 0323     		movs	r3, #3
 2297 0170 00E0     		b	.L189
 2298              	.LVL162:
 2299              	.L198:
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2300              		.loc 1 1007 0
 2301 0172 0223     		movs	r3, #2
 2302              	.LVL163:
 2303              	.L189:
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2304              		.loc 1 1009 0
 2305 0174 1846     		mov	r0, r3
 2306 0176 02B0     		add	sp, sp, #8
 2307              	.LCFI34:
ARM GAS  /tmp/cciXgPzD.s 			page 132


 2308              		.cfi_remember_state
 2309              		.cfi_def_cfa_offset 24
 2310              		@ sp needed
 2311 0178 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2312              	.LVL164:
 2313              	.L199:
 2314              	.LCFI35:
 2315              		.cfi_restore_state
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2316              		.loc 1 888 0
 2317 017c 0123     		movs	r3, #1
 2318              	.LVL165:
 2319 017e F9E7     		b	.L189
 2320              	.LVL166:
 2321              	.L200:
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2322              		.loc 1 891 0
 2323 0180 0223     		movs	r3, #2
 2324              	.LVL167:
 2325 0182 F7E7     		b	.L189
 2326              	.LVL168:
 2327              	.L201:
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 2328              		.loc 1 956 0
 2329 0184 0323     		movs	r3, #3
 2330 0186 F5E7     		b	.L189
 2331              	.L202:
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2332              		.loc 1 979 0
 2333 0188 0323     		movs	r3, #3
 2334 018a F3E7     		b	.L189
 2335              		.cfi_endproc
 2336              	.LFE144:
 2338              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
 2339              		.align	1
 2340              		.global	HAL_I2C_Slave_Receive
 2341              		.syntax unified
 2342              		.thumb
 2343              		.thumb_func
 2344              		.fpu fpv5-d16
 2346              	HAL_I2C_Slave_Receive:
 2347              	.LFB145:
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 2348              		.loc 1 1021 0
 2349              		.cfi_startproc
 2350              		@ args = 0, pretend = 0, frame = 0
 2351              		@ frame_needed = 0, uses_anonymous_args = 0
 2352              	.LVL169:
 2353 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2354              	.LCFI36:
 2355              		.cfi_def_cfa_offset 24
 2356              		.cfi_offset 4, -24
 2357              		.cfi_offset 5, -20
 2358              		.cfi_offset 6, -16
 2359              		.cfi_offset 7, -12
 2360              		.cfi_offset 8, -8
 2361              		.cfi_offset 14, -4
ARM GAS  /tmp/cciXgPzD.s 			page 133


 2362 0004 82B0     		sub	sp, sp, #8
 2363              	.LCFI37:
 2364              		.cfi_def_cfa_offset 32
 2365              	.LVL170:
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2366              		.loc 1 1024 0
 2367 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 2368 000a EDB2     		uxtb	r5, r5
 2369 000c 202D     		cmp	r5, #32
 2370 000e 40F0AB80 		bne	.L218
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2371              		.loc 1 1026 0
 2372 0012 B2FA82F5 		clz	r5, r2
 2373 0016 6D09     		lsrs	r5, r5, #5
 2374 0018 0029     		cmp	r1, #0
 2375 001a 08BF     		it	eq
 2376 001c 0125     		moveq	r5, #1
 2377 001e 002D     		cmp	r5, #0
 2378 0020 40F0A780 		bne	.L219
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2379              		.loc 1 1031 0
 2380 0024 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2381 0028 012C     		cmp	r4, #1
 2382 002a 00F0A480 		beq	.L220
 2383 002e 1D46     		mov	r5, r3
 2384 0030 9046     		mov	r8, r2
 2385 0032 0F46     		mov	r7, r1
 2386 0034 0446     		mov	r4, r0
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2387              		.loc 1 1031 0 is_stmt 0 discriminator 2
 2388 0036 0123     		movs	r3, #1
 2389              	.LVL171:
 2390 0038 80F84030 		strb	r3, [r0, #64]
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2391              		.loc 1 1034 0 is_stmt 1 discriminator 2
 2392 003c FFF7FEFF 		bl	HAL_GetTick
 2393              	.LVL172:
 2394 0040 0646     		mov	r6, r0
 2395              	.LVL173:
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2396              		.loc 1 1036 0 discriminator 2
 2397 0042 2223     		movs	r3, #34
 2398 0044 84F84130 		strb	r3, [r4, #65]
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2399              		.loc 1 1037 0 discriminator 2
 2400 0048 2023     		movs	r3, #32
 2401 004a 84F84230 		strb	r3, [r4, #66]
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2402              		.loc 1 1038 0 discriminator 2
 2403 004e 0022     		movs	r2, #0
 2404 0050 6264     		str	r2, [r4, #68]
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2405              		.loc 1 1041 0 discriminator 2
 2406 0052 6762     		str	r7, [r4, #36]
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2407              		.loc 1 1042 0 discriminator 2
 2408 0054 A4F82A80 		strh	r8, [r4, #42]	@ movhi
ARM GAS  /tmp/cciXgPzD.s 			page 134


1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2409              		.loc 1 1043 0 discriminator 2
 2410 0058 6263     		str	r2, [r4, #52]
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2411              		.loc 1 1046 0 discriminator 2
 2412 005a 2168     		ldr	r1, [r4]
 2413 005c 4B68     		ldr	r3, [r1, #4]
 2414 005e 23F40043 		bic	r3, r3, #32768
 2415 0062 4B60     		str	r3, [r1, #4]
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2416              		.loc 1 1049 0 discriminator 2
 2417 0064 0090     		str	r0, [sp]
 2418 0066 2B46     		mov	r3, r5
 2419 0068 0821     		movs	r1, #8
 2420 006a 2046     		mov	r0, r4
 2421              	.LVL174:
 2422 006c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2423              	.LVL175:
 2424 0070 00BB     		cbnz	r0, .L224
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2425              		.loc 1 1057 0
 2426 0072 2368     		ldr	r3, [r4]
 2427 0074 0822     		movs	r2, #8
 2428 0076 DA61     		str	r2, [r3, #28]
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2429              		.loc 1 1060 0
 2430 0078 0096     		str	r6, [sp]
 2431 007a 2B46     		mov	r3, r5
 2432 007c 0122     		movs	r2, #1
 2433 007e 4FF48031 		mov	r1, #65536
 2434 0082 2046     		mov	r0, r4
 2435 0084 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2436              	.LVL176:
 2437 0088 D8B9     		cbnz	r0, .L225
 2438              	.L212:
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2439              		.loc 1 1067 0
 2440 008a 638D     		ldrh	r3, [r4, #42]
 2441 008c 9BB2     		uxth	r3, r3
 2442 008e 002B     		cmp	r3, #0
 2443 0090 38D0     		beq	.L226
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2444              		.loc 1 1070 0
 2445 0092 3246     		mov	r2, r6
 2446 0094 2946     		mov	r1, r5
 2447 0096 2046     		mov	r0, r4
 2448 0098 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 2449              	.LVL177:
 2450 009c C0B9     		cbnz	r0, .L227
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 2451              		.loc 1 1094 0
 2452 009e 2368     		ldr	r3, [r4]
 2453 00a0 5A6A     		ldr	r2, [r3, #36]
 2454 00a2 636A     		ldr	r3, [r4, #36]
 2455 00a4 591C     		adds	r1, r3, #1
 2456 00a6 6162     		str	r1, [r4, #36]
 2457 00a8 1A70     		strb	r2, [r3]
ARM GAS  /tmp/cciXgPzD.s 			page 135


1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2458              		.loc 1 1095 0
 2459 00aa 628D     		ldrh	r2, [r4, #42]
 2460 00ac 013A     		subs	r2, r2, #1
 2461 00ae 92B2     		uxth	r2, r2
 2462 00b0 6285     		strh	r2, [r4, #42]	@ movhi
 2463 00b2 EAE7     		b	.L212
 2464              	.L224:
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2465              		.loc 1 1052 0
 2466 00b4 2268     		ldr	r2, [r4]
 2467 00b6 5368     		ldr	r3, [r2, #4]
 2468 00b8 43F40043 		orr	r3, r3, #32768
 2469 00bc 5360     		str	r3, [r2, #4]
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2470              		.loc 1 1053 0
 2471 00be 0323     		movs	r3, #3
 2472 00c0 53E0     		b	.L210
 2473              	.L225:
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2474              		.loc 1 1063 0
 2475 00c2 2268     		ldr	r2, [r4]
 2476 00c4 5368     		ldr	r3, [r2, #4]
 2477 00c6 43F40043 		orr	r3, r3, #32768
 2478 00ca 5360     		str	r3, [r2, #4]
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2479              		.loc 1 1064 0
 2480 00cc 0323     		movs	r3, #3
 2481 00ce 4CE0     		b	.L210
 2482              	.L227:
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2483              		.loc 1 1073 0
 2484 00d0 2268     		ldr	r2, [r4]
 2485 00d2 5368     		ldr	r3, [r2, #4]
 2486 00d4 43F40043 		orr	r3, r3, #32768
 2487 00d8 5360     		str	r3, [r2, #4]
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 2488              		.loc 1 1076 0
 2489 00da 2368     		ldr	r3, [r4]
 2490 00dc 9A69     		ldr	r2, [r3, #24]
 2491 00de 12F0040F 		tst	r2, #4
 2492 00e2 08D0     		beq	.L214
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferCount--;
 2493              		.loc 1 1079 0
 2494 00e4 5A6A     		ldr	r2, [r3, #36]
 2495 00e6 636A     		ldr	r3, [r4, #36]
 2496 00e8 591C     		adds	r1, r3, #1
 2497 00ea 6162     		str	r1, [r4, #36]
 2498 00ec 1A70     		strb	r2, [r3]
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 2499              		.loc 1 1080 0
 2500 00ee 638D     		ldrh	r3, [r4, #42]
 2501 00f0 013B     		subs	r3, r3, #1
 2502 00f2 9BB2     		uxth	r3, r3
 2503 00f4 6385     		strh	r3, [r4, #42]	@ movhi
 2504              	.L214:
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
ARM GAS  /tmp/cciXgPzD.s 			page 136


 2505              		.loc 1 1083 0
 2506 00f6 636C     		ldr	r3, [r4, #68]
 2507 00f8 202B     		cmp	r3, #32
 2508 00fa 01D0     		beq	.L228
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 2509              		.loc 1 1089 0
 2510 00fc 0123     		movs	r3, #1
 2511 00fe 34E0     		b	.L210
 2512              	.L228:
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 2513              		.loc 1 1085 0
 2514 0100 0323     		movs	r3, #3
 2515 0102 32E0     		b	.L210
 2516              	.L226:
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2517              		.loc 1 1099 0
 2518 0104 3246     		mov	r2, r6
 2519 0106 2946     		mov	r1, r5
 2520 0108 2046     		mov	r0, r4
 2521 010a FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2522              	.LVL178:
 2523 010e 48B1     		cbz	r0, .L216
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2524              		.loc 1 1102 0
 2525 0110 2268     		ldr	r2, [r4]
 2526 0112 5368     		ldr	r3, [r2, #4]
 2527 0114 43F40043 		orr	r3, r3, #32768
 2528 0118 5360     		str	r3, [r2, #4]
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2529              		.loc 1 1104 0
 2530 011a 636C     		ldr	r3, [r4, #68]
 2531 011c 042B     		cmp	r3, #4
 2532 011e 2CD1     		bne	.L222
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2533              		.loc 1 1106 0
 2534 0120 0123     		movs	r3, #1
 2535 0122 22E0     		b	.L210
 2536              	.L216:
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2537              		.loc 1 1115 0
 2538 0124 2368     		ldr	r3, [r4]
 2539 0126 2022     		movs	r2, #32
 2540 0128 DA61     		str	r2, [r3, #28]
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2541              		.loc 1 1118 0
 2542 012a 0096     		str	r6, [sp]
 2543 012c 2B46     		mov	r3, r5
 2544 012e 0122     		movs	r2, #1
 2545 0130 4FF40041 		mov	r1, #32768
 2546 0134 2046     		mov	r0, r4
 2547 0136 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2548              	.LVL179:
 2549 013a 0346     		mov	r3, r0
 2550 013c 68B9     		cbnz	r0, .L229
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2551              		.loc 1 1126 0
 2552 013e 2168     		ldr	r1, [r4]
ARM GAS  /tmp/cciXgPzD.s 			page 137


 2553 0140 4A68     		ldr	r2, [r1, #4]
 2554 0142 42F40042 		orr	r2, r2, #32768
 2555 0146 4A60     		str	r2, [r1, #4]
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2556              		.loc 1 1128 0
 2557 0148 2022     		movs	r2, #32
 2558 014a 84F84120 		strb	r2, [r4, #65]
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2559              		.loc 1 1129 0
 2560 014e 0022     		movs	r2, #0
 2561 0150 84F84220 		strb	r2, [r4, #66]
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2562              		.loc 1 1132 0
 2563 0154 84F84020 		strb	r2, [r4, #64]
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2564              		.loc 1 1134 0
 2565 0158 07E0     		b	.L210
 2566              	.L229:
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2567              		.loc 1 1121 0
 2568 015a 2268     		ldr	r2, [r4]
 2569 015c 5368     		ldr	r3, [r2, #4]
 2570 015e 43F40043 		orr	r3, r3, #32768
 2571 0162 5360     		str	r3, [r2, #4]
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2572              		.loc 1 1122 0
 2573 0164 0323     		movs	r3, #3
 2574 0166 00E0     		b	.L210
 2575              	.LVL180:
 2576              	.L218:
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2577              		.loc 1 1138 0
 2578 0168 0223     		movs	r3, #2
 2579              	.LVL181:
 2580              	.L210:
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2581              		.loc 1 1140 0
 2582 016a 1846     		mov	r0, r3
 2583 016c 02B0     		add	sp, sp, #8
 2584              	.LCFI38:
 2585              		.cfi_remember_state
 2586              		.cfi_def_cfa_offset 24
 2587              		@ sp needed
 2588 016e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2589              	.LVL182:
 2590              	.L219:
 2591              	.LCFI39:
 2592              		.cfi_restore_state
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2593              		.loc 1 1028 0
 2594 0172 0123     		movs	r3, #1
 2595              	.LVL183:
 2596 0174 F9E7     		b	.L210
 2597              	.LVL184:
 2598              	.L220:
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2599              		.loc 1 1031 0
ARM GAS  /tmp/cciXgPzD.s 			page 138


 2600 0176 0223     		movs	r3, #2
 2601              	.LVL185:
 2602 0178 F7E7     		b	.L210
 2603              	.LVL186:
 2604              	.L222:
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2605              		.loc 1 1110 0
 2606 017a 0323     		movs	r3, #3
 2607 017c F5E7     		b	.L210
 2608              		.cfi_endproc
 2609              	.LFE145:
 2611              		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 2612              		.align	1
 2613              		.global	HAL_I2C_Master_Transmit_IT
 2614              		.syntax unified
 2615              		.thumb
 2616              		.thumb_func
 2617              		.fpu fpv5-d16
 2619              	HAL_I2C_Master_Transmit_IT:
 2620              	.LFB146:
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 2621              		.loc 1 1153 0
 2622              		.cfi_startproc
 2623              		@ args = 0, pretend = 0, frame = 0
 2624              		@ frame_needed = 0, uses_anonymous_args = 0
 2625              	.LVL187:
 2626 0000 30B5     		push	{r4, r5, lr}
 2627              	.LCFI40:
 2628              		.cfi_def_cfa_offset 12
 2629              		.cfi_offset 4, -12
 2630              		.cfi_offset 5, -8
 2631              		.cfi_offset 14, -4
 2632 0002 83B0     		sub	sp, sp, #12
 2633              	.LCFI41:
 2634              		.cfi_def_cfa_offset 24
 2635              	.LVL188:
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2636              		.loc 1 1156 0
 2637 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2638 0008 E4B2     		uxtb	r4, r4
 2639 000a 202C     		cmp	r4, #32
 2640 000c 37D1     		bne	.L234
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2641              		.loc 1 1158 0
 2642 000e 0468     		ldr	r4, [r0]
 2643 0010 A469     		ldr	r4, [r4, #24]
 2644 0012 14F4004F 		tst	r4, #32768
 2645 0016 35D1     		bne	.L235
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2646              		.loc 1 1164 0
 2647 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2648 001c 012C     		cmp	r4, #1
 2649 001e 33D0     		beq	.L236
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2650              		.loc 1 1164 0 is_stmt 0 discriminator 2
 2651 0020 0124     		movs	r4, #1
 2652 0022 80F84040 		strb	r4, [r0, #64]
ARM GAS  /tmp/cciXgPzD.s 			page 139


1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2653              		.loc 1 1166 0 is_stmt 1 discriminator 2
 2654 0026 2124     		movs	r4, #33
 2655 0028 80F84140 		strb	r4, [r0, #65]
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2656              		.loc 1 1167 0 discriminator 2
 2657 002c 1024     		movs	r4, #16
 2658 002e 80F84240 		strb	r4, [r0, #66]
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2659              		.loc 1 1168 0 discriminator 2
 2660 0032 0024     		movs	r4, #0
 2661 0034 4464     		str	r4, [r0, #68]
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2662              		.loc 1 1171 0 discriminator 2
 2663 0036 4262     		str	r2, [r0, #36]
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2664              		.loc 1 1172 0 discriminator 2
 2665 0038 4385     		strh	r3, [r0, #42]	@ movhi
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2666              		.loc 1 1173 0 discriminator 2
 2667 003a 144B     		ldr	r3, .L238
 2668              	.LVL189:
 2669 003c C362     		str	r3, [r0, #44]
 2670              	.LVL190:
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2671              		.loc 1 1174 0 discriminator 2
 2672 003e 144B     		ldr	r3, .L238+4
 2673 0040 4363     		str	r3, [r0, #52]
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2674              		.loc 1 1176 0 discriminator 2
 2675 0042 438D     		ldrh	r3, [r0, #42]
 2676 0044 9BB2     		uxth	r3, r3
 2677 0046 FF2B     		cmp	r3, #255
 2678 0048 14D9     		bls	.L232
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2679              		.loc 1 1178 0
 2680 004a FF23     		movs	r3, #255
 2681 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2682              	.LVL191:
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2683              		.loc 1 1179 0
 2684 004e 4FF08073 		mov	r3, #16777216
 2685              	.LVL192:
 2686              	.L233:
 2687 0052 0446     		mov	r4, r0
 2688              	.LVL193:
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2689              		.loc 1 1189 0
 2690 0054 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2691              	.LVL194:
 2692 0058 0E48     		ldr	r0, .L238+8
 2693              	.LVL195:
 2694 005a 0090     		str	r0, [sp]
 2695              	.LVL196:
 2696 005c 2046     		mov	r0, r4
 2697 005e FFF7FEFF 		bl	I2C_TransferConfig
 2698              	.LVL197:
ARM GAS  /tmp/cciXgPzD.s 			page 140


1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2699              		.loc 1 1192 0
 2700 0062 0025     		movs	r5, #0
 2701 0064 84F84050 		strb	r5, [r4, #64]
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2702              		.loc 1 1201 0
 2703 0068 0121     		movs	r1, #1
 2704 006a 2046     		mov	r0, r4
 2705 006c FFF7FEFF 		bl	I2C_Enable_IRQ
 2706              	.LVL198:
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2707              		.loc 1 1203 0
 2708 0070 2846     		mov	r0, r5
 2709 0072 05E0     		b	.L231
 2710              	.LVL199:
 2711              	.L232:
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2712              		.loc 1 1183 0
 2713 0074 438D     		ldrh	r3, [r0, #42]
 2714 0076 0385     		strh	r3, [r0, #40]	@ movhi
 2715              	.LVL200:
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2716              		.loc 1 1184 0
 2717 0078 4FF00073 		mov	r3, #33554432
 2718 007c E9E7     		b	.L233
 2719              	.LVL201:
 2720              	.L234:
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2721              		.loc 1 1207 0
 2722 007e 0220     		movs	r0, #2
 2723              	.LVL202:
 2724              	.L231:
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2725              		.loc 1 1209 0
 2726 0080 03B0     		add	sp, sp, #12
 2727              	.LCFI42:
 2728              		.cfi_remember_state
 2729              		.cfi_def_cfa_offset 12
 2730              		@ sp needed
 2731 0082 30BD     		pop	{r4, r5, pc}
 2732              	.LVL203:
 2733              	.L235:
 2734              	.LCFI43:
 2735              		.cfi_restore_state
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2736              		.loc 1 1160 0
 2737 0084 0220     		movs	r0, #2
 2738              	.LVL204:
 2739 0086 FBE7     		b	.L231
 2740              	.LVL205:
 2741              	.L236:
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2742              		.loc 1 1164 0
 2743 0088 0220     		movs	r0, #2
 2744              	.LVL206:
 2745 008a F9E7     		b	.L231
 2746              	.L239:
ARM GAS  /tmp/cciXgPzD.s 			page 141


 2747              		.align	2
 2748              	.L238:
 2749 008c 0000FFFF 		.word	-65536
 2750 0090 00000000 		.word	I2C_Master_ISR_IT
 2751 0094 00200080 		.word	-2147475456
 2752              		.cfi_endproc
 2753              	.LFE146:
 2755              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 2756              		.align	1
 2757              		.global	HAL_I2C_Master_Receive_IT
 2758              		.syntax unified
 2759              		.thumb
 2760              		.thumb_func
 2761              		.fpu fpv5-d16
 2763              	HAL_I2C_Master_Receive_IT:
 2764              	.LFB147:
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 2765              		.loc 1 1222 0
 2766              		.cfi_startproc
 2767              		@ args = 0, pretend = 0, frame = 0
 2768              		@ frame_needed = 0, uses_anonymous_args = 0
 2769              	.LVL207:
 2770 0000 30B5     		push	{r4, r5, lr}
 2771              	.LCFI44:
 2772              		.cfi_def_cfa_offset 12
 2773              		.cfi_offset 4, -12
 2774              		.cfi_offset 5, -8
 2775              		.cfi_offset 14, -4
 2776 0002 83B0     		sub	sp, sp, #12
 2777              	.LCFI45:
 2778              		.cfi_def_cfa_offset 24
 2779              	.LVL208:
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2780              		.loc 1 1225 0
 2781 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2782 0008 E4B2     		uxtb	r4, r4
 2783 000a 202C     		cmp	r4, #32
 2784 000c 37D1     		bne	.L244
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2785              		.loc 1 1227 0
 2786 000e 0468     		ldr	r4, [r0]
 2787 0010 A469     		ldr	r4, [r4, #24]
 2788 0012 14F4004F 		tst	r4, #32768
 2789 0016 35D1     		bne	.L245
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2790              		.loc 1 1233 0
 2791 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2792 001c 012C     		cmp	r4, #1
 2793 001e 33D0     		beq	.L246
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2794              		.loc 1 1233 0 is_stmt 0 discriminator 2
 2795 0020 0124     		movs	r4, #1
 2796 0022 80F84040 		strb	r4, [r0, #64]
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2797              		.loc 1 1235 0 is_stmt 1 discriminator 2
 2798 0026 2224     		movs	r4, #34
 2799 0028 80F84140 		strb	r4, [r0, #65]
ARM GAS  /tmp/cciXgPzD.s 			page 142


1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2800              		.loc 1 1236 0 discriminator 2
 2801 002c 1024     		movs	r4, #16
 2802 002e 80F84240 		strb	r4, [r0, #66]
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2803              		.loc 1 1237 0 discriminator 2
 2804 0032 0024     		movs	r4, #0
 2805 0034 4464     		str	r4, [r0, #68]
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2806              		.loc 1 1240 0 discriminator 2
 2807 0036 4262     		str	r2, [r0, #36]
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2808              		.loc 1 1241 0 discriminator 2
 2809 0038 4385     		strh	r3, [r0, #42]	@ movhi
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2810              		.loc 1 1242 0 discriminator 2
 2811 003a 144B     		ldr	r3, .L248
 2812              	.LVL209:
 2813 003c C362     		str	r3, [r0, #44]
 2814              	.LVL210:
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2815              		.loc 1 1243 0 discriminator 2
 2816 003e 144B     		ldr	r3, .L248+4
 2817 0040 4363     		str	r3, [r0, #52]
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2818              		.loc 1 1245 0 discriminator 2
 2819 0042 438D     		ldrh	r3, [r0, #42]
 2820 0044 9BB2     		uxth	r3, r3
 2821 0046 FF2B     		cmp	r3, #255
 2822 0048 14D9     		bls	.L242
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2823              		.loc 1 1247 0
 2824 004a FF23     		movs	r3, #255
 2825 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2826              	.LVL211:
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2827              		.loc 1 1248 0
 2828 004e 4FF08073 		mov	r3, #16777216
 2829              	.LVL212:
 2830              	.L243:
 2831 0052 0446     		mov	r4, r0
 2832              	.LVL213:
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2833              		.loc 1 1258 0
 2834 0054 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2835              	.LVL214:
 2836 0058 0E48     		ldr	r0, .L248+8
 2837              	.LVL215:
 2838 005a 0090     		str	r0, [sp]
 2839              	.LVL216:
 2840 005c 2046     		mov	r0, r4
 2841 005e FFF7FEFF 		bl	I2C_TransferConfig
 2842              	.LVL217:
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2843              		.loc 1 1261 0
 2844 0062 0025     		movs	r5, #0
 2845 0064 84F84050 		strb	r5, [r4, #64]
ARM GAS  /tmp/cciXgPzD.s 			page 143


1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2846              		.loc 1 1270 0
 2847 0068 0221     		movs	r1, #2
 2848 006a 2046     		mov	r0, r4
 2849 006c FFF7FEFF 		bl	I2C_Enable_IRQ
 2850              	.LVL218:
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2851              		.loc 1 1272 0
 2852 0070 2846     		mov	r0, r5
 2853 0072 05E0     		b	.L241
 2854              	.LVL219:
 2855              	.L242:
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2856              		.loc 1 1252 0
 2857 0074 438D     		ldrh	r3, [r0, #42]
 2858 0076 0385     		strh	r3, [r0, #40]	@ movhi
 2859              	.LVL220:
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2860              		.loc 1 1253 0
 2861 0078 4FF00073 		mov	r3, #33554432
 2862 007c E9E7     		b	.L243
 2863              	.LVL221:
 2864              	.L244:
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2865              		.loc 1 1276 0
 2866 007e 0220     		movs	r0, #2
 2867              	.LVL222:
 2868              	.L241:
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2869              		.loc 1 1278 0
 2870 0080 03B0     		add	sp, sp, #12
 2871              	.LCFI46:
 2872              		.cfi_remember_state
 2873              		.cfi_def_cfa_offset 12
 2874              		@ sp needed
 2875 0082 30BD     		pop	{r4, r5, pc}
 2876              	.LVL223:
 2877              	.L245:
 2878              	.LCFI47:
 2879              		.cfi_restore_state
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2880              		.loc 1 1229 0
 2881 0084 0220     		movs	r0, #2
 2882              	.LVL224:
 2883 0086 FBE7     		b	.L241
 2884              	.LVL225:
 2885              	.L246:
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2886              		.loc 1 1233 0
 2887 0088 0220     		movs	r0, #2
 2888              	.LVL226:
 2889 008a F9E7     		b	.L241
 2890              	.L249:
 2891              		.align	2
 2892              	.L248:
 2893 008c 0000FFFF 		.word	-65536
 2894 0090 00000000 		.word	I2C_Master_ISR_IT
ARM GAS  /tmp/cciXgPzD.s 			page 144


 2895 0094 00240080 		.word	-2147474432
 2896              		.cfi_endproc
 2897              	.LFE147:
 2899              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 2900              		.align	1
 2901              		.global	HAL_I2C_Slave_Transmit_IT
 2902              		.syntax unified
 2903              		.thumb
 2904              		.thumb_func
 2905              		.fpu fpv5-d16
 2907              	HAL_I2C_Slave_Transmit_IT:
 2908              	.LFB148:
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2909              		.loc 1 1289 0
 2910              		.cfi_startproc
 2911              		@ args = 0, pretend = 0, frame = 0
 2912              		@ frame_needed = 0, uses_anonymous_args = 0
 2913              	.LVL227:
 2914 0000 38B5     		push	{r3, r4, r5, lr}
 2915              	.LCFI48:
 2916              		.cfi_def_cfa_offset 16
 2917              		.cfi_offset 3, -16
 2918              		.cfi_offset 4, -12
 2919              		.cfi_offset 5, -8
 2920              		.cfi_offset 14, -4
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2921              		.loc 1 1290 0
 2922 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2923 0006 DBB2     		uxtb	r3, r3
 2924 0008 202B     		cmp	r3, #32
 2925 000a 22D1     		bne	.L252
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2926              		.loc 1 1293 0
 2927 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2928 0010 012B     		cmp	r3, #1
 2929 0012 20D0     		beq	.L253
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2930              		.loc 1 1293 0 is_stmt 0 discriminator 2
 2931 0014 0123     		movs	r3, #1
 2932 0016 80F84030 		strb	r3, [r0, #64]
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2933              		.loc 1 1295 0 is_stmt 1 discriminator 2
 2934 001a 2123     		movs	r3, #33
 2935 001c 80F84130 		strb	r3, [r0, #65]
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2936              		.loc 1 1296 0 discriminator 2
 2937 0020 2023     		movs	r3, #32
 2938 0022 80F84230 		strb	r3, [r0, #66]
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2939              		.loc 1 1297 0 discriminator 2
 2940 0026 0024     		movs	r4, #0
 2941 0028 4464     		str	r4, [r0, #68]
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2942              		.loc 1 1300 0 discriminator 2
 2943 002a 0568     		ldr	r5, [r0]
 2944 002c 6B68     		ldr	r3, [r5, #4]
 2945 002e 23F40043 		bic	r3, r3, #32768
ARM GAS  /tmp/cciXgPzD.s 			page 145


 2946 0032 6B60     		str	r3, [r5, #4]
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2947              		.loc 1 1303 0 discriminator 2
 2948 0034 4162     		str	r1, [r0, #36]
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2949              		.loc 1 1304 0 discriminator 2
 2950 0036 4285     		strh	r2, [r0, #42]	@ movhi
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2951              		.loc 1 1305 0 discriminator 2
 2952 0038 438D     		ldrh	r3, [r0, #42]
 2953 003a 0385     		strh	r3, [r0, #40]	@ movhi
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2954              		.loc 1 1306 0 discriminator 2
 2955 003c 074B     		ldr	r3, .L255
 2956 003e C362     		str	r3, [r0, #44]
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2957              		.loc 1 1307 0 discriminator 2
 2958 0040 074B     		ldr	r3, .L255+4
 2959 0042 4363     		str	r3, [r0, #52]
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2960              		.loc 1 1310 0 discriminator 2
 2961 0044 80F84040 		strb	r4, [r0, #64]
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2962              		.loc 1 1319 0 discriminator 2
 2963 0048 0521     		movs	r1, #5
 2964              	.LVL228:
 2965 004a FFF7FEFF 		bl	I2C_Enable_IRQ
 2966              	.LVL229:
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2967              		.loc 1 1321 0 discriminator 2
 2968 004e 2046     		mov	r0, r4
 2969 0050 00E0     		b	.L251
 2970              	.LVL230:
 2971              	.L252:
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2972              		.loc 1 1325 0
 2973 0052 0220     		movs	r0, #2
 2974              	.LVL231:
 2975              	.L251:
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2976              		.loc 1 1327 0
 2977 0054 38BD     		pop	{r3, r4, r5, pc}
 2978              	.LVL232:
 2979              	.L253:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2980              		.loc 1 1293 0
 2981 0056 0220     		movs	r0, #2
 2982              	.LVL233:
 2983 0058 FCE7     		b	.L251
 2984              	.L256:
 2985 005a 00BF     		.align	2
 2986              	.L255:
 2987 005c 0000FFFF 		.word	-65536
 2988 0060 00000000 		.word	I2C_Slave_ISR_IT
 2989              		.cfi_endproc
 2990              	.LFE148:
 2992              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
ARM GAS  /tmp/cciXgPzD.s 			page 146


 2993              		.align	1
 2994              		.global	HAL_I2C_Slave_Receive_IT
 2995              		.syntax unified
 2996              		.thumb
 2997              		.thumb_func
 2998              		.fpu fpv5-d16
 3000              	HAL_I2C_Slave_Receive_IT:
 3001              	.LFB149:
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 3002              		.loc 1 1338 0
 3003              		.cfi_startproc
 3004              		@ args = 0, pretend = 0, frame = 0
 3005              		@ frame_needed = 0, uses_anonymous_args = 0
 3006              	.LVL234:
 3007 0000 38B5     		push	{r3, r4, r5, lr}
 3008              	.LCFI49:
 3009              		.cfi_def_cfa_offset 16
 3010              		.cfi_offset 3, -16
 3011              		.cfi_offset 4, -12
 3012              		.cfi_offset 5, -8
 3013              		.cfi_offset 14, -4
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3014              		.loc 1 1339 0
 3015 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3016 0006 DBB2     		uxtb	r3, r3
 3017 0008 202B     		cmp	r3, #32
 3018 000a 22D1     		bne	.L259
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3019              		.loc 1 1342 0
 3020 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3021 0010 012B     		cmp	r3, #1
 3022 0012 20D0     		beq	.L260
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3023              		.loc 1 1342 0 is_stmt 0 discriminator 2
 3024 0014 0123     		movs	r3, #1
 3025 0016 80F84030 		strb	r3, [r0, #64]
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3026              		.loc 1 1344 0 is_stmt 1 discriminator 2
 3027 001a 2223     		movs	r3, #34
 3028 001c 80F84130 		strb	r3, [r0, #65]
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3029              		.loc 1 1345 0 discriminator 2
 3030 0020 2023     		movs	r3, #32
 3031 0022 80F84230 		strb	r3, [r0, #66]
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3032              		.loc 1 1346 0 discriminator 2
 3033 0026 0024     		movs	r4, #0
 3034 0028 4464     		str	r4, [r0, #68]
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3035              		.loc 1 1349 0 discriminator 2
 3036 002a 0568     		ldr	r5, [r0]
 3037 002c 6B68     		ldr	r3, [r5, #4]
 3038 002e 23F40043 		bic	r3, r3, #32768
 3039 0032 6B60     		str	r3, [r5, #4]
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3040              		.loc 1 1352 0 discriminator 2
 3041 0034 4162     		str	r1, [r0, #36]
ARM GAS  /tmp/cciXgPzD.s 			page 147


1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3042              		.loc 1 1353 0 discriminator 2
 3043 0036 4285     		strh	r2, [r0, #42]	@ movhi
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3044              		.loc 1 1354 0 discriminator 2
 3045 0038 438D     		ldrh	r3, [r0, #42]
 3046 003a 0385     		strh	r3, [r0, #40]	@ movhi
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 3047              		.loc 1 1355 0 discriminator 2
 3048 003c 074B     		ldr	r3, .L262
 3049 003e C362     		str	r3, [r0, #44]
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3050              		.loc 1 1356 0 discriminator 2
 3051 0040 074B     		ldr	r3, .L262+4
 3052 0042 4363     		str	r3, [r0, #52]
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3053              		.loc 1 1359 0 discriminator 2
 3054 0044 80F84040 		strb	r4, [r0, #64]
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3055              		.loc 1 1368 0 discriminator 2
 3056 0048 0621     		movs	r1, #6
 3057              	.LVL235:
 3058 004a FFF7FEFF 		bl	I2C_Enable_IRQ
 3059              	.LVL236:
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3060              		.loc 1 1370 0 discriminator 2
 3061 004e 2046     		mov	r0, r4
 3062 0050 00E0     		b	.L258
 3063              	.LVL237:
 3064              	.L259:
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3065              		.loc 1 1374 0
 3066 0052 0220     		movs	r0, #2
 3067              	.LVL238:
 3068              	.L258:
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3069              		.loc 1 1376 0
 3070 0054 38BD     		pop	{r3, r4, r5, pc}
 3071              	.LVL239:
 3072              	.L260:
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3073              		.loc 1 1342 0
 3074 0056 0220     		movs	r0, #2
 3075              	.LVL240:
 3076 0058 FCE7     		b	.L258
 3077              	.L263:
 3078 005a 00BF     		.align	2
 3079              	.L262:
 3080 005c 0000FFFF 		.word	-65536
 3081 0060 00000000 		.word	I2C_Slave_ISR_IT
 3082              		.cfi_endproc
 3083              	.LFE149:
 3085              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
 3086              		.align	1
 3087              		.global	HAL_I2C_Master_Transmit_DMA
 3088              		.syntax unified
 3089              		.thumb
ARM GAS  /tmp/cciXgPzD.s 			page 148


 3090              		.thumb_func
 3091              		.fpu fpv5-d16
 3093              	HAL_I2C_Master_Transmit_DMA:
 3094              	.LFB150:
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 3095              		.loc 1 1389 0
 3096              		.cfi_startproc
 3097              		@ args = 0, pretend = 0, frame = 0
 3098              		@ frame_needed = 0, uses_anonymous_args = 0
 3099              	.LVL241:
 3100 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3101              	.LCFI50:
 3102              		.cfi_def_cfa_offset 20
 3103              		.cfi_offset 4, -20
 3104              		.cfi_offset 5, -16
 3105              		.cfi_offset 6, -12
 3106              		.cfi_offset 7, -8
 3107              		.cfi_offset 14, -4
 3108 0002 83B0     		sub	sp, sp, #12
 3109              	.LCFI51:
 3110              		.cfi_def_cfa_offset 32
 3111              	.LVL242:
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3112              		.loc 1 1392 0
 3113 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3114 0008 E4B2     		uxtb	r4, r4
 3115 000a 202C     		cmp	r4, #32
 3116 000c 6AD1     		bne	.L269
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3117              		.loc 1 1394 0
 3118 000e 0468     		ldr	r4, [r0]
 3119 0010 A469     		ldr	r4, [r4, #24]
 3120 0012 14F4004F 		tst	r4, #32768
 3121 0016 68D1     		bne	.L270
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3122              		.loc 1 1400 0
 3123 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3124 001c 012C     		cmp	r4, #1
 3125 001e 66D0     		beq	.L271
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3126              		.loc 1 1400 0 is_stmt 0 discriminator 2
 3127 0020 0124     		movs	r4, #1
 3128 0022 80F84040 		strb	r4, [r0, #64]
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3129              		.loc 1 1402 0 is_stmt 1 discriminator 2
 3130 0026 2124     		movs	r4, #33
 3131 0028 80F84140 		strb	r4, [r0, #65]
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3132              		.loc 1 1403 0 discriminator 2
 3133 002c 1024     		movs	r4, #16
 3134 002e 80F84240 		strb	r4, [r0, #66]
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3135              		.loc 1 1404 0 discriminator 2
 3136 0032 0024     		movs	r4, #0
 3137 0034 4464     		str	r4, [r0, #68]
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3138              		.loc 1 1407 0 discriminator 2
ARM GAS  /tmp/cciXgPzD.s 			page 149


 3139 0036 4262     		str	r2, [r0, #36]
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3140              		.loc 1 1408 0 discriminator 2
 3141 0038 4385     		strh	r3, [r0, #42]	@ movhi
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3142              		.loc 1 1409 0 discriminator 2
 3143 003a 2E4B     		ldr	r3, .L274
 3144              	.LVL243:
 3145 003c C362     		str	r3, [r0, #44]
 3146              	.LVL244:
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3147              		.loc 1 1410 0 discriminator 2
 3148 003e 2E4B     		ldr	r3, .L274+4
 3149 0040 4363     		str	r3, [r0, #52]
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3150              		.loc 1 1412 0 discriminator 2
 3151 0042 438D     		ldrh	r3, [r0, #42]
 3152 0044 9BB2     		uxth	r3, r3
 3153 0046 FF2B     		cmp	r3, #255
 3154 0048 1AD9     		bls	.L266
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3155              		.loc 1 1414 0
 3156 004a FF23     		movs	r3, #255
 3157 004c 0385     		strh	r3, [r0, #40]	@ movhi
 3158              	.LVL245:
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3159              		.loc 1 1415 0
 3160 004e 4FF08077 		mov	r7, #16777216
 3161              	.LVL246:
 3162              	.L267:
 3163 0052 9446     		mov	ip, r2
 3164 0054 0E46     		mov	r6, r1
 3165 0056 0446     		mov	r4, r0
 3166              	.LVL247:
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3167              		.loc 1 1423 0
 3168 0058 028D     		ldrh	r2, [r0, #40]
 3169              	.LVL248:
 3170 005a B2B9     		cbnz	r2, .L273
 3171              	.LVL249:
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3172              		.loc 1 1460 0
 3173 005c 274B     		ldr	r3, .L274+8
 3174 005e 4363     		str	r3, [r0, #52]
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3175              		.loc 1 1464 0
 3176 0060 274B     		ldr	r3, .L274+12
 3177 0062 0093     		str	r3, [sp]
 3178 0064 4FF00073 		mov	r3, #33554432
 3179 0068 D2B2     		uxtb	r2, r2
 3180 006a FFF7FEFF 		bl	I2C_TransferConfig
 3181              	.LVL250:
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3182              		.loc 1 1467 0
 3183 006e 0025     		movs	r5, #0
 3184 0070 84F84050 		strb	r5, [r4, #64]
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cciXgPzD.s 			page 150


 3185              		.loc 1 1475 0
 3186 0074 0121     		movs	r1, #1
 3187 0076 2046     		mov	r0, r4
 3188 0078 FFF7FEFF 		bl	I2C_Enable_IRQ
 3189              	.LVL251:
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3190              		.loc 1 1478 0
 3191 007c 2846     		mov	r0, r5
 3192 007e 32E0     		b	.L265
 3193              	.LVL252:
 3194              	.L266:
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3195              		.loc 1 1419 0
 3196 0080 438D     		ldrh	r3, [r0, #42]
 3197 0082 0385     		strh	r3, [r0, #40]	@ movhi
 3198              	.LVL253:
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3199              		.loc 1 1420 0
 3200 0084 4FF00077 		mov	r7, #33554432
 3201 0088 E3E7     		b	.L267
 3202              	.LVL254:
 3203              	.L273:
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3204              		.loc 1 1426 0
 3205 008a 836B     		ldr	r3, [r0, #56]
 3206 008c 1D4A     		ldr	r2, .L274+16
 3207 008e DA63     		str	r2, [r3, #60]
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3208              		.loc 1 1429 0
 3209 0090 836B     		ldr	r3, [r0, #56]
 3210 0092 1D4A     		ldr	r2, .L274+20
 3211 0094 DA64     		str	r2, [r3, #76]
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 3212              		.loc 1 1432 0
 3213 0096 836B     		ldr	r3, [r0, #56]
 3214 0098 0025     		movs	r5, #0
 3215 009a 1D64     		str	r5, [r3, #64]
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3216              		.loc 1 1433 0
 3217 009c 836B     		ldr	r3, [r0, #56]
 3218 009e 1D65     		str	r5, [r3, #80]
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3219              		.loc 1 1436 0
 3220 00a0 0268     		ldr	r2, [r0]
 3221 00a2 038D     		ldrh	r3, [r0, #40]
 3222 00a4 2832     		adds	r2, r2, #40
 3223 00a6 6146     		mov	r1, ip
 3224              	.LVL255:
 3225 00a8 806B     		ldr	r0, [r0, #56]
 3226              	.LVL256:
 3227 00aa FFF7FEFF 		bl	HAL_DMA_Start_IT
 3228              	.LVL257:
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3229              		.loc 1 1440 0
 3230 00ae 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 3231 00b2 134B     		ldr	r3, .L274+12
 3232 00b4 0093     		str	r3, [sp]
ARM GAS  /tmp/cciXgPzD.s 			page 151


 3233 00b6 3B46     		mov	r3, r7
 3234 00b8 3146     		mov	r1, r6
 3235 00ba 2046     		mov	r0, r4
 3236 00bc FFF7FEFF 		bl	I2C_TransferConfig
 3237              	.LVL258:
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3238              		.loc 1 1443 0
 3239 00c0 638D     		ldrh	r3, [r4, #42]
 3240 00c2 228D     		ldrh	r2, [r4, #40]
 3241 00c4 9B1A     		subs	r3, r3, r2
 3242 00c6 9BB2     		uxth	r3, r3
 3243 00c8 6385     		strh	r3, [r4, #42]	@ movhi
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3244              		.loc 1 1446 0
 3245 00ca 84F84050 		strb	r5, [r4, #64]
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3246              		.loc 1 1452 0
 3247 00ce 1121     		movs	r1, #17
 3248 00d0 2046     		mov	r0, r4
 3249 00d2 FFF7FEFF 		bl	I2C_Enable_IRQ
 3250              	.LVL259:
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3251              		.loc 1 1455 0
 3252 00d6 2268     		ldr	r2, [r4]
 3253 00d8 1368     		ldr	r3, [r2]
 3254 00da 43F48043 		orr	r3, r3, #16384
 3255 00de 1360     		str	r3, [r2]
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3256              		.loc 1 1478 0
 3257 00e0 2846     		mov	r0, r5
 3258 00e2 00E0     		b	.L265
 3259              	.LVL260:
 3260              	.L269:
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3261              		.loc 1 1482 0
 3262 00e4 0220     		movs	r0, #2
 3263              	.LVL261:
 3264              	.L265:
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3265              		.loc 1 1484 0
 3266 00e6 03B0     		add	sp, sp, #12
 3267              	.LCFI52:
 3268              		.cfi_remember_state
 3269              		.cfi_def_cfa_offset 20
 3270              		@ sp needed
 3271 00e8 F0BD     		pop	{r4, r5, r6, r7, pc}
 3272              	.LVL262:
 3273              	.L270:
 3274              	.LCFI53:
 3275              		.cfi_restore_state
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3276              		.loc 1 1396 0
 3277 00ea 0220     		movs	r0, #2
 3278              	.LVL263:
 3279 00ec FBE7     		b	.L265
 3280              	.LVL264:
 3281              	.L271:
ARM GAS  /tmp/cciXgPzD.s 			page 152


1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3282              		.loc 1 1400 0
 3283 00ee 0220     		movs	r0, #2
 3284              	.LVL265:
 3285 00f0 F9E7     		b	.L265
 3286              	.L275:
 3287 00f2 00BF     		.align	2
 3288              	.L274:
 3289 00f4 0000FFFF 		.word	-65536
 3290 00f8 00000000 		.word	I2C_Master_ISR_DMA
 3291 00fc 00000000 		.word	I2C_Master_ISR_IT
 3292 0100 00200080 		.word	-2147475456
 3293 0104 00000000 		.word	I2C_DMAMasterTransmitCplt
 3294 0108 00000000 		.word	I2C_DMAError
 3295              		.cfi_endproc
 3296              	.LFE150:
 3298              		.section	.text.HAL_I2C_Master_Receive_DMA,"ax",%progbits
 3299              		.align	1
 3300              		.global	HAL_I2C_Master_Receive_DMA
 3301              		.syntax unified
 3302              		.thumb
 3303              		.thumb_func
 3304              		.fpu fpv5-d16
 3306              	HAL_I2C_Master_Receive_DMA:
 3307              	.LFB151:
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 3308              		.loc 1 1497 0
 3309              		.cfi_startproc
 3310              		@ args = 0, pretend = 0, frame = 0
 3311              		@ frame_needed = 0, uses_anonymous_args = 0
 3312              	.LVL266:
 3313 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3314              	.LCFI54:
 3315              		.cfi_def_cfa_offset 20
 3316              		.cfi_offset 4, -20
 3317              		.cfi_offset 5, -16
 3318              		.cfi_offset 6, -12
 3319              		.cfi_offset 7, -8
 3320              		.cfi_offset 14, -4
 3321 0002 83B0     		sub	sp, sp, #12
 3322              	.LCFI55:
 3323              		.cfi_def_cfa_offset 32
 3324              	.LVL267:
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3325              		.loc 1 1500 0
 3326 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3327 0008 E4B2     		uxtb	r4, r4
 3328 000a 202C     		cmp	r4, #32
 3329 000c 69D1     		bne	.L281
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3330              		.loc 1 1502 0
 3331 000e 0468     		ldr	r4, [r0]
 3332 0010 A469     		ldr	r4, [r4, #24]
 3333 0012 14F4004F 		tst	r4, #32768
 3334 0016 67D1     		bne	.L282
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3335              		.loc 1 1508 0
ARM GAS  /tmp/cciXgPzD.s 			page 153


 3336 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3337 001c 012C     		cmp	r4, #1
 3338 001e 65D0     		beq	.L283
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3339              		.loc 1 1508 0 is_stmt 0 discriminator 2
 3340 0020 0124     		movs	r4, #1
 3341 0022 80F84040 		strb	r4, [r0, #64]
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3342              		.loc 1 1510 0 is_stmt 1 discriminator 2
 3343 0026 2224     		movs	r4, #34
 3344 0028 80F84140 		strb	r4, [r0, #65]
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3345              		.loc 1 1511 0 discriminator 2
 3346 002c 1024     		movs	r4, #16
 3347 002e 80F84240 		strb	r4, [r0, #66]
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3348              		.loc 1 1512 0 discriminator 2
 3349 0032 0024     		movs	r4, #0
 3350 0034 4464     		str	r4, [r0, #68]
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3351              		.loc 1 1515 0 discriminator 2
 3352 0036 4262     		str	r2, [r0, #36]
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3353              		.loc 1 1516 0 discriminator 2
 3354 0038 4385     		strh	r3, [r0, #42]	@ movhi
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3355              		.loc 1 1517 0 discriminator 2
 3356 003a 2D4B     		ldr	r3, .L286
 3357              	.LVL268:
 3358 003c C362     		str	r3, [r0, #44]
 3359              	.LVL269:
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3360              		.loc 1 1518 0 discriminator 2
 3361 003e 2D4B     		ldr	r3, .L286+4
 3362 0040 4363     		str	r3, [r0, #52]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3363              		.loc 1 1520 0 discriminator 2
 3364 0042 438D     		ldrh	r3, [r0, #42]
 3365 0044 9BB2     		uxth	r3, r3
 3366 0046 FF2B     		cmp	r3, #255
 3367 0048 1AD9     		bls	.L278
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3368              		.loc 1 1522 0
 3369 004a FF23     		movs	r3, #255
 3370 004c 0385     		strh	r3, [r0, #40]	@ movhi
 3371              	.LVL270:
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3372              		.loc 1 1523 0
 3373 004e 4FF08077 		mov	r7, #16777216
 3374              	.LVL271:
 3375              	.L279:
 3376 0052 0E46     		mov	r6, r1
 3377 0054 0446     		mov	r4, r0
 3378              	.LVL272:
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3379              		.loc 1 1531 0
 3380 0056 018D     		ldrh	r1, [r0, #40]
ARM GAS  /tmp/cciXgPzD.s 			page 154


 3381              	.LVL273:
 3382 0058 B9B9     		cbnz	r1, .L285
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3383              		.loc 1 1568 0
 3384 005a 274B     		ldr	r3, .L286+8
 3385 005c 4363     		str	r3, [r0, #52]
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3386              		.loc 1 1572 0
 3387 005e 274B     		ldr	r3, .L286+12
 3388 0060 0093     		str	r3, [sp]
 3389 0062 4FF00073 		mov	r3, #33554432
 3390 0066 CAB2     		uxtb	r2, r1
 3391              	.LVL274:
 3392 0068 3146     		mov	r1, r6
 3393 006a FFF7FEFF 		bl	I2C_TransferConfig
 3394              	.LVL275:
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3395              		.loc 1 1575 0
 3396 006e 0025     		movs	r5, #0
 3397 0070 84F84050 		strb	r5, [r4, #64]
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3398              		.loc 1 1583 0
 3399 0074 0121     		movs	r1, #1
 3400 0076 2046     		mov	r0, r4
 3401 0078 FFF7FEFF 		bl	I2C_Enable_IRQ
 3402              	.LVL276:
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3403              		.loc 1 1585 0
 3404 007c 2846     		mov	r0, r5
 3405 007e 31E0     		b	.L277
 3406              	.LVL277:
 3407              	.L278:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3408              		.loc 1 1527 0
 3409 0080 438D     		ldrh	r3, [r0, #42]
 3410 0082 0385     		strh	r3, [r0, #40]	@ movhi
 3411              	.LVL278:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3412              		.loc 1 1528 0
 3413 0084 4FF00077 		mov	r7, #33554432
 3414 0088 E3E7     		b	.L279
 3415              	.LVL279:
 3416              	.L285:
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3417              		.loc 1 1534 0
 3418 008a C36B     		ldr	r3, [r0, #60]
 3419 008c 1C49     		ldr	r1, .L286+16
 3420 008e D963     		str	r1, [r3, #60]
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3421              		.loc 1 1537 0
 3422 0090 C36B     		ldr	r3, [r0, #60]
 3423 0092 1C49     		ldr	r1, .L286+20
 3424 0094 D964     		str	r1, [r3, #76]
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 3425              		.loc 1 1540 0
 3426 0096 C36B     		ldr	r3, [r0, #60]
 3427 0098 0025     		movs	r5, #0
ARM GAS  /tmp/cciXgPzD.s 			page 155


 3428 009a 1D64     		str	r5, [r3, #64]
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3429              		.loc 1 1541 0
 3430 009c C36B     		ldr	r3, [r0, #60]
 3431 009e 1D65     		str	r5, [r3, #80]
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3432              		.loc 1 1544 0
 3433 00a0 0168     		ldr	r1, [r0]
 3434 00a2 038D     		ldrh	r3, [r0, #40]
 3435 00a4 2431     		adds	r1, r1, #36
 3436 00a6 C06B     		ldr	r0, [r0, #60]
 3437              	.LVL280:
 3438 00a8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3439              	.LVL281:
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3440              		.loc 1 1548 0
 3441 00ac 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 3442 00b0 124B     		ldr	r3, .L286+12
 3443 00b2 0093     		str	r3, [sp]
 3444 00b4 3B46     		mov	r3, r7
 3445 00b6 3146     		mov	r1, r6
 3446 00b8 2046     		mov	r0, r4
 3447 00ba FFF7FEFF 		bl	I2C_TransferConfig
 3448              	.LVL282:
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3449              		.loc 1 1551 0
 3450 00be 638D     		ldrh	r3, [r4, #42]
 3451 00c0 228D     		ldrh	r2, [r4, #40]
 3452 00c2 9B1A     		subs	r3, r3, r2
 3453 00c4 9BB2     		uxth	r3, r3
 3454 00c6 6385     		strh	r3, [r4, #42]	@ movhi
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3455              		.loc 1 1554 0
 3456 00c8 84F84050 		strb	r5, [r4, #64]
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3457              		.loc 1 1560 0
 3458 00cc 1121     		movs	r1, #17
 3459 00ce 2046     		mov	r0, r4
 3460 00d0 FFF7FEFF 		bl	I2C_Enable_IRQ
 3461              	.LVL283:
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3462              		.loc 1 1563 0
 3463 00d4 2268     		ldr	r2, [r4]
 3464 00d6 1368     		ldr	r3, [r2]
 3465 00d8 43F40043 		orr	r3, r3, #32768
 3466 00dc 1360     		str	r3, [r2]
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3467              		.loc 1 1585 0
 3468 00de 2846     		mov	r0, r5
 3469 00e0 00E0     		b	.L277
 3470              	.LVL284:
 3471              	.L281:
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3472              		.loc 1 1589 0
 3473 00e2 0220     		movs	r0, #2
 3474              	.LVL285:
 3475              	.L277:
ARM GAS  /tmp/cciXgPzD.s 			page 156


1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3476              		.loc 1 1591 0
 3477 00e4 03B0     		add	sp, sp, #12
 3478              	.LCFI56:
 3479              		.cfi_remember_state
 3480              		.cfi_def_cfa_offset 20
 3481              		@ sp needed
 3482 00e6 F0BD     		pop	{r4, r5, r6, r7, pc}
 3483              	.LVL286:
 3484              	.L282:
 3485              	.LCFI57:
 3486              		.cfi_restore_state
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3487              		.loc 1 1504 0
 3488 00e8 0220     		movs	r0, #2
 3489              	.LVL287:
 3490 00ea FBE7     		b	.L277
 3491              	.LVL288:
 3492              	.L283:
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3493              		.loc 1 1508 0
 3494 00ec 0220     		movs	r0, #2
 3495              	.LVL289:
 3496 00ee F9E7     		b	.L277
 3497              	.L287:
 3498              		.align	2
 3499              	.L286:
 3500 00f0 0000FFFF 		.word	-65536
 3501 00f4 00000000 		.word	I2C_Master_ISR_DMA
 3502 00f8 00000000 		.word	I2C_Master_ISR_IT
 3503 00fc 00240080 		.word	-2147474432
 3504 0100 00000000 		.word	I2C_DMAMasterReceiveCplt
 3505 0104 00000000 		.word	I2C_DMAError
 3506              		.cfi_endproc
 3507              	.LFE151:
 3509              		.section	.text.HAL_I2C_Slave_Transmit_DMA,"ax",%progbits
 3510              		.align	1
 3511              		.global	HAL_I2C_Slave_Transmit_DMA
 3512              		.syntax unified
 3513              		.thumb
 3514              		.thumb_func
 3515              		.fpu fpv5-d16
 3517              	HAL_I2C_Slave_Transmit_DMA:
 3518              	.LFB152:
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 3519              		.loc 1 1602 0
 3520              		.cfi_startproc
 3521              		@ args = 0, pretend = 0, frame = 0
 3522              		@ frame_needed = 0, uses_anonymous_args = 0
 3523              	.LVL290:
 3524 0000 38B5     		push	{r3, r4, r5, lr}
 3525              	.LCFI58:
 3526              		.cfi_def_cfa_offset 16
 3527              		.cfi_offset 3, -16
 3528              		.cfi_offset 4, -12
 3529              		.cfi_offset 5, -8
 3530              		.cfi_offset 14, -4
ARM GAS  /tmp/cciXgPzD.s 			page 157


1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3531              		.loc 1 1603 0
 3532 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3533 0006 DBB2     		uxtb	r3, r3
 3534 0008 202B     		cmp	r3, #32
 3535 000a 41D1     		bne	.L290
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3536              		.loc 1 1605 0
 3537 000c B2FA82F3 		clz	r3, r2
 3538 0010 5B09     		lsrs	r3, r3, #5
 3539 0012 0029     		cmp	r1, #0
 3540 0014 08BF     		it	eq
 3541 0016 0123     		moveq	r3, #1
 3542 0018 002B     		cmp	r3, #0
 3543 001a 3BD1     		bne	.L291
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3544              		.loc 1 1610 0
 3545 001c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3546 0020 012B     		cmp	r3, #1
 3547 0022 39D0     		beq	.L292
 3548 0024 0446     		mov	r4, r0
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3549              		.loc 1 1610 0 is_stmt 0 discriminator 2
 3550 0026 0123     		movs	r3, #1
 3551 0028 80F84030 		strb	r3, [r0, #64]
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3552              		.loc 1 1612 0 is_stmt 1 discriminator 2
 3553 002c 2123     		movs	r3, #33
 3554 002e 80F84130 		strb	r3, [r0, #65]
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3555              		.loc 1 1613 0 discriminator 2
 3556 0032 2023     		movs	r3, #32
 3557 0034 80F84230 		strb	r3, [r0, #66]
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3558              		.loc 1 1614 0 discriminator 2
 3559 0038 0025     		movs	r5, #0
 3560 003a 4564     		str	r5, [r0, #68]
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3561              		.loc 1 1617 0 discriminator 2
 3562 003c 4162     		str	r1, [r0, #36]
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3563              		.loc 1 1618 0 discriminator 2
 3564 003e 4285     		strh	r2, [r0, #42]	@ movhi
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3565              		.loc 1 1619 0 discriminator 2
 3566 0040 438D     		ldrh	r3, [r0, #42]
 3567 0042 0385     		strh	r3, [r0, #40]	@ movhi
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3568              		.loc 1 1620 0 discriminator 2
 3569 0044 154B     		ldr	r3, .L294
 3570 0046 C362     		str	r3, [r0, #44]
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3571              		.loc 1 1621 0 discriminator 2
 3572 0048 154B     		ldr	r3, .L294+4
 3573 004a 4363     		str	r3, [r0, #52]
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3574              		.loc 1 1624 0 discriminator 2
ARM GAS  /tmp/cciXgPzD.s 			page 158


 3575 004c 836B     		ldr	r3, [r0, #56]
 3576 004e 154A     		ldr	r2, .L294+8
 3577              	.LVL291:
 3578 0050 DA63     		str	r2, [r3, #60]
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3579              		.loc 1 1627 0 discriminator 2
 3580 0052 836B     		ldr	r3, [r0, #56]
 3581 0054 144A     		ldr	r2, .L294+12
 3582 0056 DA64     		str	r2, [r3, #76]
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
 3583              		.loc 1 1630 0 discriminator 2
 3584 0058 836B     		ldr	r3, [r0, #56]
 3585 005a 1D64     		str	r5, [r3, #64]
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3586              		.loc 1 1631 0 discriminator 2
 3587 005c 836B     		ldr	r3, [r0, #56]
 3588 005e 1D65     		str	r5, [r3, #80]
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3589              		.loc 1 1634 0 discriminator 2
 3590 0060 0268     		ldr	r2, [r0]
 3591 0062 038D     		ldrh	r3, [r0, #40]
 3592 0064 2832     		adds	r2, r2, #40
 3593 0066 806B     		ldr	r0, [r0, #56]
 3594              	.LVL292:
 3595 0068 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3596              	.LVL293:
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3597              		.loc 1 1637 0 discriminator 2
 3598 006c 2268     		ldr	r2, [r4]
 3599 006e 5368     		ldr	r3, [r2, #4]
 3600 0070 23F40043 		bic	r3, r3, #32768
 3601 0074 5360     		str	r3, [r2, #4]
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3602              		.loc 1 1640 0 discriminator 2
 3603 0076 84F84050 		strb	r5, [r4, #64]
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3604              		.loc 1 1646 0 discriminator 2
 3605 007a 0421     		movs	r1, #4
 3606 007c 2046     		mov	r0, r4
 3607 007e FFF7FEFF 		bl	I2C_Enable_IRQ
 3608              	.LVL294:
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3609              		.loc 1 1649 0 discriminator 2
 3610 0082 2268     		ldr	r2, [r4]
 3611 0084 1368     		ldr	r3, [r2]
 3612 0086 43F48043 		orr	r3, r3, #16384
 3613 008a 1360     		str	r3, [r2]
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3614              		.loc 1 1651 0 discriminator 2
 3615 008c 2846     		mov	r0, r5
 3616 008e 00E0     		b	.L289
 3617              	.LVL295:
 3618              	.L290:
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3619              		.loc 1 1655 0
 3620 0090 0220     		movs	r0, #2
 3621              	.LVL296:
ARM GAS  /tmp/cciXgPzD.s 			page 159


 3622              	.L289:
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3623              		.loc 1 1657 0
 3624 0092 38BD     		pop	{r3, r4, r5, pc}
 3625              	.LVL297:
 3626              	.L291:
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3627              		.loc 1 1607 0
 3628 0094 0120     		movs	r0, #1
 3629              	.LVL298:
 3630 0096 FCE7     		b	.L289
 3631              	.LVL299:
 3632              	.L292:
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3633              		.loc 1 1610 0
 3634 0098 0220     		movs	r0, #2
 3635              	.LVL300:
 3636 009a FAE7     		b	.L289
 3637              	.L295:
 3638              		.align	2
 3639              	.L294:
 3640 009c 0000FFFF 		.word	-65536
 3641 00a0 00000000 		.word	I2C_Slave_ISR_DMA
 3642 00a4 00000000 		.word	I2C_DMASlaveTransmitCplt
 3643 00a8 00000000 		.word	I2C_DMAError
 3644              		.cfi_endproc
 3645              	.LFE152:
 3647              		.section	.text.HAL_I2C_Slave_Receive_DMA,"ax",%progbits
 3648              		.align	1
 3649              		.global	HAL_I2C_Slave_Receive_DMA
 3650              		.syntax unified
 3651              		.thumb
 3652              		.thumb_func
 3653              		.fpu fpv5-d16
 3655              	HAL_I2C_Slave_Receive_DMA:
 3656              	.LFB153:
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 3657              		.loc 1 1668 0
 3658              		.cfi_startproc
 3659              		@ args = 0, pretend = 0, frame = 0
 3660              		@ frame_needed = 0, uses_anonymous_args = 0
 3661              	.LVL301:
 3662 0000 38B5     		push	{r3, r4, r5, lr}
 3663              	.LCFI59:
 3664              		.cfi_def_cfa_offset 16
 3665              		.cfi_offset 3, -16
 3666              		.cfi_offset 4, -12
 3667              		.cfi_offset 5, -8
 3668              		.cfi_offset 14, -4
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3669              		.loc 1 1669 0
 3670 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3671 0006 DBB2     		uxtb	r3, r3
 3672 0008 202B     		cmp	r3, #32
 3673 000a 43D1     		bne	.L298
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3674              		.loc 1 1671 0
ARM GAS  /tmp/cciXgPzD.s 			page 160


 3675 000c B2FA82F3 		clz	r3, r2
 3676 0010 5B09     		lsrs	r3, r3, #5
 3677 0012 0029     		cmp	r1, #0
 3678 0014 08BF     		it	eq
 3679 0016 0123     		moveq	r3, #1
 3680 0018 002B     		cmp	r3, #0
 3681 001a 3DD1     		bne	.L299
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3682              		.loc 1 1676 0
 3683 001c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3684 0020 012B     		cmp	r3, #1
 3685 0022 3BD0     		beq	.L300
 3686 0024 1346     		mov	r3, r2
 3687 0026 0A46     		mov	r2, r1
 3688              	.LVL302:
 3689 0028 0446     		mov	r4, r0
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3690              		.loc 1 1676 0 is_stmt 0 discriminator 2
 3691 002a 0121     		movs	r1, #1
 3692              	.LVL303:
 3693 002c 80F84010 		strb	r1, [r0, #64]
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3694              		.loc 1 1678 0 is_stmt 1 discriminator 2
 3695 0030 2221     		movs	r1, #34
 3696 0032 80F84110 		strb	r1, [r0, #65]
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3697              		.loc 1 1679 0 discriminator 2
 3698 0036 2021     		movs	r1, #32
 3699 0038 80F84210 		strb	r1, [r0, #66]
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3700              		.loc 1 1680 0 discriminator 2
 3701 003c 0025     		movs	r5, #0
 3702 003e 4564     		str	r5, [r0, #68]
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3703              		.loc 1 1683 0 discriminator 2
 3704 0040 4262     		str	r2, [r0, #36]
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3705              		.loc 1 1684 0 discriminator 2
 3706 0042 4385     		strh	r3, [r0, #42]	@ movhi
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3707              		.loc 1 1685 0 discriminator 2
 3708 0044 438D     		ldrh	r3, [r0, #42]
 3709 0046 0385     		strh	r3, [r0, #40]	@ movhi
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3710              		.loc 1 1686 0 discriminator 2
 3711 0048 154B     		ldr	r3, .L302
 3712 004a C362     		str	r3, [r0, #44]
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3713              		.loc 1 1687 0 discriminator 2
 3714 004c 154B     		ldr	r3, .L302+4
 3715 004e 4363     		str	r3, [r0, #52]
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3716              		.loc 1 1690 0 discriminator 2
 3717 0050 C36B     		ldr	r3, [r0, #60]
 3718 0052 1549     		ldr	r1, .L302+8
 3719 0054 D963     		str	r1, [r3, #60]
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 161


 3720              		.loc 1 1693 0 discriminator 2
 3721 0056 C36B     		ldr	r3, [r0, #60]
 3722 0058 1449     		ldr	r1, .L302+12
 3723 005a D964     		str	r1, [r3, #76]
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
 3724              		.loc 1 1696 0 discriminator 2
 3725 005c C36B     		ldr	r3, [r0, #60]
 3726 005e 1D64     		str	r5, [r3, #64]
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3727              		.loc 1 1697 0 discriminator 2
 3728 0060 C36B     		ldr	r3, [r0, #60]
 3729 0062 1D65     		str	r5, [r3, #80]
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3730              		.loc 1 1700 0 discriminator 2
 3731 0064 0168     		ldr	r1, [r0]
 3732 0066 038D     		ldrh	r3, [r0, #40]
 3733 0068 2431     		adds	r1, r1, #36
 3734 006a C06B     		ldr	r0, [r0, #60]
 3735              	.LVL304:
 3736 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 3737              	.LVL305:
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3738              		.loc 1 1703 0 discriminator 2
 3739 0070 2268     		ldr	r2, [r4]
 3740 0072 5368     		ldr	r3, [r2, #4]
 3741 0074 23F40043 		bic	r3, r3, #32768
 3742 0078 5360     		str	r3, [r2, #4]
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3743              		.loc 1 1706 0 discriminator 2
 3744 007a 84F84050 		strb	r5, [r4, #64]
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3745              		.loc 1 1712 0 discriminator 2
 3746 007e 0421     		movs	r1, #4
 3747 0080 2046     		mov	r0, r4
 3748 0082 FFF7FEFF 		bl	I2C_Enable_IRQ
 3749              	.LVL306:
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3750              		.loc 1 1715 0 discriminator 2
 3751 0086 2268     		ldr	r2, [r4]
 3752 0088 1368     		ldr	r3, [r2]
 3753 008a 43F40043 		orr	r3, r3, #32768
 3754 008e 1360     		str	r3, [r2]
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3755              		.loc 1 1717 0 discriminator 2
 3756 0090 2846     		mov	r0, r5
 3757 0092 00E0     		b	.L297
 3758              	.LVL307:
 3759              	.L298:
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3760              		.loc 1 1721 0
 3761 0094 0220     		movs	r0, #2
 3762              	.LVL308:
 3763              	.L297:
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 3764              		.loc 1 1723 0
 3765 0096 38BD     		pop	{r3, r4, r5, pc}
 3766              	.LVL309:
ARM GAS  /tmp/cciXgPzD.s 			page 162


 3767              	.L299:
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3768              		.loc 1 1673 0
 3769 0098 0120     		movs	r0, #1
 3770              	.LVL310:
 3771 009a FCE7     		b	.L297
 3772              	.LVL311:
 3773              	.L300:
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3774              		.loc 1 1676 0
 3775 009c 0220     		movs	r0, #2
 3776              	.LVL312:
 3777 009e FAE7     		b	.L297
 3778              	.L303:
 3779              		.align	2
 3780              	.L302:
 3781 00a0 0000FFFF 		.word	-65536
 3782 00a4 00000000 		.word	I2C_Slave_ISR_DMA
 3783 00a8 00000000 		.word	I2C_DMASlaveReceiveCplt
 3784 00ac 00000000 		.word	I2C_DMAError
 3785              		.cfi_endproc
 3786              	.LFE153:
 3788              		.section	.text.HAL_I2C_Mem_Write,"ax",%progbits
 3789              		.align	1
 3790              		.global	HAL_I2C_Mem_Write
 3791              		.syntax unified
 3792              		.thumb
 3793              		.thumb_func
 3794              		.fpu fpv5-d16
 3796              	HAL_I2C_Mem_Write:
 3797              	.LFB154:
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 3798              		.loc 1 1738 0
 3799              		.cfi_startproc
 3800              		@ args = 12, pretend = 0, frame = 0
 3801              		@ frame_needed = 0, uses_anonymous_args = 0
 3802              	.LVL313:
 3803 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3804              	.LCFI60:
 3805              		.cfi_def_cfa_offset 32
 3806              		.cfi_offset 4, -32
 3807              		.cfi_offset 5, -28
 3808              		.cfi_offset 6, -24
 3809              		.cfi_offset 7, -20
 3810              		.cfi_offset 8, -16
 3811              		.cfi_offset 9, -12
 3812              		.cfi_offset 10, -8
 3813              		.cfi_offset 14, -4
 3814 0004 82B0     		sub	sp, sp, #8
 3815              	.LCFI61:
 3816              		.cfi_def_cfa_offset 40
 3817 0006 BDF82C70 		ldrh	r7, [sp, #44]
 3818              	.LVL314:
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3819              		.loc 1 1744 0
 3820 000a 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 3821 000e EDB2     		uxtb	r5, r5
ARM GAS  /tmp/cciXgPzD.s 			page 163


 3822 0010 202D     		cmp	r5, #32
 3823 0012 40F0CE80 		bne	.L315
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3824              		.loc 1 1746 0
 3825 0016 B7FA87F5 		clz	r5, r7
 3826 001a 6D09     		lsrs	r5, r5, #5
 3827 001c 0A9C     		ldr	r4, [sp, #40]
 3828 001e 002C     		cmp	r4, #0
 3829 0020 08BF     		it	eq
 3830 0022 0125     		moveq	r5, #1
 3831 0024 002D     		cmp	r5, #0
 3832 0026 40F0C980 		bne	.L316
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3833              		.loc 1 1752 0
 3834 002a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3835 002e 012C     		cmp	r4, #1
 3836 0030 00F0C680 		beq	.L317
 3837 0034 9846     		mov	r8, r3
 3838 0036 9146     		mov	r9, r2
 3839 0038 0D46     		mov	r5, r1
 3840 003a 0446     		mov	r4, r0
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3841              		.loc 1 1752 0 is_stmt 0 discriminator 2
 3842 003c 4FF0010A 		mov	r10, #1
 3843 0040 80F840A0 		strb	r10, [r0, #64]
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3844              		.loc 1 1755 0 is_stmt 1 discriminator 2
 3845 0044 FFF7FEFF 		bl	HAL_GetTick
 3846              	.LVL315:
 3847 0048 0646     		mov	r6, r0
 3848              	.LVL316:
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3849              		.loc 1 1757 0 discriminator 2
 3850 004a 0090     		str	r0, [sp]
 3851 004c 1923     		movs	r3, #25
 3852 004e 5246     		mov	r2, r10
 3853 0050 4FF40041 		mov	r1, #32768
 3854 0054 2046     		mov	r0, r4
 3855              	.LVL317:
 3856 0056 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3857              	.LVL318:
 3858 005a 0028     		cmp	r0, #0
 3859 005c 40F0B280 		bne	.L318
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3860              		.loc 1 1762 0
 3861 0060 2123     		movs	r3, #33
 3862 0062 84F84130 		strb	r3, [r4, #65]
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3863              		.loc 1 1763 0
 3864 0066 4023     		movs	r3, #64
 3865 0068 84F84230 		strb	r3, [r4, #66]
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3866              		.loc 1 1764 0
 3867 006c 0023     		movs	r3, #0
 3868 006e 6364     		str	r3, [r4, #68]
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3869              		.loc 1 1767 0
ARM GAS  /tmp/cciXgPzD.s 			page 164


 3870 0070 0A9A     		ldr	r2, [sp, #40]
 3871 0072 6262     		str	r2, [r4, #36]
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3872              		.loc 1 1768 0
 3873 0074 6785     		strh	r7, [r4, #42]	@ movhi
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3874              		.loc 1 1769 0
 3875 0076 6363     		str	r3, [r4, #52]
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3876              		.loc 1 1772 0
 3877 0078 0196     		str	r6, [sp, #4]
 3878 007a 0C9B     		ldr	r3, [sp, #48]
 3879 007c 0093     		str	r3, [sp]
 3880 007e 4346     		mov	r3, r8
 3881 0080 4A46     		mov	r2, r9
 3882 0082 2946     		mov	r1, r5
 3883 0084 2046     		mov	r0, r4
 3884 0086 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 3885              	.LVL319:
 3886 008a 60B1     		cbz	r0, .L306
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3887              		.loc 1 1774 0
 3888 008c 636C     		ldr	r3, [r4, #68]
 3889 008e 042B     		cmp	r3, #4
 3890 0090 04D1     		bne	.L307
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 3891              		.loc 1 1777 0
 3892 0092 0023     		movs	r3, #0
 3893 0094 84F84030 		strb	r3, [r4, #64]
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3894              		.loc 1 1778 0
 3895 0098 5346     		mov	r3, r10
 3896 009a 8BE0     		b	.L305
 3897              	.L307:
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 3898              		.loc 1 1783 0
 3899 009c 0023     		movs	r3, #0
 3900 009e 84F84030 		strb	r3, [r4, #64]
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3901              		.loc 1 1784 0
 3902 00a2 0323     		movs	r3, #3
 3903 00a4 86E0     		b	.L305
 3904              	.L306:
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3905              		.loc 1 1789 0
 3906 00a6 638D     		ldrh	r3, [r4, #42]
 3907 00a8 9BB2     		uxth	r3, r3
 3908 00aa FF2B     		cmp	r3, #255
 3909 00ac 0AD9     		bls	.L308
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 3910              		.loc 1 1791 0
 3911 00ae FF22     		movs	r2, #255
 3912 00b0 2285     		strh	r2, [r4, #40]	@ movhi
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3913              		.loc 1 1792 0
 3914 00b2 0023     		movs	r3, #0
 3915 00b4 0093     		str	r3, [sp]
ARM GAS  /tmp/cciXgPzD.s 			page 165


 3916 00b6 4FF08073 		mov	r3, #16777216
 3917 00ba 2946     		mov	r1, r5
 3918 00bc 2046     		mov	r0, r4
 3919 00be FFF7FEFF 		bl	I2C_TransferConfig
 3920              	.LVL320:
 3921 00c2 21E0     		b	.L313
 3922              	.L308:
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 3923              		.loc 1 1796 0
 3924 00c4 628D     		ldrh	r2, [r4, #42]
 3925 00c6 92B2     		uxth	r2, r2
 3926 00c8 2285     		strh	r2, [r4, #40]	@ movhi
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3927              		.loc 1 1797 0
 3928 00ca 0023     		movs	r3, #0
 3929 00cc 0093     		str	r3, [sp]
 3930 00ce 4FF00073 		mov	r3, #33554432
 3931 00d2 D2B2     		uxtb	r2, r2
 3932 00d4 2946     		mov	r1, r5
 3933 00d6 2046     		mov	r0, r4
 3934 00d8 FFF7FEFF 		bl	I2C_TransferConfig
 3935              	.LVL321:
 3936 00dc 14E0     		b	.L313
 3937              	.L324:
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 3938              		.loc 1 1805 0
 3939 00de 636C     		ldr	r3, [r4, #68]
 3940 00e0 042B     		cmp	r3, #4
 3941 00e2 71D1     		bne	.L319
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 3942              		.loc 1 1807 0
 3943 00e4 0123     		movs	r3, #1
 3944 00e6 65E0     		b	.L305
 3945              	.L312:
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 3946              		.loc 1 1835 0
 3947 00e8 628D     		ldrh	r2, [r4, #42]
 3948 00ea 92B2     		uxth	r2, r2
 3949 00ec 2285     		strh	r2, [r4, #40]	@ movhi
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 3950              		.loc 1 1836 0
 3951 00ee 0023     		movs	r3, #0
 3952 00f0 0093     		str	r3, [sp]
 3953 00f2 4FF00073 		mov	r3, #33554432
 3954 00f6 D2B2     		uxtb	r2, r2
 3955 00f8 2946     		mov	r1, r5
 3956 00fa 2046     		mov	r0, r4
 3957 00fc FFF7FEFF 		bl	I2C_TransferConfig
 3958              	.LVL322:
 3959              	.L311:
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3960              		.loc 1 1841 0
 3961 0100 638D     		ldrh	r3, [r4, #42]
 3962 0102 9BB2     		uxth	r3, r3
 3963 0104 002B     		cmp	r3, #0
 3964 0106 32D0     		beq	.L323
 3965              	.L313:
ARM GAS  /tmp/cciXgPzD.s 			page 166


1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3966              		.loc 1 1803 0
 3967 0108 3246     		mov	r2, r6
 3968 010a 0C99     		ldr	r1, [sp, #48]
 3969 010c 2046     		mov	r0, r4
 3970 010e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 3971              	.LVL323:
 3972 0112 0028     		cmp	r0, #0
 3973 0114 E3D1     		bne	.L324
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 3974              		.loc 1 1816 0
 3975 0116 636A     		ldr	r3, [r4, #36]
 3976 0118 5A1C     		adds	r2, r3, #1
 3977 011a 6262     		str	r2, [r4, #36]
 3978 011c 2268     		ldr	r2, [r4]
 3979 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3980 0120 9362     		str	r3, [r2, #40]
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 3981              		.loc 1 1817 0
 3982 0122 638D     		ldrh	r3, [r4, #42]
 3983 0124 013B     		subs	r3, r3, #1
 3984 0126 9BB2     		uxth	r3, r3
 3985 0128 6385     		strh	r3, [r4, #42]	@ movhi
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3986              		.loc 1 1818 0
 3987 012a 238D     		ldrh	r3, [r4, #40]
 3988 012c 013B     		subs	r3, r3, #1
 3989 012e 9BB2     		uxth	r3, r3
 3990 0130 2385     		strh	r3, [r4, #40]	@ movhi
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3991              		.loc 1 1820 0
 3992 0132 002B     		cmp	r3, #0
 3993 0134 E4D1     		bne	.L311
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3994              		.loc 1 1820 0 is_stmt 0 discriminator 1
 3995 0136 638D     		ldrh	r3, [r4, #42]
 3996 0138 9BB2     		uxth	r3, r3
 3997 013a 002B     		cmp	r3, #0
 3998 013c E0D0     		beq	.L311
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 3999              		.loc 1 1823 0 is_stmt 1
 4000 013e 0096     		str	r6, [sp]
 4001 0140 0C9B     		ldr	r3, [sp, #48]
 4002 0142 0022     		movs	r2, #0
 4003 0144 8021     		movs	r1, #128
 4004 0146 2046     		mov	r0, r4
 4005 0148 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4006              	.LVL324:
 4007 014c 0028     		cmp	r0, #0
 4008 014e 3DD1     		bne	.L320
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 4009              		.loc 1 1828 0
 4010 0150 638D     		ldrh	r3, [r4, #42]
 4011 0152 9BB2     		uxth	r3, r3
 4012 0154 FF2B     		cmp	r3, #255
 4013 0156 C7D9     		bls	.L312
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
ARM GAS  /tmp/cciXgPzD.s 			page 167


 4014              		.loc 1 1830 0
 4015 0158 FF22     		movs	r2, #255
 4016 015a 2285     		strh	r2, [r4, #40]	@ movhi
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4017              		.loc 1 1831 0
 4018 015c 0023     		movs	r3, #0
 4019 015e 0093     		str	r3, [sp]
 4020 0160 4FF08073 		mov	r3, #16777216
 4021 0164 2946     		mov	r1, r5
 4022 0166 2046     		mov	r0, r4
 4023 0168 FFF7FEFF 		bl	I2C_TransferConfig
 4024              	.LVL325:
 4025 016c C8E7     		b	.L311
 4026              	.L323:
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4027              		.loc 1 1845 0
 4028 016e 3246     		mov	r2, r6
 4029 0170 0C99     		ldr	r1, [sp, #48]
 4030 0172 2046     		mov	r0, r4
 4031 0174 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4032              	.LVL326:
 4033 0178 0346     		mov	r3, r0
 4034 017a 20B1     		cbz	r0, .L314
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4035              		.loc 1 1847 0
 4036 017c 636C     		ldr	r3, [r4, #68]
 4037 017e 042B     		cmp	r3, #4
 4038 0180 26D1     		bne	.L321
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4039              		.loc 1 1849 0
 4040 0182 0123     		movs	r3, #1
 4041 0184 16E0     		b	.L305
 4042              	.L314:
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4043              		.loc 1 1858 0
 4044 0186 2268     		ldr	r2, [r4]
 4045 0188 2021     		movs	r1, #32
 4046 018a D161     		str	r1, [r2, #28]
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4047              		.loc 1 1861 0
 4048 018c 2068     		ldr	r0, [r4]
 4049 018e 4268     		ldr	r2, [r0, #4]
 4050 0190 22F0FF72 		bic	r2, r2, #33423360
 4051 0194 22F48B32 		bic	r2, r2, #71168
 4052 0198 22F4FF72 		bic	r2, r2, #510
 4053 019c 22F00102 		bic	r2, r2, #1
 4054 01a0 4260     		str	r2, [r0, #4]
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4055              		.loc 1 1863 0
 4056 01a2 84F84110 		strb	r1, [r4, #65]
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4057              		.loc 1 1864 0
 4058 01a6 0022     		movs	r2, #0
 4059 01a8 84F84220 		strb	r2, [r4, #66]
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4060              		.loc 1 1867 0
 4061 01ac 84F84020 		strb	r2, [r4, #64]
ARM GAS  /tmp/cciXgPzD.s 			page 168


1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4062              		.loc 1 1869 0
 4063 01b0 00E0     		b	.L305
 4064              	.LVL327:
 4065              	.L315:
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4066              		.loc 1 1873 0
 4067 01b2 0223     		movs	r3, #2
 4068              	.LVL328:
 4069              	.L305:
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4070              		.loc 1 1875 0
 4071 01b4 1846     		mov	r0, r3
 4072 01b6 02B0     		add	sp, sp, #8
 4073              	.LCFI62:
 4074              		.cfi_remember_state
 4075              		.cfi_def_cfa_offset 32
 4076              		@ sp needed
 4077 01b8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4078              	.LVL329:
 4079              	.L316:
 4080              	.LCFI63:
 4081              		.cfi_restore_state
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4082              		.loc 1 1748 0
 4083 01bc 0123     		movs	r3, #1
 4084              	.LVL330:
 4085 01be F9E7     		b	.L305
 4086              	.LVL331:
 4087              	.L317:
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4088              		.loc 1 1752 0
 4089 01c0 0223     		movs	r3, #2
 4090              	.LVL332:
 4091 01c2 F7E7     		b	.L305
 4092              	.LVL333:
 4093              	.L318:
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4094              		.loc 1 1759 0
 4095 01c4 0323     		movs	r3, #3
 4096 01c6 F5E7     		b	.L305
 4097              	.L319:
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4098              		.loc 1 1811 0
 4099 01c8 0323     		movs	r3, #3
 4100 01ca F3E7     		b	.L305
 4101              	.L320:
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4102              		.loc 1 1825 0
 4103 01cc 0323     		movs	r3, #3
 4104 01ce F1E7     		b	.L305
 4105              	.L321:
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4106              		.loc 1 1853 0
 4107 01d0 0323     		movs	r3, #3
 4108 01d2 EFE7     		b	.L305
 4109              		.cfi_endproc
ARM GAS  /tmp/cciXgPzD.s 			page 169


 4110              	.LFE154:
 4112              		.section	.text.HAL_I2C_Mem_Read,"ax",%progbits
 4113              		.align	1
 4114              		.global	HAL_I2C_Mem_Read
 4115              		.syntax unified
 4116              		.thumb
 4117              		.thumb_func
 4118              		.fpu fpv5-d16
 4120              	HAL_I2C_Mem_Read:
 4121              	.LFB155:
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 4122              		.loc 1 1891 0
 4123              		.cfi_startproc
 4124              		@ args = 12, pretend = 0, frame = 0
 4125              		@ frame_needed = 0, uses_anonymous_args = 0
 4126              	.LVL334:
 4127 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4128              	.LCFI64:
 4129              		.cfi_def_cfa_offset 32
 4130              		.cfi_offset 4, -32
 4131              		.cfi_offset 5, -28
 4132              		.cfi_offset 6, -24
 4133              		.cfi_offset 7, -20
 4134              		.cfi_offset 8, -16
 4135              		.cfi_offset 9, -12
 4136              		.cfi_offset 10, -8
 4137              		.cfi_offset 14, -4
 4138 0004 82B0     		sub	sp, sp, #8
 4139              	.LCFI65:
 4140              		.cfi_def_cfa_offset 40
 4141 0006 BDF82C70 		ldrh	r7, [sp, #44]
 4142              	.LVL335:
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4143              		.loc 1 1897 0
 4144 000a 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 4145 000e EDB2     		uxtb	r5, r5
 4146 0010 202D     		cmp	r5, #32
 4147 0012 40F0CB80 		bne	.L335
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4148              		.loc 1 1899 0
 4149 0016 B7FA87F5 		clz	r5, r7
 4150 001a 6D09     		lsrs	r5, r5, #5
 4151 001c 0A9C     		ldr	r4, [sp, #40]
 4152 001e 002C     		cmp	r4, #0
 4153 0020 08BF     		it	eq
 4154 0022 0125     		moveq	r5, #1
 4155 0024 002D     		cmp	r5, #0
 4156 0026 40F0C680 		bne	.L336
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4157              		.loc 1 1905 0
 4158 002a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4159 002e 012C     		cmp	r4, #1
 4160 0030 00F0C380 		beq	.L337
 4161 0034 9846     		mov	r8, r3
 4162 0036 9146     		mov	r9, r2
 4163 0038 0D46     		mov	r5, r1
 4164 003a 0446     		mov	r4, r0
ARM GAS  /tmp/cciXgPzD.s 			page 170


1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4165              		.loc 1 1905 0 is_stmt 0 discriminator 2
 4166 003c 4FF0010A 		mov	r10, #1
 4167 0040 80F840A0 		strb	r10, [r0, #64]
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4168              		.loc 1 1908 0 is_stmt 1 discriminator 2
 4169 0044 FFF7FEFF 		bl	HAL_GetTick
 4170              	.LVL336:
 4171 0048 0646     		mov	r6, r0
 4172              	.LVL337:
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4173              		.loc 1 1910 0 discriminator 2
 4174 004a 0090     		str	r0, [sp]
 4175 004c 1923     		movs	r3, #25
 4176 004e 5246     		mov	r2, r10
 4177 0050 4FF40041 		mov	r1, #32768
 4178 0054 2046     		mov	r0, r4
 4179              	.LVL338:
 4180 0056 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4181              	.LVL339:
 4182 005a 0028     		cmp	r0, #0
 4183 005c 40F0AF80 		bne	.L338
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 4184              		.loc 1 1915 0
 4185 0060 2223     		movs	r3, #34
 4186 0062 84F84130 		strb	r3, [r4, #65]
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 4187              		.loc 1 1916 0
 4188 0066 4023     		movs	r3, #64
 4189 0068 84F84230 		strb	r3, [r4, #66]
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4190              		.loc 1 1917 0
 4191 006c 0023     		movs	r3, #0
 4192 006e 6364     		str	r3, [r4, #68]
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 4193              		.loc 1 1920 0
 4194 0070 0A9A     		ldr	r2, [sp, #40]
 4195 0072 6262     		str	r2, [r4, #36]
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 4196              		.loc 1 1921 0
 4197 0074 6785     		strh	r7, [r4, #42]	@ movhi
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4198              		.loc 1 1922 0
 4199 0076 6363     		str	r3, [r4, #52]
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4200              		.loc 1 1925 0
 4201 0078 0196     		str	r6, [sp, #4]
 4202 007a 0C9B     		ldr	r3, [sp, #48]
 4203 007c 0093     		str	r3, [sp]
 4204 007e 4346     		mov	r3, r8
 4205 0080 4A46     		mov	r2, r9
 4206 0082 2946     		mov	r1, r5
 4207 0084 2046     		mov	r0, r4
 4208 0086 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4209              	.LVL340:
 4210 008a 60B1     		cbz	r0, .L327
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
ARM GAS  /tmp/cciXgPzD.s 			page 171


 4211              		.loc 1 1927 0
 4212 008c 636C     		ldr	r3, [r4, #68]
 4213 008e 042B     		cmp	r3, #4
 4214 0090 04D1     		bne	.L328
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 4215              		.loc 1 1930 0
 4216 0092 0023     		movs	r3, #0
 4217 0094 84F84030 		strb	r3, [r4, #64]
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4218              		.loc 1 1931 0
 4219 0098 5346     		mov	r3, r10
 4220 009a 88E0     		b	.L326
 4221              	.L328:
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4222              		.loc 1 1936 0
 4223 009c 0023     		movs	r3, #0
 4224 009e 84F84030 		strb	r3, [r4, #64]
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4225              		.loc 1 1937 0
 4226 00a2 0323     		movs	r3, #3
 4227 00a4 83E0     		b	.L326
 4228              	.L327:
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4229              		.loc 1 1943 0
 4230 00a6 638D     		ldrh	r3, [r4, #42]
 4231 00a8 9BB2     		uxth	r3, r3
 4232 00aa FF2B     		cmp	r3, #255
 4233 00ac 0AD9     		bls	.L329
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
 4234              		.loc 1 1945 0
 4235 00ae FF22     		movs	r2, #255
 4236 00b0 2285     		strh	r2, [r4, #40]	@ movhi
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4237              		.loc 1 1946 0
 4238 00b2 474B     		ldr	r3, .L344
 4239 00b4 0093     		str	r3, [sp]
 4240 00b6 4FF08073 		mov	r3, #16777216
 4241 00ba 2946     		mov	r1, r5
 4242 00bc 2046     		mov	r0, r4
 4243 00be FFF7FEFF 		bl	I2C_TransferConfig
 4244              	.LVL341:
 4245 00c2 1CE0     		b	.L333
 4246              	.L329:
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 4247              		.loc 1 1950 0
 4248 00c4 628D     		ldrh	r2, [r4, #42]
 4249 00c6 92B2     		uxth	r2, r2
 4250 00c8 2285     		strh	r2, [r4, #40]	@ movhi
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4251              		.loc 1 1951 0
 4252 00ca 414B     		ldr	r3, .L344
 4253 00cc 0093     		str	r3, [sp]
 4254 00ce 4FF00073 		mov	r3, #33554432
 4255 00d2 D2B2     		uxtb	r2, r2
 4256 00d4 2946     		mov	r1, r5
 4257 00d6 2046     		mov	r0, r4
 4258 00d8 FFF7FEFF 		bl	I2C_TransferConfig
ARM GAS  /tmp/cciXgPzD.s 			page 172


 4259              	.LVL342:
 4260 00dc 0FE0     		b	.L333
 4261              	.L332:
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 4262              		.loc 1 1982 0
 4263 00de 628D     		ldrh	r2, [r4, #42]
 4264 00e0 92B2     		uxth	r2, r2
 4265 00e2 2285     		strh	r2, [r4, #40]	@ movhi
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4266              		.loc 1 1983 0
 4267 00e4 0023     		movs	r3, #0
 4268 00e6 0093     		str	r3, [sp]
 4269 00e8 4FF00073 		mov	r3, #33554432
 4270 00ec D2B2     		uxtb	r2, r2
 4271 00ee 2946     		mov	r1, r5
 4272 00f0 2046     		mov	r0, r4
 4273 00f2 FFF7FEFF 		bl	I2C_TransferConfig
 4274              	.LVL343:
 4275              	.L331:
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4276              		.loc 1 1987 0
 4277 00f6 638D     		ldrh	r3, [r4, #42]
 4278 00f8 9BB2     		uxth	r3, r3
 4279 00fa 002B     		cmp	r3, #0
 4280 00fc 34D0     		beq	.L343
 4281              	.L333:
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4282              		.loc 1 1957 0
 4283 00fe 0096     		str	r6, [sp]
 4284 0100 0C9B     		ldr	r3, [sp, #48]
 4285 0102 0022     		movs	r2, #0
 4286 0104 0421     		movs	r1, #4
 4287 0106 2046     		mov	r0, r4
 4288 0108 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4289              	.LVL344:
 4290 010c 0028     		cmp	r0, #0
 4291 010e 58D1     		bne	.L339
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 4292              		.loc 1 1963 0
 4293 0110 2368     		ldr	r3, [r4]
 4294 0112 5A6A     		ldr	r2, [r3, #36]
 4295 0114 636A     		ldr	r3, [r4, #36]
 4296 0116 591C     		adds	r1, r3, #1
 4297 0118 6162     		str	r1, [r4, #36]
 4298 011a 1A70     		strb	r2, [r3]
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 4299              		.loc 1 1964 0
 4300 011c 238D     		ldrh	r3, [r4, #40]
 4301 011e 013B     		subs	r3, r3, #1
 4302 0120 9BB2     		uxth	r3, r3
 4303 0122 2385     		strh	r3, [r4, #40]	@ movhi
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4304              		.loc 1 1965 0
 4305 0124 628D     		ldrh	r2, [r4, #42]
 4306 0126 013A     		subs	r2, r2, #1
 4307 0128 92B2     		uxth	r2, r2
 4308 012a 6285     		strh	r2, [r4, #42]	@ movhi
ARM GAS  /tmp/cciXgPzD.s 			page 173


1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4309              		.loc 1 1967 0
 4310 012c 002B     		cmp	r3, #0
 4311 012e E2D1     		bne	.L331
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4312              		.loc 1 1967 0 is_stmt 0 discriminator 1
 4313 0130 638D     		ldrh	r3, [r4, #42]
 4314 0132 9BB2     		uxth	r3, r3
 4315 0134 002B     		cmp	r3, #0
 4316 0136 DED0     		beq	.L331
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 4317              		.loc 1 1970 0 is_stmt 1
 4318 0138 0096     		str	r6, [sp]
 4319 013a 0C9B     		ldr	r3, [sp, #48]
 4320 013c 0022     		movs	r2, #0
 4321 013e 8021     		movs	r1, #128
 4322 0140 2046     		mov	r0, r4
 4323 0142 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4324              	.LVL345:
 4325 0146 0028     		cmp	r0, #0
 4326 0148 3DD1     		bne	.L340
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 4327              		.loc 1 1975 0
 4328 014a 638D     		ldrh	r3, [r4, #42]
 4329 014c 9BB2     		uxth	r3, r3
 4330 014e FF2B     		cmp	r3, #255
 4331 0150 C5D9     		bls	.L332
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 4332              		.loc 1 1977 0
 4333 0152 FF22     		movs	r2, #255
 4334 0154 2285     		strh	r2, [r4, #40]	@ movhi
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4335              		.loc 1 1978 0
 4336 0156 0023     		movs	r3, #0
 4337 0158 0093     		str	r3, [sp]
 4338 015a 4FF08073 		mov	r3, #16777216
 4339 015e 2946     		mov	r1, r5
 4340 0160 2046     		mov	r0, r4
 4341 0162 FFF7FEFF 		bl	I2C_TransferConfig
 4342              	.LVL346:
 4343 0166 C6E7     		b	.L331
 4344              	.L343:
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4345              		.loc 1 1991 0
 4346 0168 3246     		mov	r2, r6
 4347 016a 0C99     		ldr	r1, [sp, #48]
 4348 016c 2046     		mov	r0, r4
 4349 016e FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4350              	.LVL347:
 4351 0172 0346     		mov	r3, r0
 4352 0174 20B1     		cbz	r0, .L334
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4353              		.loc 1 1993 0
 4354 0176 636C     		ldr	r3, [r4, #68]
 4355 0178 042B     		cmp	r3, #4
 4356 017a 26D1     		bne	.L341
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
ARM GAS  /tmp/cciXgPzD.s 			page 174


 4357              		.loc 1 1995 0
 4358 017c 0123     		movs	r3, #1
 4359 017e 16E0     		b	.L326
 4360              	.L334:
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4361              		.loc 1 2004 0
 4362 0180 2268     		ldr	r2, [r4]
 4363 0182 2021     		movs	r1, #32
 4364 0184 D161     		str	r1, [r2, #28]
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4365              		.loc 1 2007 0
 4366 0186 2068     		ldr	r0, [r4]
 4367 0188 4268     		ldr	r2, [r0, #4]
 4368 018a 22F0FF72 		bic	r2, r2, #33423360
 4369 018e 22F48B32 		bic	r2, r2, #71168
 4370 0192 22F4FF72 		bic	r2, r2, #510
 4371 0196 22F00102 		bic	r2, r2, #1
 4372 019a 4260     		str	r2, [r0, #4]
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4373              		.loc 1 2009 0
 4374 019c 84F84110 		strb	r1, [r4, #65]
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4375              		.loc 1 2010 0
 4376 01a0 0022     		movs	r2, #0
 4377 01a2 84F84220 		strb	r2, [r4, #66]
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4378              		.loc 1 2013 0
 4379 01a6 84F84020 		strb	r2, [r4, #64]
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4380              		.loc 1 2015 0
 4381 01aa 00E0     		b	.L326
 4382              	.LVL348:
 4383              	.L335:
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4384              		.loc 1 2019 0
 4385 01ac 0223     		movs	r3, #2
 4386              	.LVL349:
 4387              	.L326:
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 4388              		.loc 1 2021 0
 4389 01ae 1846     		mov	r0, r3
 4390 01b0 02B0     		add	sp, sp, #8
 4391              	.LCFI66:
 4392              		.cfi_remember_state
 4393              		.cfi_def_cfa_offset 32
 4394              		@ sp needed
 4395 01b2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4396              	.LVL350:
 4397              	.L336:
 4398              	.LCFI67:
 4399              		.cfi_restore_state
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4400              		.loc 1 1901 0
 4401 01b6 0123     		movs	r3, #1
 4402              	.LVL351:
 4403 01b8 F9E7     		b	.L326
 4404              	.LVL352:
ARM GAS  /tmp/cciXgPzD.s 			page 175


 4405              	.L337:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4406              		.loc 1 1905 0
 4407 01ba 0223     		movs	r3, #2
 4408              	.LVL353:
 4409 01bc F7E7     		b	.L326
 4410              	.LVL354:
 4411              	.L338:
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4412              		.loc 1 1912 0
 4413 01be 0323     		movs	r3, #3
 4414 01c0 F5E7     		b	.L326
 4415              	.L339:
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4416              		.loc 1 1959 0
 4417 01c2 0323     		movs	r3, #3
 4418 01c4 F3E7     		b	.L326
 4419              	.L340:
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4420              		.loc 1 1972 0
 4421 01c6 0323     		movs	r3, #3
 4422 01c8 F1E7     		b	.L326
 4423              	.L341:
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4424              		.loc 1 1999 0
 4425 01ca 0323     		movs	r3, #3
 4426 01cc EFE7     		b	.L326
 4427              	.L345:
 4428 01ce 00BF     		.align	2
 4429              	.L344:
 4430 01d0 00240080 		.word	-2147474432
 4431              		.cfi_endproc
 4432              	.LFE155:
 4434              		.section	.text.HAL_I2C_Mem_Write_IT,"ax",%progbits
 4435              		.align	1
 4436              		.global	HAL_I2C_Mem_Write_IT
 4437              		.syntax unified
 4438              		.thumb
 4439              		.thumb_func
 4440              		.fpu fpv5-d16
 4442              	HAL_I2C_Mem_Write_IT:
 4443              	.LFB156:
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 4444              		.loc 1 2035 0
 4445              		.cfi_startproc
 4446              		@ args = 8, pretend = 0, frame = 0
 4447              		@ frame_needed = 0, uses_anonymous_args = 0
 4448              	.LVL355:
 4449 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4450              	.LCFI68:
 4451              		.cfi_def_cfa_offset 24
 4452              		.cfi_offset 4, -24
 4453              		.cfi_offset 5, -20
 4454              		.cfi_offset 6, -16
 4455              		.cfi_offset 7, -12
 4456              		.cfi_offset 8, -8
 4457              		.cfi_offset 14, -4
ARM GAS  /tmp/cciXgPzD.s 			page 176


 4458 0004 82B0     		sub	sp, sp, #8
 4459              	.LCFI69:
 4460              		.cfi_def_cfa_offset 32
 4461 0006 BDF82460 		ldrh	r6, [sp, #36]
 4462              	.LVL356:
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4463              		.loc 1 2042 0
 4464 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4465 000e E4B2     		uxtb	r4, r4
 4466 0010 202C     		cmp	r4, #32
 4467 0012 5ED1     		bne	.L352
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4468              		.loc 1 2044 0
 4469 0014 B6FA86F4 		clz	r4, r6
 4470 0018 6409     		lsrs	r4, r4, #5
 4471 001a 089D     		ldr	r5, [sp, #32]
 4472 001c 002D     		cmp	r5, #0
 4473 001e 08BF     		it	eq
 4474 0020 0124     		moveq	r4, #1
 4475 0022 002C     		cmp	r4, #0
 4476 0024 5AD1     		bne	.L353
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4477              		.loc 1 2049 0
 4478 0026 0468     		ldr	r4, [r0]
 4479 0028 A469     		ldr	r4, [r4, #24]
 4480 002a 14F4004F 		tst	r4, #32768
 4481 002e 57D1     		bne	.L354
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4482              		.loc 1 2055 0
 4483 0030 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4484 0034 012C     		cmp	r4, #1
 4485 0036 55D0     		beq	.L355
 4486 0038 1F46     		mov	r7, r3
 4487 003a 1446     		mov	r4, r2
 4488 003c 8846     		mov	r8, r1
 4489 003e 0546     		mov	r5, r0
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4490              		.loc 1 2055 0 is_stmt 0 discriminator 2
 4491 0040 0123     		movs	r3, #1
 4492              	.LVL357:
 4493 0042 80F84030 		strb	r3, [r0, #64]
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4494              		.loc 1 2058 0 is_stmt 1 discriminator 2
 4495 0046 FFF7FEFF 		bl	HAL_GetTick
 4496              	.LVL358:
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4497              		.loc 1 2060 0 discriminator 2
 4498 004a 2123     		movs	r3, #33
 4499 004c 85F84130 		strb	r3, [r5, #65]
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4500              		.loc 1 2061 0 discriminator 2
 4501 0050 4023     		movs	r3, #64
 4502 0052 85F84230 		strb	r3, [r5, #66]
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4503              		.loc 1 2062 0 discriminator 2
 4504 0056 0023     		movs	r3, #0
 4505 0058 6B64     		str	r3, [r5, #68]
ARM GAS  /tmp/cciXgPzD.s 			page 177


2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4506              		.loc 1 2065 0 discriminator 2
 4507 005a 089B     		ldr	r3, [sp, #32]
 4508 005c 6B62     		str	r3, [r5, #36]
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4509              		.loc 1 2066 0 discriminator 2
 4510 005e 6E85     		strh	r6, [r5, #42]	@ movhi
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4511              		.loc 1 2067 0 discriminator 2
 4512 0060 214B     		ldr	r3, .L357
 4513 0062 EB62     		str	r3, [r5, #44]
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4514              		.loc 1 2068 0 discriminator 2
 4515 0064 214B     		ldr	r3, .L357+4
 4516 0066 6B63     		str	r3, [r5, #52]
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4517              		.loc 1 2070 0 discriminator 2
 4518 0068 6B8D     		ldrh	r3, [r5, #42]
 4519 006a 9BB2     		uxth	r3, r3
 4520 006c FF2B     		cmp	r3, #255
 4521 006e 16D9     		bls	.L348
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4522              		.loc 1 2072 0
 4523 0070 FF23     		movs	r3, #255
 4524 0072 2B85     		strh	r3, [r5, #40]	@ movhi
 4525              	.LVL359:
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4526              		.loc 1 2073 0
 4527 0074 4FF08076 		mov	r6, #16777216
 4528              	.LVL360:
 4529              	.L349:
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4530              		.loc 1 2082 0
 4531 0078 0190     		str	r0, [sp, #4]
 4532 007a 1923     		movs	r3, #25
 4533 007c 0093     		str	r3, [sp]
 4534 007e 3B46     		mov	r3, r7
 4535 0080 2246     		mov	r2, r4
 4536 0082 4146     		mov	r1, r8
 4537 0084 2846     		mov	r0, r5
 4538              	.LVL361:
 4539 0086 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4540              	.LVL362:
 4541 008a 0446     		mov	r4, r0
 4542 008c 88B1     		cbz	r0, .L350
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4543              		.loc 1 2084 0
 4544 008e 6B6C     		ldr	r3, [r5, #68]
 4545 0090 042B     		cmp	r3, #4
 4546 0092 09D1     		bne	.L351
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 4547              		.loc 1 2087 0
 4548 0094 0023     		movs	r3, #0
 4549 0096 85F84030 		strb	r3, [r5, #64]
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4550              		.loc 1 2088 0
 4551 009a 0124     		movs	r4, #1
ARM GAS  /tmp/cciXgPzD.s 			page 178


 4552 009c 1AE0     		b	.L347
 4553              	.LVL363:
 4554              	.L348:
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4555              		.loc 1 2077 0
 4556 009e 6B8D     		ldrh	r3, [r5, #42]
 4557 00a0 2B85     		strh	r3, [r5, #40]	@ movhi
 4558              	.LVL364:
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4559              		.loc 1 2078 0
 4560 00a2 4FF00076 		mov	r6, #33554432
 4561 00a6 E7E7     		b	.L349
 4562              	.LVL365:
 4563              	.L351:
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4564              		.loc 1 2093 0
 4565 00a8 0023     		movs	r3, #0
 4566 00aa 85F84030 		strb	r3, [r5, #64]
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4567              		.loc 1 2094 0
 4568 00ae 0324     		movs	r4, #3
 4569 00b0 10E0     		b	.L347
 4570              	.L350:
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4571              		.loc 1 2099 0
 4572 00b2 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 4573 00b6 0027     		movs	r7, #0
 4574 00b8 0097     		str	r7, [sp]
 4575 00ba 3346     		mov	r3, r6
 4576 00bc 4146     		mov	r1, r8
 4577 00be 2846     		mov	r0, r5
 4578 00c0 FFF7FEFF 		bl	I2C_TransferConfig
 4579              	.LVL366:
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4580              		.loc 1 2102 0
 4581 00c4 85F84070 		strb	r7, [r5, #64]
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4582              		.loc 1 2111 0
 4583 00c8 0121     		movs	r1, #1
 4584 00ca 2846     		mov	r0, r5
 4585 00cc FFF7FEFF 		bl	I2C_Enable_IRQ
 4586              	.LVL367:
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4587              		.loc 1 2113 0
 4588 00d0 00E0     		b	.L347
 4589              	.LVL368:
 4590              	.L352:
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4591              		.loc 1 2117 0
 4592 00d2 0224     		movs	r4, #2
 4593              	.LVL369:
 4594              	.L347:
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4595              		.loc 1 2119 0
 4596 00d4 2046     		mov	r0, r4
 4597 00d6 02B0     		add	sp, sp, #8
 4598              	.LCFI70:
ARM GAS  /tmp/cciXgPzD.s 			page 179


 4599              		.cfi_remember_state
 4600              		.cfi_def_cfa_offset 24
 4601              		@ sp needed
 4602 00d8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4603              	.LVL370:
 4604              	.L353:
 4605              	.LCFI71:
 4606              		.cfi_restore_state
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4607              		.loc 1 2046 0
 4608 00dc 0124     		movs	r4, #1
 4609 00de F9E7     		b	.L347
 4610              	.L354:
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4611              		.loc 1 2051 0
 4612 00e0 0224     		movs	r4, #2
 4613 00e2 F7E7     		b	.L347
 4614              	.L355:
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4615              		.loc 1 2055 0
 4616 00e4 0224     		movs	r4, #2
 4617 00e6 F5E7     		b	.L347
 4618              	.L358:
 4619              		.align	2
 4620              	.L357:
 4621 00e8 0000FFFF 		.word	-65536
 4622 00ec 00000000 		.word	I2C_Master_ISR_IT
 4623              		.cfi_endproc
 4624              	.LFE156:
 4626              		.section	.text.HAL_I2C_Mem_Read_IT,"ax",%progbits
 4627              		.align	1
 4628              		.global	HAL_I2C_Mem_Read_IT
 4629              		.syntax unified
 4630              		.thumb
 4631              		.thumb_func
 4632              		.fpu fpv5-d16
 4634              	HAL_I2C_Mem_Read_IT:
 4635              	.LFB157:
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 4636              		.loc 1 2134 0
 4637              		.cfi_startproc
 4638              		@ args = 8, pretend = 0, frame = 0
 4639              		@ frame_needed = 0, uses_anonymous_args = 0
 4640              	.LVL371:
 4641 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4642              	.LCFI72:
 4643              		.cfi_def_cfa_offset 24
 4644              		.cfi_offset 4, -24
 4645              		.cfi_offset 5, -20
 4646              		.cfi_offset 6, -16
 4647              		.cfi_offset 7, -12
 4648              		.cfi_offset 8, -8
 4649              		.cfi_offset 14, -4
 4650 0004 82B0     		sub	sp, sp, #8
 4651              	.LCFI73:
 4652              		.cfi_def_cfa_offset 32
 4653 0006 BDF82460 		ldrh	r6, [sp, #36]
ARM GAS  /tmp/cciXgPzD.s 			page 180


 4654              	.LVL372:
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4655              		.loc 1 2141 0
 4656 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4657 000e E4B2     		uxtb	r4, r4
 4658 0010 202C     		cmp	r4, #32
 4659 0012 5FD1     		bne	.L365
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4660              		.loc 1 2143 0
 4661 0014 B6FA86F4 		clz	r4, r6
 4662 0018 6409     		lsrs	r4, r4, #5
 4663 001a 089D     		ldr	r5, [sp, #32]
 4664 001c 002D     		cmp	r5, #0
 4665 001e 08BF     		it	eq
 4666 0020 0124     		moveq	r4, #1
 4667 0022 002C     		cmp	r4, #0
 4668 0024 5BD1     		bne	.L366
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4669              		.loc 1 2148 0
 4670 0026 0468     		ldr	r4, [r0]
 4671 0028 A469     		ldr	r4, [r4, #24]
 4672 002a 14F4004F 		tst	r4, #32768
 4673 002e 58D1     		bne	.L367
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4674              		.loc 1 2154 0
 4675 0030 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4676 0034 012C     		cmp	r4, #1
 4677 0036 56D0     		beq	.L368
 4678 0038 1F46     		mov	r7, r3
 4679 003a 1446     		mov	r4, r2
 4680 003c 8846     		mov	r8, r1
 4681 003e 0546     		mov	r5, r0
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4682              		.loc 1 2154 0 is_stmt 0 discriminator 2
 4683 0040 0123     		movs	r3, #1
 4684              	.LVL373:
 4685 0042 80F84030 		strb	r3, [r0, #64]
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4686              		.loc 1 2157 0 is_stmt 1 discriminator 2
 4687 0046 FFF7FEFF 		bl	HAL_GetTick
 4688              	.LVL374:
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4689              		.loc 1 2159 0 discriminator 2
 4690 004a 2223     		movs	r3, #34
 4691 004c 85F84130 		strb	r3, [r5, #65]
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4692              		.loc 1 2160 0 discriminator 2
 4693 0050 4023     		movs	r3, #64
 4694 0052 85F84230 		strb	r3, [r5, #66]
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4695              		.loc 1 2161 0 discriminator 2
 4696 0056 0023     		movs	r3, #0
 4697 0058 6B64     		str	r3, [r5, #68]
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4698              		.loc 1 2164 0 discriminator 2
 4699 005a 089B     		ldr	r3, [sp, #32]
 4700 005c 6B62     		str	r3, [r5, #36]
ARM GAS  /tmp/cciXgPzD.s 			page 181


2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4701              		.loc 1 2165 0 discriminator 2
 4702 005e 6E85     		strh	r6, [r5, #42]	@ movhi
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4703              		.loc 1 2166 0 discriminator 2
 4704 0060 224B     		ldr	r3, .L370
 4705 0062 EB62     		str	r3, [r5, #44]
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4706              		.loc 1 2167 0 discriminator 2
 4707 0064 224B     		ldr	r3, .L370+4
 4708 0066 6B63     		str	r3, [r5, #52]
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4709              		.loc 1 2169 0 discriminator 2
 4710 0068 6B8D     		ldrh	r3, [r5, #42]
 4711 006a 9BB2     		uxth	r3, r3
 4712 006c FF2B     		cmp	r3, #255
 4713 006e 16D9     		bls	.L361
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4714              		.loc 1 2171 0
 4715 0070 FF23     		movs	r3, #255
 4716 0072 2B85     		strh	r3, [r5, #40]	@ movhi
 4717              	.LVL375:
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4718              		.loc 1 2172 0
 4719 0074 4FF08076 		mov	r6, #16777216
 4720              	.LVL376:
 4721              	.L362:
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4722              		.loc 1 2181 0
 4723 0078 0190     		str	r0, [sp, #4]
 4724 007a 1923     		movs	r3, #25
 4725 007c 0093     		str	r3, [sp]
 4726 007e 3B46     		mov	r3, r7
 4727 0080 2246     		mov	r2, r4
 4728 0082 4146     		mov	r1, r8
 4729 0084 2846     		mov	r0, r5
 4730              	.LVL377:
 4731 0086 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4732              	.LVL378:
 4733 008a 0446     		mov	r4, r0
 4734 008c 88B1     		cbz	r0, .L363
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4735              		.loc 1 2183 0
 4736 008e 6B6C     		ldr	r3, [r5, #68]
 4737 0090 042B     		cmp	r3, #4
 4738 0092 09D1     		bne	.L364
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 4739              		.loc 1 2186 0
 4740 0094 0023     		movs	r3, #0
 4741 0096 85F84030 		strb	r3, [r5, #64]
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4742              		.loc 1 2187 0
 4743 009a 0124     		movs	r4, #1
 4744 009c 1BE0     		b	.L360
 4745              	.LVL379:
 4746              	.L361:
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
ARM GAS  /tmp/cciXgPzD.s 			page 182


 4747              		.loc 1 2176 0
 4748 009e 6B8D     		ldrh	r3, [r5, #42]
 4749 00a0 2B85     		strh	r3, [r5, #40]	@ movhi
 4750              	.LVL380:
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4751              		.loc 1 2177 0
 4752 00a2 4FF00076 		mov	r6, #33554432
 4753 00a6 E7E7     		b	.L362
 4754              	.LVL381:
 4755              	.L364:
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4756              		.loc 1 2192 0
 4757 00a8 0023     		movs	r3, #0
 4758 00aa 85F84030 		strb	r3, [r5, #64]
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4759              		.loc 1 2193 0
 4760 00ae 0324     		movs	r4, #3
 4761 00b0 11E0     		b	.L360
 4762              	.L363:
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4763              		.loc 1 2198 0
 4764 00b2 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 4765 00b6 0F4B     		ldr	r3, .L370+8
 4766 00b8 0093     		str	r3, [sp]
 4767 00ba 3346     		mov	r3, r6
 4768 00bc 4146     		mov	r1, r8
 4769 00be 2846     		mov	r0, r5
 4770 00c0 FFF7FEFF 		bl	I2C_TransferConfig
 4771              	.LVL382:
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4772              		.loc 1 2201 0
 4773 00c4 0023     		movs	r3, #0
 4774 00c6 85F84030 		strb	r3, [r5, #64]
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4775              		.loc 1 2210 0
 4776 00ca 0221     		movs	r1, #2
 4777 00cc 2846     		mov	r0, r5
 4778 00ce FFF7FEFF 		bl	I2C_Enable_IRQ
 4779              	.LVL383:
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4780              		.loc 1 2212 0
 4781 00d2 00E0     		b	.L360
 4782              	.LVL384:
 4783              	.L365:
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4784              		.loc 1 2216 0
 4785 00d4 0224     		movs	r4, #2
 4786              	.LVL385:
 4787              	.L360:
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 4788              		.loc 1 2218 0
 4789 00d6 2046     		mov	r0, r4
 4790 00d8 02B0     		add	sp, sp, #8
 4791              	.LCFI74:
 4792              		.cfi_remember_state
 4793              		.cfi_def_cfa_offset 24
 4794              		@ sp needed
ARM GAS  /tmp/cciXgPzD.s 			page 183


 4795 00da BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4796              	.LVL386:
 4797              	.L366:
 4798              	.LCFI75:
 4799              		.cfi_restore_state
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4800              		.loc 1 2145 0
 4801 00de 0124     		movs	r4, #1
 4802 00e0 F9E7     		b	.L360
 4803              	.L367:
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4804              		.loc 1 2150 0
 4805 00e2 0224     		movs	r4, #2
 4806 00e4 F7E7     		b	.L360
 4807              	.L368:
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4808              		.loc 1 2154 0
 4809 00e6 0224     		movs	r4, #2
 4810 00e8 F5E7     		b	.L360
 4811              	.L371:
 4812 00ea 00BF     		.align	2
 4813              	.L370:
 4814 00ec 0000FFFF 		.word	-65536
 4815 00f0 00000000 		.word	I2C_Master_ISR_IT
 4816 00f4 00240080 		.word	-2147474432
 4817              		.cfi_endproc
 4818              	.LFE157:
 4820              		.section	.text.HAL_I2C_Mem_Write_DMA,"ax",%progbits
 4821              		.align	1
 4822              		.global	HAL_I2C_Mem_Write_DMA
 4823              		.syntax unified
 4824              		.thumb
 4825              		.thumb_func
 4826              		.fpu fpv5-d16
 4828              	HAL_I2C_Mem_Write_DMA:
 4829              	.LFB158:
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 4830              		.loc 1 2232 0
 4831              		.cfi_startproc
 4832              		@ args = 8, pretend = 0, frame = 0
 4833              		@ frame_needed = 0, uses_anonymous_args = 0
 4834              	.LVL387:
 4835 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4836              	.LCFI76:
 4837              		.cfi_def_cfa_offset 28
 4838              		.cfi_offset 4, -28
 4839              		.cfi_offset 5, -24
 4840              		.cfi_offset 6, -20
 4841              		.cfi_offset 7, -16
 4842              		.cfi_offset 8, -12
 4843              		.cfi_offset 9, -8
 4844              		.cfi_offset 14, -4
 4845 0004 83B0     		sub	sp, sp, #12
 4846              	.LCFI77:
 4847              		.cfi_def_cfa_offset 40
 4848 0006 BDF82C50 		ldrh	r5, [sp, #44]
 4849              	.LVL388:
ARM GAS  /tmp/cciXgPzD.s 			page 184


2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4850              		.loc 1 2239 0
 4851 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4852 000e E4B2     		uxtb	r4, r4
 4853 0010 202C     		cmp	r4, #32
 4854 0012 79D1     		bne	.L378
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4855              		.loc 1 2241 0
 4856 0014 B5FA85F4 		clz	r4, r5
 4857 0018 6409     		lsrs	r4, r4, #5
 4858 001a 0A9E     		ldr	r6, [sp, #40]
 4859 001c 002E     		cmp	r6, #0
 4860 001e 08BF     		it	eq
 4861 0020 0124     		moveq	r4, #1
 4862 0022 002C     		cmp	r4, #0
 4863 0024 75D1     		bne	.L379
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4864              		.loc 1 2246 0
 4865 0026 0468     		ldr	r4, [r0]
 4866 0028 A469     		ldr	r4, [r4, #24]
 4867 002a 14F4004F 		tst	r4, #32768
 4868 002e 72D1     		bne	.L380
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4869              		.loc 1 2252 0
 4870 0030 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4871 0034 012C     		cmp	r4, #1
 4872 0036 70D0     		beq	.L381
 4873 0038 1F46     		mov	r7, r3
 4874 003a 1646     		mov	r6, r2
 4875 003c 8846     		mov	r8, r1
 4876 003e 0446     		mov	r4, r0
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4877              		.loc 1 2252 0 is_stmt 0 discriminator 2
 4878 0040 0123     		movs	r3, #1
 4879              	.LVL389:
 4880 0042 80F84030 		strb	r3, [r0, #64]
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4881              		.loc 1 2255 0 is_stmt 1 discriminator 2
 4882 0046 FFF7FEFF 		bl	HAL_GetTick
 4883              	.LVL390:
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4884              		.loc 1 2257 0 discriminator 2
 4885 004a 2123     		movs	r3, #33
 4886 004c 84F84130 		strb	r3, [r4, #65]
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4887              		.loc 1 2258 0 discriminator 2
 4888 0050 4023     		movs	r3, #64
 4889 0052 84F84230 		strb	r3, [r4, #66]
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4890              		.loc 1 2259 0 discriminator 2
 4891 0056 0023     		movs	r3, #0
 4892 0058 6364     		str	r3, [r4, #68]
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4893              		.loc 1 2262 0 discriminator 2
 4894 005a 0A9B     		ldr	r3, [sp, #40]
 4895 005c 6362     		str	r3, [r4, #36]
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
ARM GAS  /tmp/cciXgPzD.s 			page 185


 4896              		.loc 1 2263 0 discriminator 2
 4897 005e 6585     		strh	r5, [r4, #42]	@ movhi
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4898              		.loc 1 2264 0 discriminator 2
 4899 0060 2F4B     		ldr	r3, .L383
 4900 0062 E362     		str	r3, [r4, #44]
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4901              		.loc 1 2265 0 discriminator 2
 4902 0064 2F4B     		ldr	r3, .L383+4
 4903 0066 6363     		str	r3, [r4, #52]
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4904              		.loc 1 2267 0 discriminator 2
 4905 0068 638D     		ldrh	r3, [r4, #42]
 4906 006a 9BB2     		uxth	r3, r3
 4907 006c FF2B     		cmp	r3, #255
 4908 006e 16D9     		bls	.L374
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4909              		.loc 1 2269 0
 4910 0070 FF23     		movs	r3, #255
 4911 0072 2385     		strh	r3, [r4, #40]	@ movhi
 4912              	.LVL391:
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4913              		.loc 1 2270 0
 4914 0074 4FF08079 		mov	r9, #16777216
 4915              	.LVL392:
 4916              	.L375:
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4917              		.loc 1 2279 0
 4918 0078 0190     		str	r0, [sp, #4]
 4919 007a 1923     		movs	r3, #25
 4920 007c 0093     		str	r3, [sp]
 4921 007e 3B46     		mov	r3, r7
 4922 0080 3246     		mov	r2, r6
 4923 0082 4146     		mov	r1, r8
 4924 0084 2046     		mov	r0, r4
 4925              	.LVL393:
 4926 0086 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4927              	.LVL394:
 4928 008a 0546     		mov	r5, r0
 4929 008c 88B1     		cbz	r0, .L376
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4930              		.loc 1 2281 0
 4931 008e 636C     		ldr	r3, [r4, #68]
 4932 0090 042B     		cmp	r3, #4
 4933 0092 09D1     		bne	.L377
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 4934              		.loc 1 2284 0
 4935 0094 0023     		movs	r3, #0
 4936 0096 84F84030 		strb	r3, [r4, #64]
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4937              		.loc 1 2285 0
 4938 009a 0125     		movs	r5, #1
 4939 009c 35E0     		b	.L373
 4940              	.LVL395:
 4941              	.L374:
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4942              		.loc 1 2274 0
ARM GAS  /tmp/cciXgPzD.s 			page 186


 4943 009e 638D     		ldrh	r3, [r4, #42]
 4944 00a0 2385     		strh	r3, [r4, #40]	@ movhi
 4945              	.LVL396:
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4946              		.loc 1 2275 0
 4947 00a2 4FF00079 		mov	r9, #33554432
 4948 00a6 E7E7     		b	.L375
 4949              	.LVL397:
 4950              	.L377:
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4951              		.loc 1 2290 0
 4952 00a8 0023     		movs	r3, #0
 4953 00aa 84F84030 		strb	r3, [r4, #64]
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4954              		.loc 1 2291 0
 4955 00ae 0325     		movs	r5, #3
 4956 00b0 2BE0     		b	.L373
 4957              	.L376:
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4958              		.loc 1 2296 0
 4959 00b2 A36B     		ldr	r3, [r4, #56]
 4960 00b4 1C4A     		ldr	r2, .L383+8
 4961 00b6 DA63     		str	r2, [r3, #60]
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4962              		.loc 1 2299 0
 4963 00b8 A36B     		ldr	r3, [r4, #56]
 4964 00ba 1C4A     		ldr	r2, .L383+12
 4965 00bc DA64     		str	r2, [r3, #76]
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
 4966              		.loc 1 2302 0
 4967 00be A36B     		ldr	r3, [r4, #56]
 4968 00c0 0026     		movs	r6, #0
 4969 00c2 1E64     		str	r6, [r3, #64]
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4970              		.loc 1 2303 0
 4971 00c4 A36B     		ldr	r3, [r4, #56]
 4972 00c6 1E65     		str	r6, [r3, #80]
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4973              		.loc 1 2306 0
 4974 00c8 2268     		ldr	r2, [r4]
 4975 00ca 238D     		ldrh	r3, [r4, #40]
 4976 00cc 2832     		adds	r2, r2, #40
 4977 00ce 0A99     		ldr	r1, [sp, #40]
 4978 00d0 A06B     		ldr	r0, [r4, #56]
 4979 00d2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4980              	.LVL398:
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4981              		.loc 1 2310 0
 4982 00d6 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 4983 00da 0096     		str	r6, [sp]
 4984 00dc 4B46     		mov	r3, r9
 4985 00de 4146     		mov	r1, r8
 4986 00e0 2046     		mov	r0, r4
 4987 00e2 FFF7FEFF 		bl	I2C_TransferConfig
 4988              	.LVL399:
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4989              		.loc 1 2313 0
ARM GAS  /tmp/cciXgPzD.s 			page 187


 4990 00e6 638D     		ldrh	r3, [r4, #42]
 4991 00e8 228D     		ldrh	r2, [r4, #40]
 4992 00ea 9B1A     		subs	r3, r3, r2
 4993 00ec 9BB2     		uxth	r3, r3
 4994 00ee 6385     		strh	r3, [r4, #42]	@ movhi
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4995              		.loc 1 2316 0
 4996 00f0 84F84060 		strb	r6, [r4, #64]
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4997              		.loc 1 2322 0
 4998 00f4 1121     		movs	r1, #17
 4999 00f6 2046     		mov	r0, r4
 5000 00f8 FFF7FEFF 		bl	I2C_Enable_IRQ
 5001              	.LVL400:
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5002              		.loc 1 2325 0
 5003 00fc 2268     		ldr	r2, [r4]
 5004 00fe 1368     		ldr	r3, [r2]
 5005 0100 43F48043 		orr	r3, r3, #16384
 5006 0104 1360     		str	r3, [r2]
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5007              		.loc 1 2327 0
 5008 0106 00E0     		b	.L373
 5009              	.LVL401:
 5010              	.L378:
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5011              		.loc 1 2331 0
 5012 0108 0225     		movs	r5, #2
 5013              	.LVL402:
 5014              	.L373:
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5015              		.loc 1 2333 0
 5016 010a 2846     		mov	r0, r5
 5017 010c 03B0     		add	sp, sp, #12
 5018              	.LCFI78:
 5019              		.cfi_remember_state
 5020              		.cfi_def_cfa_offset 28
 5021              		@ sp needed
 5022 010e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5023              	.LVL403:
 5024              	.L379:
 5025              	.LCFI79:
 5026              		.cfi_restore_state
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5027              		.loc 1 2243 0
 5028 0112 0125     		movs	r5, #1
 5029 0114 F9E7     		b	.L373
 5030              	.L380:
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5031              		.loc 1 2248 0
 5032 0116 0225     		movs	r5, #2
 5033 0118 F7E7     		b	.L373
 5034              	.L381:
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5035              		.loc 1 2252 0
 5036 011a 0225     		movs	r5, #2
 5037 011c F5E7     		b	.L373
ARM GAS  /tmp/cciXgPzD.s 			page 188


 5038              	.L384:
 5039 011e 00BF     		.align	2
 5040              	.L383:
 5041 0120 0000FFFF 		.word	-65536
 5042 0124 00000000 		.word	I2C_Master_ISR_DMA
 5043 0128 00000000 		.word	I2C_DMAMasterTransmitCplt
 5044 012c 00000000 		.word	I2C_DMAError
 5045              		.cfi_endproc
 5046              	.LFE158:
 5048              		.section	.text.HAL_I2C_Mem_Read_DMA,"ax",%progbits
 5049              		.align	1
 5050              		.global	HAL_I2C_Mem_Read_DMA
 5051              		.syntax unified
 5052              		.thumb
 5053              		.thumb_func
 5054              		.fpu fpv5-d16
 5056              	HAL_I2C_Mem_Read_DMA:
 5057              	.LFB159:
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 5058              		.loc 1 2348 0
 5059              		.cfi_startproc
 5060              		@ args = 8, pretend = 0, frame = 0
 5061              		@ frame_needed = 0, uses_anonymous_args = 0
 5062              	.LVL404:
 5063 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5064              	.LCFI80:
 5065              		.cfi_def_cfa_offset 28
 5066              		.cfi_offset 4, -28
 5067              		.cfi_offset 5, -24
 5068              		.cfi_offset 6, -20
 5069              		.cfi_offset 7, -16
 5070              		.cfi_offset 8, -12
 5071              		.cfi_offset 9, -8
 5072              		.cfi_offset 14, -4
 5073 0004 83B0     		sub	sp, sp, #12
 5074              	.LCFI81:
 5075              		.cfi_def_cfa_offset 40
 5076 0006 BDF82C50 		ldrh	r5, [sp, #44]
 5077              	.LVL405:
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5078              		.loc 1 2355 0
 5079 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5080 000e E4B2     		uxtb	r4, r4
 5081 0010 202C     		cmp	r4, #32
 5082 0012 7AD1     		bne	.L391
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5083              		.loc 1 2357 0
 5084 0014 B5FA85F4 		clz	r4, r5
 5085 0018 6409     		lsrs	r4, r4, #5
 5086 001a 0A9E     		ldr	r6, [sp, #40]
 5087 001c 002E     		cmp	r6, #0
 5088 001e 08BF     		it	eq
 5089 0020 0124     		moveq	r4, #1
 5090 0022 002C     		cmp	r4, #0
 5091 0024 76D1     		bne	.L392
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5092              		.loc 1 2362 0
ARM GAS  /tmp/cciXgPzD.s 			page 189


 5093 0026 0468     		ldr	r4, [r0]
 5094 0028 A469     		ldr	r4, [r4, #24]
 5095 002a 14F4004F 		tst	r4, #32768
 5096 002e 73D1     		bne	.L393
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5097              		.loc 1 2368 0
 5098 0030 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5099 0034 012C     		cmp	r4, #1
 5100 0036 71D0     		beq	.L394
 5101 0038 1F46     		mov	r7, r3
 5102 003a 1646     		mov	r6, r2
 5103 003c 8846     		mov	r8, r1
 5104 003e 0446     		mov	r4, r0
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5105              		.loc 1 2368 0 is_stmt 0 discriminator 2
 5106 0040 0123     		movs	r3, #1
 5107              	.LVL406:
 5108 0042 80F84030 		strb	r3, [r0, #64]
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5109              		.loc 1 2371 0 is_stmt 1 discriminator 2
 5110 0046 FFF7FEFF 		bl	HAL_GetTick
 5111              	.LVL407:
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 5112              		.loc 1 2373 0 discriminator 2
 5113 004a 2223     		movs	r3, #34
 5114 004c 84F84130 		strb	r3, [r4, #65]
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 5115              		.loc 1 2374 0 discriminator 2
 5116 0050 4023     		movs	r3, #64
 5117 0052 84F84230 		strb	r3, [r4, #66]
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5118              		.loc 1 2375 0 discriminator 2
 5119 0056 0023     		movs	r3, #0
 5120 0058 6364     		str	r3, [r4, #68]
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5121              		.loc 1 2378 0 discriminator 2
 5122 005a 0A9B     		ldr	r3, [sp, #40]
 5123 005c 6362     		str	r3, [r4, #36]
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 5124              		.loc 1 2379 0 discriminator 2
 5125 005e 6585     		strh	r5, [r4, #42]	@ movhi
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5126              		.loc 1 2380 0 discriminator 2
 5127 0060 2F4B     		ldr	r3, .L396
 5128 0062 E362     		str	r3, [r4, #44]
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5129              		.loc 1 2381 0 discriminator 2
 5130 0064 2F4B     		ldr	r3, .L396+4
 5131 0066 6363     		str	r3, [r4, #52]
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5132              		.loc 1 2383 0 discriminator 2
 5133 0068 638D     		ldrh	r3, [r4, #42]
 5134 006a 9BB2     		uxth	r3, r3
 5135 006c FF2B     		cmp	r3, #255
 5136 006e 16D9     		bls	.L387
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5137              		.loc 1 2385 0
ARM GAS  /tmp/cciXgPzD.s 			page 190


 5138 0070 FF23     		movs	r3, #255
 5139 0072 2385     		strh	r3, [r4, #40]	@ movhi
 5140              	.LVL408:
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5141              		.loc 1 2386 0
 5142 0074 4FF08079 		mov	r9, #16777216
 5143              	.LVL409:
 5144              	.L388:
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5145              		.loc 1 2395 0
 5146 0078 0190     		str	r0, [sp, #4]
 5147 007a 1923     		movs	r3, #25
 5148 007c 0093     		str	r3, [sp]
 5149 007e 3B46     		mov	r3, r7
 5150 0080 3246     		mov	r2, r6
 5151 0082 4146     		mov	r1, r8
 5152 0084 2046     		mov	r0, r4
 5153              	.LVL410:
 5154 0086 FFF7FEFF 		bl	I2C_RequestMemoryRead
 5155              	.LVL411:
 5156 008a 0546     		mov	r5, r0
 5157 008c 88B1     		cbz	r0, .L389
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5158              		.loc 1 2397 0
 5159 008e 636C     		ldr	r3, [r4, #68]
 5160 0090 042B     		cmp	r3, #4
 5161 0092 09D1     		bne	.L390
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 5162              		.loc 1 2400 0
 5163 0094 0023     		movs	r3, #0
 5164 0096 84F84030 		strb	r3, [r4, #64]
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5165              		.loc 1 2401 0
 5166 009a 0125     		movs	r5, #1
 5167 009c 36E0     		b	.L386
 5168              	.LVL412:
 5169              	.L387:
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 5170              		.loc 1 2390 0
 5171 009e 638D     		ldrh	r3, [r4, #42]
 5172 00a0 2385     		strh	r3, [r4, #40]	@ movhi
 5173              	.LVL413:
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5174              		.loc 1 2391 0
 5175 00a2 4FF00079 		mov	r9, #33554432
 5176 00a6 E7E7     		b	.L388
 5177              	.LVL414:
 5178              	.L390:
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_TIMEOUT;
 5179              		.loc 1 2406 0
 5180 00a8 0023     		movs	r3, #0
 5181 00aa 84F84030 		strb	r3, [r4, #64]
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5182              		.loc 1 2407 0
 5183 00ae 0325     		movs	r5, #3
 5184 00b0 2CE0     		b	.L386
 5185              	.L389:
ARM GAS  /tmp/cciXgPzD.s 			page 191


2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5186              		.loc 1 2412 0
 5187 00b2 E36B     		ldr	r3, [r4, #60]
 5188 00b4 1C4A     		ldr	r2, .L396+8
 5189 00b6 DA63     		str	r2, [r3, #60]
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5190              		.loc 1 2415 0
 5191 00b8 E36B     		ldr	r3, [r4, #60]
 5192 00ba 1C4A     		ldr	r2, .L396+12
 5193 00bc DA64     		str	r2, [r3, #76]
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
 5194              		.loc 1 2418 0
 5195 00be E36B     		ldr	r3, [r4, #60]
 5196 00c0 0026     		movs	r6, #0
 5197 00c2 1E64     		str	r6, [r3, #64]
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5198              		.loc 1 2419 0
 5199 00c4 E36B     		ldr	r3, [r4, #60]
 5200 00c6 1E65     		str	r6, [r3, #80]
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5201              		.loc 1 2422 0
 5202 00c8 2168     		ldr	r1, [r4]
 5203 00ca 238D     		ldrh	r3, [r4, #40]
 5204 00cc 0A9A     		ldr	r2, [sp, #40]
 5205 00ce 2431     		adds	r1, r1, #36
 5206 00d0 E06B     		ldr	r0, [r4, #60]
 5207 00d2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5208              	.LVL415:
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5209              		.loc 1 2425 0
 5210 00d6 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5211 00da 154B     		ldr	r3, .L396+16
 5212 00dc 0093     		str	r3, [sp]
 5213 00de 4B46     		mov	r3, r9
 5214 00e0 4146     		mov	r1, r8
 5215 00e2 2046     		mov	r0, r4
 5216 00e4 FFF7FEFF 		bl	I2C_TransferConfig
 5217              	.LVL416:
2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5218              		.loc 1 2428 0
 5219 00e8 638D     		ldrh	r3, [r4, #42]
 5220 00ea 228D     		ldrh	r2, [r4, #40]
 5221 00ec 9B1A     		subs	r3, r3, r2
 5222 00ee 9BB2     		uxth	r3, r3
 5223 00f0 6385     		strh	r3, [r4, #42]	@ movhi
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5224              		.loc 1 2431 0
 5225 00f2 84F84060 		strb	r6, [r4, #64]
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5226              		.loc 1 2434 0
 5227 00f6 2268     		ldr	r2, [r4]
 5228 00f8 1368     		ldr	r3, [r2]
 5229 00fa 43F40043 		orr	r3, r3, #32768
 5230 00fe 1360     		str	r3, [r2]
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5231              		.loc 1 2440 0
 5232 0100 1121     		movs	r1, #17
ARM GAS  /tmp/cciXgPzD.s 			page 192


 5233 0102 2046     		mov	r0, r4
 5234 0104 FFF7FEFF 		bl	I2C_Enable_IRQ
 5235              	.LVL417:
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5236              		.loc 1 2442 0
 5237 0108 00E0     		b	.L386
 5238              	.LVL418:
 5239              	.L391:
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5240              		.loc 1 2446 0
 5241 010a 0225     		movs	r5, #2
 5242              	.LVL419:
 5243              	.L386:
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5244              		.loc 1 2448 0
 5245 010c 2846     		mov	r0, r5
 5246 010e 03B0     		add	sp, sp, #12
 5247              	.LCFI82:
 5248              		.cfi_remember_state
 5249              		.cfi_def_cfa_offset 28
 5250              		@ sp needed
 5251 0110 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5252              	.LVL420:
 5253              	.L392:
 5254              	.LCFI83:
 5255              		.cfi_restore_state
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5256              		.loc 1 2359 0
 5257 0114 0125     		movs	r5, #1
 5258 0116 F9E7     		b	.L386
 5259              	.L393:
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5260              		.loc 1 2364 0
 5261 0118 0225     		movs	r5, #2
 5262 011a F7E7     		b	.L386
 5263              	.L394:
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5264              		.loc 1 2368 0
 5265 011c 0225     		movs	r5, #2
 5266 011e F5E7     		b	.L386
 5267              	.L397:
 5268              		.align	2
 5269              	.L396:
 5270 0120 0000FFFF 		.word	-65536
 5271 0124 00000000 		.word	I2C_Master_ISR_DMA
 5272 0128 00000000 		.word	I2C_DMAMasterReceiveCplt
 5273 012c 00000000 		.word	I2C_DMAError
 5274 0130 00240080 		.word	-2147474432
 5275              		.cfi_endproc
 5276              	.LFE159:
 5278              		.section	.text.HAL_I2C_IsDeviceReady,"ax",%progbits
 5279              		.align	1
 5280              		.global	HAL_I2C_IsDeviceReady
 5281              		.syntax unified
 5282              		.thumb
 5283              		.thumb_func
 5284              		.fpu fpv5-d16
ARM GAS  /tmp/cciXgPzD.s 			page 193


 5286              	HAL_I2C_IsDeviceReady:
 5287              	.LFB160:
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 5288              		.loc 1 2462 0
 5289              		.cfi_startproc
 5290              		@ args = 0, pretend = 0, frame = 8
 5291              		@ frame_needed = 0, uses_anonymous_args = 0
 5292              	.LVL421:
 5293 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 5294              	.LCFI84:
 5295              		.cfi_def_cfa_offset 32
 5296              		.cfi_offset 4, -32
 5297              		.cfi_offset 5, -28
 5298              		.cfi_offset 6, -24
 5299              		.cfi_offset 7, -20
 5300              		.cfi_offset 8, -16
 5301              		.cfi_offset 9, -12
 5302              		.cfi_offset 10, -8
 5303              		.cfi_offset 14, -4
 5304 0004 84B0     		sub	sp, sp, #16
 5305              	.LCFI85:
 5306              		.cfi_def_cfa_offset 48
 5307              	.LVL422:
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5308              		.loc 1 2465 0
 5309 0006 0024     		movs	r4, #0
 5310 0008 0394     		str	r4, [sp, #12]
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5311              		.loc 1 2467 0
 5312 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5313 000e E4B2     		uxtb	r4, r4
 5314 0010 202C     		cmp	r4, #32
 5315 0012 40F09280 		bne	.L410
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5316              		.loc 1 2469 0
 5317 0016 0468     		ldr	r4, [r0]
 5318 0018 A469     		ldr	r4, [r4, #24]
 5319 001a 14F4004F 		tst	r4, #32768
 5320 001e 40F09180 		bne	.L411
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5321              		.loc 1 2475 0
 5322 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5323 0026 012C     		cmp	r4, #1
 5324 0028 00F08E80 		beq	.L412
 5325 002c 1F46     		mov	r7, r3
 5326 002e 9146     		mov	r9, r2
 5327 0030 8A46     		mov	r10, r1
 5328 0032 0646     		mov	r6, r0
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5329              		.loc 1 2475 0 is_stmt 0 discriminator 2
 5330 0034 0123     		movs	r3, #1
 5331              	.LVL423:
 5332 0036 80F84030 		strb	r3, [r0, #64]
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5333              		.loc 1 2477 0 is_stmt 1 discriminator 2
 5334 003a 2423     		movs	r3, #36
 5335 003c 80F84130 		strb	r3, [r0, #65]
ARM GAS  /tmp/cciXgPzD.s 			page 194


2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5336              		.loc 1 2478 0 discriminator 2
 5337 0040 0023     		movs	r3, #0
 5338 0042 4364     		str	r3, [r0, #68]
 5339 0044 20E0     		b	.L409
 5340              	.LVL424:
 5341              	.L420:
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5342              		.loc 1 2483 0 discriminator 1
 5343 0046 CAF30902 		ubfx	r2, r10, #0, #10
 5344 004a 434B     		ldr	r3, .L421
 5345 004c 1343     		orrs	r3, r3, r2
 5346 004e 22E0     		b	.L401
 5347              	.LVL425:
 5348              	.L405:
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5349              		.loc 1 2504 0
 5350 0050 AB69     		ldr	r3, [r5, #24]
 5351 0052 13F0100F 		tst	r3, #16
 5352 0056 43D0     		beq	.L417
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5353              		.loc 1 2526 0
 5354 0058 CDF80080 		str	r8, [sp]
 5355 005c 3B46     		mov	r3, r7
 5356 005e 0022     		movs	r2, #0
 5357 0060 2021     		movs	r1, #32
 5358 0062 3046     		mov	r0, r6
 5359 0064 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5360              	.LVL426:
 5361 0068 0028     		cmp	r0, #0
 5362 006a 71D1     		bne	.L414
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5363              		.loc 1 2532 0
 5364 006c 3368     		ldr	r3, [r6]
 5365 006e 1022     		movs	r2, #16
 5366 0070 DA61     		str	r2, [r3, #28]
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5367              		.loc 1 2535 0
 5368 0072 3368     		ldr	r3, [r6]
 5369 0074 2022     		movs	r2, #32
 5370 0076 DA61     		str	r2, [r3, #28]
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5371              		.loc 1 2539 0
 5372 0078 039B     		ldr	r3, [sp, #12]
 5373 007a 5A1C     		adds	r2, r3, #1
 5374 007c 0392     		str	r2, [sp, #12]
 5375 007e 4B45     		cmp	r3, r9
 5376 0080 41D0     		beq	.L418
 5377              	.L408:
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5378              		.loc 1 2554 0
 5379 0082 039B     		ldr	r3, [sp, #12]
 5380 0084 4B45     		cmp	r3, r9
 5381 0086 50D2     		bcs	.L419
 5382              	.LVL427:
 5383              	.L409:
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 195


 5384              		.loc 1 2483 0
 5385 0088 F368     		ldr	r3, [r6, #12]
 5386 008a 012B     		cmp	r3, #1
 5387 008c DBD0     		beq	.L420
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5388              		.loc 1 2483 0 is_stmt 0 discriminator 2
 5389 008e CAF30903 		ubfx	r3, r10, #0, #10
 5390 0092 43F42053 		orr	r3, r3, #10240
 5391              	.L401:
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5392              		.loc 1 2483 0 discriminator 4
 5393 0096 3268     		ldr	r2, [r6]
 5394 0098 5360     		str	r3, [r2, #4]
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_F
 5395              		.loc 1 2487 0 is_stmt 1 discriminator 4
 5396 009a FFF7FEFF 		bl	HAL_GetTick
 5397              	.LVL428:
 5398 009e 8046     		mov	r8, r0
 5399              	.LVL429:
 5400              	.L403:
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5401              		.loc 1 2488 0
 5402 00a0 3568     		ldr	r5, [r6]
 5403 00a2 AB69     		ldr	r3, [r5, #24]
 5404 00a4 13F0200F 		tst	r3, #32
 5405 00a8 D2D1     		bne	.L405
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5406              		.loc 1 2488 0 is_stmt 0 discriminator 1
 5407 00aa AB69     		ldr	r3, [r5, #24]
 5408 00ac 13F0100F 		tst	r3, #16
 5409 00b0 CED1     		bne	.L405
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5410              		.loc 1 2488 0 discriminator 2
 5411 00b2 96F84140 		ldrb	r4, [r6, #65]	@ zero_extendqisi2
 5412 00b6 E4B2     		uxtb	r4, r4
 5413 00b8 A02C     		cmp	r4, #160
 5414 00ba C9D0     		beq	.L405
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5415              		.loc 1 2490 0 is_stmt 1
 5416 00bc B7F1FF3F 		cmp	r7, #-1
 5417 00c0 EED0     		beq	.L403
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 5418              		.loc 1 2492 0
 5419 00c2 2FB1     		cbz	r7, .L404
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 5420              		.loc 1 2492 0 is_stmt 0 discriminator 1
 5421 00c4 FFF7FEFF 		bl	HAL_GetTick
 5422              	.LVL430:
 5423 00c8 A0EB0800 		sub	r0, r0, r8
 5424 00cc B842     		cmp	r0, r7
 5425 00ce E7D9     		bls	.L403
 5426              	.L404:
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Process Unlocked */
 5427              		.loc 1 2495 0 is_stmt 1
 5428 00d0 2023     		movs	r3, #32
 5429 00d2 86F84130 		strb	r3, [r6, #65]
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             return HAL_TIMEOUT;
ARM GAS  /tmp/cciXgPzD.s 			page 196


 5430              		.loc 1 2497 0
 5431 00d6 0023     		movs	r3, #0
 5432 00d8 86F84030 		strb	r3, [r6, #64]
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 5433              		.loc 1 2498 0
 5434 00dc 0323     		movs	r3, #3
 5435 00de 2DE0     		b	.L399
 5436              	.L417:
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5437              		.loc 1 2507 0
 5438 00e0 CDF80080 		str	r8, [sp]
 5439 00e4 3B46     		mov	r3, r7
 5440 00e6 0022     		movs	r2, #0
 5441 00e8 2021     		movs	r1, #32
 5442 00ea 3046     		mov	r0, r6
 5443 00ec FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5444              	.LVL431:
 5445 00f0 0346     		mov	r3, r0
 5446 00f2 58BB     		cbnz	r0, .L413
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5447              		.loc 1 2513 0
 5448 00f4 3168     		ldr	r1, [r6]
 5449 00f6 2022     		movs	r2, #32
 5450 00f8 CA61     		str	r2, [r1, #28]
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5451              		.loc 1 2516 0
 5452 00fa 86F84120 		strb	r2, [r6, #65]
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5453              		.loc 1 2519 0
 5454 00fe 0022     		movs	r2, #0
 5455 0100 86F84020 		strb	r2, [r6, #64]
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5456              		.loc 1 2521 0
 5457 0104 1AE0     		b	.L399
 5458              	.L418:
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5459              		.loc 1 2542 0
 5460 0106 3268     		ldr	r2, [r6]
 5461 0108 5368     		ldr	r3, [r2, #4]
 5462 010a 43F48043 		orr	r3, r3, #16384
 5463 010e 5360     		str	r3, [r2, #4]
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5464              		.loc 1 2545 0
 5465 0110 CDF80080 		str	r8, [sp]
 5466 0114 3B46     		mov	r3, r7
 5467 0116 0022     		movs	r2, #0
 5468 0118 2021     		movs	r1, #32
 5469 011a 3046     		mov	r0, r6
 5470 011c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5471              	.LVL432:
 5472 0120 C0B9     		cbnz	r0, .L415
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5473              		.loc 1 2551 0
 5474 0122 3368     		ldr	r3, [r6]
 5475 0124 2022     		movs	r2, #32
 5476 0126 DA61     		str	r2, [r3, #28]
 5477 0128 ABE7     		b	.L408
ARM GAS  /tmp/cciXgPzD.s 			page 197


 5478              	.L419:
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5479              		.loc 1 2556 0
 5480 012a 2023     		movs	r3, #32
 5481 012c 86F84130 		strb	r3, [r6, #65]
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5482              		.loc 1 2559 0
 5483 0130 0023     		movs	r3, #0
 5484 0132 86F84030 		strb	r3, [r6, #64]
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5485              		.loc 1 2561 0
 5486 0136 0323     		movs	r3, #3
 5487 0138 00E0     		b	.L399
 5488              	.LVL433:
 5489              	.L410:
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5490              		.loc 1 2565 0
 5491 013a 0223     		movs	r3, #2
 5492              	.LVL434:
 5493              	.L399:
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5494              		.loc 1 2567 0
 5495 013c 1846     		mov	r0, r3
 5496 013e 04B0     		add	sp, sp, #16
 5497              	.LCFI86:
 5498              		.cfi_remember_state
 5499              		.cfi_def_cfa_offset 32
 5500              		@ sp needed
 5501 0140 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5502              	.LVL435:
 5503              	.L411:
 5504              	.LCFI87:
 5505              		.cfi_restore_state
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5506              		.loc 1 2471 0
 5507 0144 0223     		movs	r3, #2
 5508              	.LVL436:
 5509 0146 F9E7     		b	.L399
 5510              	.LVL437:
 5511              	.L412:
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5512              		.loc 1 2475 0
 5513 0148 0223     		movs	r3, #2
 5514              	.LVL438:
 5515 014a F7E7     		b	.L399
 5516              	.LVL439:
 5517              	.L413:
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5518              		.loc 1 2509 0
 5519 014c 0323     		movs	r3, #3
 5520 014e F5E7     		b	.L399
 5521              	.L414:
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5522              		.loc 1 2528 0
 5523 0150 0323     		movs	r3, #3
 5524 0152 F3E7     		b	.L399
 5525              	.L415:
ARM GAS  /tmp/cciXgPzD.s 			page 198


2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5526              		.loc 1 2547 0
 5527 0154 0323     		movs	r3, #3
 5528 0156 F1E7     		b	.L399
 5529              	.L422:
 5530              		.align	2
 5531              	.L421:
 5532 0158 00200002 		.word	33562624
 5533              		.cfi_endproc
 5534              	.LFE160:
 5536              		.section	.text.HAL_I2C_Master_Sequential_Transmit_IT,"ax",%progbits
 5537              		.align	1
 5538              		.global	HAL_I2C_Master_Sequential_Transmit_IT
 5539              		.syntax unified
 5540              		.thumb
 5541              		.thumb_func
 5542              		.fpu fpv5-d16
 5544              	HAL_I2C_Master_Sequential_Transmit_IT:
 5545              	.LFB161:
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 5546              		.loc 1 2582 0
 5547              		.cfi_startproc
 5548              		@ args = 4, pretend = 0, frame = 0
 5549              		@ frame_needed = 0, uses_anonymous_args = 0
 5550              	.LVL440:
 5551 0000 30B5     		push	{r4, r5, lr}
 5552              	.LCFI88:
 5553              		.cfi_def_cfa_offset 12
 5554              		.cfi_offset 4, -12
 5555              		.cfi_offset 5, -8
 5556              		.cfi_offset 14, -4
 5557 0002 83B0     		sub	sp, sp, #12
 5558              	.LCFI89:
 5559              		.cfi_def_cfa_offset 24
 5560              	.LVL441:
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5561              		.loc 1 2589 0
 5562 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5563 0008 E4B2     		uxtb	r4, r4
 5564 000a 202C     		cmp	r4, #32
 5565 000c 35D1     		bne	.L428
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5566              		.loc 1 2592 0
 5567 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5568 0012 012C     		cmp	r4, #1
 5569 0014 34D0     		beq	.L429
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5570              		.loc 1 2592 0 is_stmt 0 discriminator 2
 5571 0016 0124     		movs	r4, #1
 5572 0018 80F84040 		strb	r4, [r0, #64]
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5573              		.loc 1 2594 0 is_stmt 1 discriminator 2
 5574 001c 2124     		movs	r4, #33
 5575 001e 80F84140 		strb	r4, [r0, #65]
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5576              		.loc 1 2595 0 discriminator 2
 5577 0022 1024     		movs	r4, #16
ARM GAS  /tmp/cciXgPzD.s 			page 199


 5578 0024 80F84240 		strb	r4, [r0, #66]
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5579              		.loc 1 2596 0 discriminator 2
 5580 0028 0024     		movs	r4, #0
 5581 002a 4464     		str	r4, [r0, #68]
2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5582              		.loc 1 2599 0 discriminator 2
 5583 002c 4262     		str	r2, [r0, #36]
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5584              		.loc 1 2600 0 discriminator 2
 5585 002e 4385     		strh	r3, [r0, #42]	@ movhi
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5586              		.loc 1 2601 0 discriminator 2
 5587 0030 069B     		ldr	r3, [sp, #24]
 5588              	.LVL442:
 5589 0032 C362     		str	r3, [r0, #44]
 5590              	.LVL443:
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5591              		.loc 1 2602 0 discriminator 2
 5592 0034 134B     		ldr	r3, .L432
 5593 0036 4363     		str	r3, [r0, #52]
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5594              		.loc 1 2605 0 discriminator 2
 5595 0038 438D     		ldrh	r3, [r0, #42]
 5596 003a 9BB2     		uxth	r3, r3
 5597 003c FF2B     		cmp	r3, #255
 5598 003e 16D9     		bls	.L425
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5599              		.loc 1 2607 0
 5600 0040 FF23     		movs	r3, #255
 5601 0042 0385     		strh	r3, [r0, #40]	@ movhi
 5602              	.LVL444:
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5603              		.loc 1 2608 0
 5604 0044 4FF08073 		mov	r3, #16777216
 5605              	.LVL445:
 5606              	.L426:
2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5607              		.loc 1 2618 0
 5608 0048 026B     		ldr	r2, [r0, #48]
 5609              	.LVL446:
 5610 004a 112A     		cmp	r2, #17
 5611 004c 13D0     		beq	.L430
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5612              		.loc 1 2584 0
 5613 004e 0E4D     		ldr	r5, .L432+4
 5614              	.L427:
 5615 0050 0446     		mov	r4, r0
 5616              	.LVL447:
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5617              		.loc 1 2624 0
 5618 0052 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 5619 0056 0095     		str	r5, [sp]
 5620              	.LVL448:
 5621 0058 FFF7FEFF 		bl	I2C_TransferConfig
 5622              	.LVL449:
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 200


 5623              		.loc 1 2627 0
 5624 005c 0025     		movs	r5, #0
 5625              	.LVL450:
 5626 005e 84F84050 		strb	r5, [r4, #64]
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5627              		.loc 1 2632 0
 5628 0062 0121     		movs	r1, #1
 5629 0064 2046     		mov	r0, r4
 5630 0066 FFF7FEFF 		bl	I2C_Enable_IRQ
 5631              	.LVL451:
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5632              		.loc 1 2634 0
 5633 006a 2846     		mov	r0, r5
 5634 006c 06E0     		b	.L424
 5635              	.LVL452:
 5636              	.L425:
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5637              		.loc 1 2612 0
 5638 006e 438D     		ldrh	r3, [r0, #42]
 5639 0070 0385     		strh	r3, [r0, #40]	@ movhi
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5640              		.loc 1 2613 0
 5641 0072 C36A     		ldr	r3, [r0, #44]
 5642              	.LVL453:
 5643 0074 E8E7     		b	.L426
 5644              	.LVL454:
 5645              	.L430:
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5646              		.loc 1 2620 0
 5647 0076 0025     		movs	r5, #0
 5648 0078 EAE7     		b	.L427
 5649              	.LVL455:
 5650              	.L428:
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5651              		.loc 1 2638 0
 5652 007a 0220     		movs	r0, #2
 5653              	.LVL456:
 5654              	.L424:
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5655              		.loc 1 2640 0
 5656 007c 03B0     		add	sp, sp, #12
 5657              	.LCFI90:
 5658              		.cfi_remember_state
 5659              		.cfi_def_cfa_offset 12
 5660              		@ sp needed
 5661 007e 30BD     		pop	{r4, r5, pc}
 5662              	.LVL457:
 5663              	.L429:
 5664              	.LCFI91:
 5665              		.cfi_restore_state
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5666              		.loc 1 2592 0
 5667 0080 0220     		movs	r0, #2
 5668              	.LVL458:
 5669 0082 FBE7     		b	.L424
 5670              	.L433:
 5671              		.align	2
ARM GAS  /tmp/cciXgPzD.s 			page 201


 5672              	.L432:
 5673 0084 00000000 		.word	I2C_Master_ISR_IT
 5674 0088 00200080 		.word	-2147475456
 5675              		.cfi_endproc
 5676              	.LFE161:
 5678              		.section	.text.HAL_I2C_Master_Sequential_Receive_IT,"ax",%progbits
 5679              		.align	1
 5680              		.global	HAL_I2C_Master_Sequential_Receive_IT
 5681              		.syntax unified
 5682              		.thumb
 5683              		.thumb_func
 5684              		.fpu fpv5-d16
 5686              	HAL_I2C_Master_Sequential_Receive_IT:
 5687              	.LFB162:
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 5688              		.loc 1 2655 0
 5689              		.cfi_startproc
 5690              		@ args = 4, pretend = 0, frame = 0
 5691              		@ frame_needed = 0, uses_anonymous_args = 0
 5692              	.LVL459:
 5693 0000 30B5     		push	{r4, r5, lr}
 5694              	.LCFI92:
 5695              		.cfi_def_cfa_offset 12
 5696              		.cfi_offset 4, -12
 5697              		.cfi_offset 5, -8
 5698              		.cfi_offset 14, -4
 5699 0002 83B0     		sub	sp, sp, #12
 5700              	.LCFI93:
 5701              		.cfi_def_cfa_offset 24
 5702              	.LVL460:
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5703              		.loc 1 2662 0
 5704 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5705 0008 E4B2     		uxtb	r4, r4
 5706 000a 202C     		cmp	r4, #32
 5707 000c 35D1     		bne	.L439
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5708              		.loc 1 2665 0
 5709 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5710 0012 012C     		cmp	r4, #1
 5711 0014 34D0     		beq	.L440
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5712              		.loc 1 2665 0 is_stmt 0 discriminator 2
 5713 0016 0124     		movs	r4, #1
 5714 0018 80F84040 		strb	r4, [r0, #64]
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5715              		.loc 1 2667 0 is_stmt 1 discriminator 2
 5716 001c 2224     		movs	r4, #34
 5717 001e 80F84140 		strb	r4, [r0, #65]
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5718              		.loc 1 2668 0 discriminator 2
 5719 0022 1024     		movs	r4, #16
 5720 0024 80F84240 		strb	r4, [r0, #66]
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5721              		.loc 1 2669 0 discriminator 2
 5722 0028 0024     		movs	r4, #0
 5723 002a 4464     		str	r4, [r0, #68]
ARM GAS  /tmp/cciXgPzD.s 			page 202


2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5724              		.loc 1 2672 0 discriminator 2
 5725 002c 4262     		str	r2, [r0, #36]
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5726              		.loc 1 2673 0 discriminator 2
 5727 002e 4385     		strh	r3, [r0, #42]	@ movhi
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5728              		.loc 1 2674 0 discriminator 2
 5729 0030 069B     		ldr	r3, [sp, #24]
 5730              	.LVL461:
 5731 0032 C362     		str	r3, [r0, #44]
 5732              	.LVL462:
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5733              		.loc 1 2675 0 discriminator 2
 5734 0034 134B     		ldr	r3, .L443
 5735 0036 4363     		str	r3, [r0, #52]
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5736              		.loc 1 2678 0 discriminator 2
 5737 0038 438D     		ldrh	r3, [r0, #42]
 5738 003a 9BB2     		uxth	r3, r3
 5739 003c FF2B     		cmp	r3, #255
 5740 003e 16D9     		bls	.L436
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5741              		.loc 1 2680 0
 5742 0040 FF23     		movs	r3, #255
 5743 0042 0385     		strh	r3, [r0, #40]	@ movhi
 5744              	.LVL463:
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5745              		.loc 1 2681 0
 5746 0044 4FF08073 		mov	r3, #16777216
 5747              	.LVL464:
 5748              	.L437:
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5749              		.loc 1 2691 0
 5750 0048 026B     		ldr	r2, [r0, #48]
 5751              	.LVL465:
 5752 004a 122A     		cmp	r2, #18
 5753 004c 13D0     		beq	.L441
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5754              		.loc 1 2657 0
 5755 004e 0E4D     		ldr	r5, .L443+4
 5756              	.L438:
 5757 0050 0446     		mov	r4, r0
 5758              	.LVL466:
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5759              		.loc 1 2697 0
 5760 0052 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 5761 0056 0095     		str	r5, [sp]
 5762              	.LVL467:
 5763 0058 FFF7FEFF 		bl	I2C_TransferConfig
 5764              	.LVL468:
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5765              		.loc 1 2700 0
 5766 005c 0025     		movs	r5, #0
 5767              	.LVL469:
 5768 005e 84F84050 		strb	r5, [r4, #64]
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 203


 5769              		.loc 1 2705 0
 5770 0062 0221     		movs	r1, #2
 5771 0064 2046     		mov	r0, r4
 5772 0066 FFF7FEFF 		bl	I2C_Enable_IRQ
 5773              	.LVL470:
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5774              		.loc 1 2707 0
 5775 006a 2846     		mov	r0, r5
 5776 006c 06E0     		b	.L435
 5777              	.LVL471:
 5778              	.L436:
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5779              		.loc 1 2685 0
 5780 006e 438D     		ldrh	r3, [r0, #42]
 5781 0070 0385     		strh	r3, [r0, #40]	@ movhi
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5782              		.loc 1 2686 0
 5783 0072 C36A     		ldr	r3, [r0, #44]
 5784              	.LVL472:
 5785 0074 E8E7     		b	.L437
 5786              	.LVL473:
 5787              	.L441:
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5788              		.loc 1 2693 0
 5789 0076 0025     		movs	r5, #0
 5790 0078 EAE7     		b	.L438
 5791              	.LVL474:
 5792              	.L439:
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5793              		.loc 1 2711 0
 5794 007a 0220     		movs	r0, #2
 5795              	.LVL475:
 5796              	.L435:
2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5797              		.loc 1 2713 0
 5798 007c 03B0     		add	sp, sp, #12
 5799              	.LCFI94:
 5800              		.cfi_remember_state
 5801              		.cfi_def_cfa_offset 12
 5802              		@ sp needed
 5803 007e 30BD     		pop	{r4, r5, pc}
 5804              	.LVL476:
 5805              	.L440:
 5806              	.LCFI95:
 5807              		.cfi_restore_state
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5808              		.loc 1 2665 0
 5809 0080 0220     		movs	r0, #2
 5810              	.LVL477:
 5811 0082 FBE7     		b	.L435
 5812              	.L444:
 5813              		.align	2
 5814              	.L443:
 5815 0084 00000000 		.word	I2C_Master_ISR_IT
 5816 0088 00240080 		.word	-2147474432
 5817              		.cfi_endproc
 5818              	.LFE162:
ARM GAS  /tmp/cciXgPzD.s 			page 204


 5820              		.section	.text.HAL_I2C_Slave_Sequential_Transmit_IT,"ax",%progbits
 5821              		.align	1
 5822              		.global	HAL_I2C_Slave_Sequential_Transmit_IT
 5823              		.syntax unified
 5824              		.thumb
 5825              		.thumb_func
 5826              		.fpu fpv5-d16
 5828              	HAL_I2C_Slave_Sequential_Transmit_IT:
 5829              	.LFB163:
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 5830              		.loc 1 2726 0
 5831              		.cfi_startproc
 5832              		@ args = 0, pretend = 0, frame = 0
 5833              		@ frame_needed = 0, uses_anonymous_args = 0
 5834              	.LVL478:
 5835 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5836              	.LCFI96:
 5837              		.cfi_def_cfa_offset 24
 5838              		.cfi_offset 3, -24
 5839              		.cfi_offset 4, -20
 5840              		.cfi_offset 5, -16
 5841              		.cfi_offset 6, -12
 5842              		.cfi_offset 7, -8
 5843              		.cfi_offset 14, -4
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5844              		.loc 1 2730 0
 5845 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5846 0006 04F02804 		and	r4, r4, #40
 5847 000a 282C     		cmp	r4, #40
 5848 000c 01D0     		beq	.L453
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5849              		.loc 1 2785 0
 5850 000e 0120     		movs	r0, #1
 5851              	.LVL479:
 5852              	.L446:
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5853              		.loc 1 2787 0
 5854 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5855              	.LVL480:
 5856              	.L453:
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5857              		.loc 1 2732 0
 5858 0012 B2FA82F4 		clz	r4, r2
 5859 0016 6409     		lsrs	r4, r4, #5
 5860 0018 0029     		cmp	r1, #0
 5861 001a 08BF     		it	eq
 5862 001c 0124     		moveq	r4, #1
 5863 001e 0CB1     		cbz	r4, .L454
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5864              		.loc 1 2734 0
 5865 0020 0120     		movs	r0, #1
 5866              	.LVL481:
 5867 0022 F5E7     		b	.L446
 5868              	.LVL482:
 5869              	.L454:
 5870 0024 1F46     		mov	r7, r3
 5871 0026 1646     		mov	r6, r2
ARM GAS  /tmp/cciXgPzD.s 			page 205


 5872 0028 0C46     		mov	r4, r1
 5873 002a 0546     		mov	r5, r0
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5874              		.loc 1 2738 0
 5875 002c 0521     		movs	r1, #5
 5876              	.LVL483:
 5877 002e FFF7FEFF 		bl	I2C_Disable_IRQ
 5878              	.LVL484:
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5879              		.loc 1 2741 0
 5880 0032 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 5881 0036 012B     		cmp	r3, #1
 5882 0038 30D0     		beq	.L451
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5883              		.loc 1 2741 0 is_stmt 0 discriminator 2
 5884 003a 0123     		movs	r3, #1
 5885 003c 85F84030 		strb	r3, [r5, #64]
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5886              		.loc 1 2745 0 is_stmt 1 discriminator 2
 5887 0040 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 5888 0044 DBB2     		uxtb	r3, r3
 5889 0046 2A2B     		cmp	r3, #42
 5890 0048 23D0     		beq	.L455
 5891              	.L447:
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 5892              		.loc 1 2751 0
 5893 004a 2923     		movs	r3, #41
 5894 004c 85F84130 		strb	r3, [r5, #65]
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5895              		.loc 1 2752 0
 5896 0050 2023     		movs	r3, #32
 5897 0052 85F84230 		strb	r3, [r5, #66]
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5898              		.loc 1 2753 0
 5899 0056 0023     		movs	r3, #0
 5900 0058 6B64     		str	r3, [r5, #68]
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5901              		.loc 1 2756 0
 5902 005a 2A68     		ldr	r2, [r5]
 5903 005c 5368     		ldr	r3, [r2, #4]
 5904 005e 23F40043 		bic	r3, r3, #32768
 5905 0062 5360     		str	r3, [r2, #4]
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5906              		.loc 1 2759 0
 5907 0064 6C62     		str	r4, [r5, #36]
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 5908              		.loc 1 2760 0
 5909 0066 6E85     		strh	r6, [r5, #42]	@ movhi
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5910              		.loc 1 2761 0
 5911 0068 6B8D     		ldrh	r3, [r5, #42]
 5912 006a 2B85     		strh	r3, [r5, #40]	@ movhi
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 5913              		.loc 1 2762 0
 5914 006c EF62     		str	r7, [r5, #44]
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5915              		.loc 1 2763 0
ARM GAS  /tmp/cciXgPzD.s 			page 206


 5916 006e 0C4B     		ldr	r3, .L456
 5917 0070 6B63     		str	r3, [r5, #52]
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5918              		.loc 1 2765 0
 5919 0072 2B68     		ldr	r3, [r5]
 5920 0074 9A69     		ldr	r2, [r3, #24]
 5921 0076 12F4803F 		tst	r2, #65536
 5922 007a 01D0     		beq	.L448
2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5923              		.loc 1 2769 0
 5924 007c 0822     		movs	r2, #8
 5925 007e DA61     		str	r2, [r3, #28]
 5926              	.L448:
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5927              		.loc 1 2773 0
 5928 0080 0024     		movs	r4, #0
 5929              	.LVL485:
 5930 0082 85F84040 		strb	r4, [r5, #64]
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5931              		.loc 1 2779 0
 5932 0086 0521     		movs	r1, #5
 5933 0088 2846     		mov	r0, r5
 5934 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 5935              	.LVL486:
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5936              		.loc 1 2781 0
 5937 008e 2046     		mov	r0, r4
 5938 0090 BEE7     		b	.L446
 5939              	.LVL487:
 5940              	.L455:
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5941              		.loc 1 2748 0
 5942 0092 0221     		movs	r1, #2
 5943 0094 2846     		mov	r0, r5
 5944 0096 FFF7FEFF 		bl	I2C_Disable_IRQ
 5945              	.LVL488:
 5946 009a D6E7     		b	.L447
 5947              	.L451:
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5948              		.loc 1 2741 0
 5949 009c 0220     		movs	r0, #2
 5950 009e B7E7     		b	.L446
 5951              	.L457:
 5952              		.align	2
 5953              	.L456:
 5954 00a0 00000000 		.word	I2C_Slave_ISR_IT
 5955              		.cfi_endproc
 5956              	.LFE163:
 5958              		.section	.text.HAL_I2C_Slave_Sequential_Receive_IT,"ax",%progbits
 5959              		.align	1
 5960              		.global	HAL_I2C_Slave_Sequential_Receive_IT
 5961              		.syntax unified
 5962              		.thumb
 5963              		.thumb_func
 5964              		.fpu fpv5-d16
 5966              	HAL_I2C_Slave_Sequential_Receive_IT:
 5967              	.LFB164:
ARM GAS  /tmp/cciXgPzD.s 			page 207


2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 5968              		.loc 1 2800 0
 5969              		.cfi_startproc
 5970              		@ args = 0, pretend = 0, frame = 0
 5971              		@ frame_needed = 0, uses_anonymous_args = 0
 5972              	.LVL489:
 5973 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5974              	.LCFI97:
 5975              		.cfi_def_cfa_offset 24
 5976              		.cfi_offset 3, -24
 5977              		.cfi_offset 4, -20
 5978              		.cfi_offset 5, -16
 5979              		.cfi_offset 6, -12
 5980              		.cfi_offset 7, -8
 5981              		.cfi_offset 14, -4
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5982              		.loc 1 2804 0
 5983 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5984 0006 04F02804 		and	r4, r4, #40
 5985 000a 282C     		cmp	r4, #40
 5986 000c 01D0     		beq	.L466
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5987              		.loc 1 2859 0
 5988 000e 0120     		movs	r0, #1
 5989              	.LVL490:
 5990              	.L459:
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5991              		.loc 1 2861 0
 5992 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5993              	.LVL491:
 5994              	.L466:
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5995              		.loc 1 2806 0
 5996 0012 B2FA82F4 		clz	r4, r2
 5997 0016 6409     		lsrs	r4, r4, #5
 5998 0018 0029     		cmp	r1, #0
 5999 001a 08BF     		it	eq
 6000 001c 0124     		moveq	r4, #1
 6001 001e 0CB1     		cbz	r4, .L467
2808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6002              		.loc 1 2808 0
 6003 0020 0120     		movs	r0, #1
 6004              	.LVL492:
 6005 0022 F5E7     		b	.L459
 6006              	.LVL493:
 6007              	.L467:
 6008 0024 1F46     		mov	r7, r3
 6009 0026 1646     		mov	r6, r2
 6010 0028 0C46     		mov	r4, r1
 6011 002a 0546     		mov	r5, r0
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6012              		.loc 1 2812 0
 6013 002c 0621     		movs	r1, #6
 6014              	.LVL494:
 6015 002e FFF7FEFF 		bl	I2C_Disable_IRQ
 6016              	.LVL495:
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 208


 6017              		.loc 1 2815 0
 6018 0032 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 6019 0036 012B     		cmp	r3, #1
 6020 0038 30D0     		beq	.L464
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6021              		.loc 1 2815 0 is_stmt 0 discriminator 2
 6022 003a 0123     		movs	r3, #1
 6023 003c 85F84030 		strb	r3, [r5, #64]
2819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6024              		.loc 1 2819 0 is_stmt 1 discriminator 2
 6025 0040 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 6026 0044 DBB2     		uxtb	r3, r3
 6027 0046 292B     		cmp	r3, #41
 6028 0048 23D0     		beq	.L468
 6029              	.L460:
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6030              		.loc 1 2825 0
 6031 004a 2A23     		movs	r3, #42
 6032 004c 85F84130 		strb	r3, [r5, #65]
2826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6033              		.loc 1 2826 0
 6034 0050 2023     		movs	r3, #32
 6035 0052 85F84230 		strb	r3, [r5, #66]
2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6036              		.loc 1 2827 0
 6037 0056 0023     		movs	r3, #0
 6038 0058 6B64     		str	r3, [r5, #68]
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6039              		.loc 1 2830 0
 6040 005a 2A68     		ldr	r2, [r5]
 6041 005c 5368     		ldr	r3, [r2, #4]
 6042 005e 23F40043 		bic	r3, r3, #32768
 6043 0062 5360     		str	r3, [r2, #4]
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6044              		.loc 1 2833 0
 6045 0064 6C62     		str	r4, [r5, #36]
2834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6046              		.loc 1 2834 0
 6047 0066 6E85     		strh	r6, [r5, #42]	@ movhi
2835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6048              		.loc 1 2835 0
 6049 0068 6B8D     		ldrh	r3, [r5, #42]
 6050 006a 2B85     		strh	r3, [r5, #40]	@ movhi
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6051              		.loc 1 2836 0
 6052 006c EF62     		str	r7, [r5, #44]
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6053              		.loc 1 2837 0
 6054 006e 0C4B     		ldr	r3, .L469
 6055 0070 6B63     		str	r3, [r5, #52]
2839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6056              		.loc 1 2839 0
 6057 0072 2B68     		ldr	r3, [r5]
 6058 0074 9A69     		ldr	r2, [r3, #24]
 6059 0076 12F4803F 		tst	r2, #65536
 6060 007a 01D1     		bne	.L461
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cciXgPzD.s 			page 209


 6061              		.loc 1 2843 0
 6062 007c 0822     		movs	r2, #8
 6063 007e DA61     		str	r2, [r3, #28]
 6064              	.L461:
2847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6065              		.loc 1 2847 0
 6066 0080 0024     		movs	r4, #0
 6067              	.LVL496:
 6068 0082 85F84040 		strb	r4, [r5, #64]
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6069              		.loc 1 2853 0
 6070 0086 0621     		movs	r1, #6
 6071 0088 2846     		mov	r0, r5
 6072 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 6073              	.LVL497:
2855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6074              		.loc 1 2855 0
 6075 008e 2046     		mov	r0, r4
 6076 0090 BEE7     		b	.L459
 6077              	.LVL498:
 6078              	.L468:
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6079              		.loc 1 2822 0
 6080 0092 0121     		movs	r1, #1
 6081 0094 2846     		mov	r0, r5
 6082 0096 FFF7FEFF 		bl	I2C_Disable_IRQ
 6083              	.LVL499:
 6084 009a D6E7     		b	.L460
 6085              	.L464:
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6086              		.loc 1 2815 0
 6087 009c 0220     		movs	r0, #2
 6088 009e B7E7     		b	.L459
 6089              	.L470:
 6090              		.align	2
 6091              	.L469:
 6092 00a0 00000000 		.word	I2C_Slave_ISR_IT
 6093              		.cfi_endproc
 6094              	.LFE164:
 6096              		.section	.text.HAL_I2C_EnableListen_IT,"ax",%progbits
 6097              		.align	1
 6098              		.global	HAL_I2C_EnableListen_IT
 6099              		.syntax unified
 6100              		.thumb
 6101              		.thumb_func
 6102              		.fpu fpv5-d16
 6104              	HAL_I2C_EnableListen_IT:
 6105              	.LFB165:
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 6106              		.loc 1 2870 0
 6107              		.cfi_startproc
 6108              		@ args = 0, pretend = 0, frame = 0
 6109              		@ frame_needed = 0, uses_anonymous_args = 0
 6110              	.LVL500:
 6111 0000 08B5     		push	{r3, lr}
 6112              	.LCFI98:
 6113              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cciXgPzD.s 			page 210


 6114              		.cfi_offset 3, -8
 6115              		.cfi_offset 14, -4
2871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6116              		.loc 1 2871 0
 6117 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6118 0006 DBB2     		uxtb	r3, r3
 6119 0008 202B     		cmp	r3, #32
 6120 000a 01D0     		beq	.L475
2883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6121              		.loc 1 2883 0
 6122 000c 0220     		movs	r0, #2
 6123              	.LVL501:
 6124              	.L472:
2885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6125              		.loc 1 2885 0
 6126 000e 08BD     		pop	{r3, pc}
 6127              	.LVL502:
 6128              	.L475:
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
 6129              		.loc 1 2873 0
 6130 0010 2823     		movs	r3, #40
 6131 0012 80F84130 		strb	r3, [r0, #65]
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6132              		.loc 1 2874 0
 6133 0016 034B     		ldr	r3, .L476
 6134 0018 4363     		str	r3, [r0, #52]
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6135              		.loc 1 2877 0
 6136 001a 0421     		movs	r1, #4
 6137 001c FFF7FEFF 		bl	I2C_Enable_IRQ
 6138              	.LVL503:
2879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6139              		.loc 1 2879 0
 6140 0020 0020     		movs	r0, #0
 6141 0022 F4E7     		b	.L472
 6142              	.L477:
 6143              		.align	2
 6144              	.L476:
 6145 0024 00000000 		.word	I2C_Slave_ISR_IT
 6146              		.cfi_endproc
 6147              	.LFE165:
 6149              		.section	.text.HAL_I2C_DisableListen_IT,"ax",%progbits
 6150              		.align	1
 6151              		.global	HAL_I2C_DisableListen_IT
 6152              		.syntax unified
 6153              		.thumb
 6154              		.thumb_func
 6155              		.fpu fpv5-d16
 6157              	HAL_I2C_DisableListen_IT:
 6158              	.LFB166:
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 6159              		.loc 1 2894 0
 6160              		.cfi_startproc
 6161              		@ args = 0, pretend = 0, frame = 0
 6162              		@ frame_needed = 0, uses_anonymous_args = 0
 6163              	.LVL504:
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cciXgPzD.s 			page 211


 6164              		.loc 1 2899 0
 6165 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6166 0004 DBB2     		uxtb	r3, r3
 6167 0006 282B     		cmp	r3, #40
 6168 0008 01D0     		beq	.L485
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6169              		.loc 1 2914 0
 6170 000a 0220     		movs	r0, #2
 6171              	.LVL505:
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6172              		.loc 1 2916 0
 6173 000c 7047     		bx	lr
 6174              	.LVL506:
 6175              	.L485:
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 6176              		.loc 1 2894 0
 6177 000e 10B5     		push	{r4, lr}
 6178              	.LCFI99:
 6179              		.cfi_def_cfa_offset 8
 6180              		.cfi_offset 4, -8
 6181              		.cfi_offset 14, -4
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
 6182              		.loc 1 2901 0
 6183 0010 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 6184              	.LVL507:
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 6185              		.loc 1 2902 0
 6186 0014 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 6187 0018 02F00302 		and	r2, r2, #3
 6188              	.LVL508:
 6189 001c 1343     		orrs	r3, r3, r2
 6190 001e 0363     		str	r3, [r0, #48]
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 6191              		.loc 1 2903 0
 6192 0020 2023     		movs	r3, #32
 6193 0022 80F84130 		strb	r3, [r0, #65]
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
 6194              		.loc 1 2904 0
 6195 0026 0024     		movs	r4, #0
 6196 0028 80F84240 		strb	r4, [r0, #66]
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6197              		.loc 1 2905 0
 6198 002c 4463     		str	r4, [r0, #52]
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6199              		.loc 1 2908 0
 6200 002e 0421     		movs	r1, #4
 6201 0030 FFF7FEFF 		bl	I2C_Disable_IRQ
 6202              	.LVL509:
2910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6203              		.loc 1 2910 0
 6204 0034 2046     		mov	r0, r4
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6205              		.loc 1 2916 0
 6206 0036 10BD     		pop	{r4, pc}
 6207              		.cfi_endproc
 6208              	.LFE166:
 6210              		.section	.text.HAL_I2C_Master_Abort_IT,"ax",%progbits
ARM GAS  /tmp/cciXgPzD.s 			page 212


 6211              		.align	1
 6212              		.global	HAL_I2C_Master_Abort_IT
 6213              		.syntax unified
 6214              		.thumb
 6215              		.thumb_func
 6216              		.fpu fpv5-d16
 6218              	HAL_I2C_Master_Abort_IT:
 6219              	.LFB167:
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 6220              		.loc 1 2927 0
 6221              		.cfi_startproc
 6222              		@ args = 0, pretend = 0, frame = 0
 6223              		@ frame_needed = 0, uses_anonymous_args = 0
 6224              	.LVL510:
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6225              		.loc 1 2928 0
 6226 0000 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 6227 0004 DBB2     		uxtb	r3, r3
 6228 0006 102B     		cmp	r3, #16
 6229 0008 01D0     		beq	.L494
2958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6230              		.loc 1 2958 0
 6231 000a 0120     		movs	r0, #1
 6232              	.LVL511:
 6233 000c 7047     		bx	lr
 6234              	.LVL512:
 6235              	.L494:
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6236              		.loc 1 2931 0
 6237 000e 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 6238 0012 012B     		cmp	r3, #1
 6239 0014 23D0     		beq	.L489
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 6240              		.loc 1 2927 0 discriminator 2
 6241 0016 70B5     		push	{r4, r5, r6, lr}
 6242              	.LCFI100:
 6243              		.cfi_def_cfa_offset 16
 6244              		.cfi_offset 4, -16
 6245              		.cfi_offset 5, -12
 6246              		.cfi_offset 6, -8
 6247              		.cfi_offset 14, -4
 6248 0018 82B0     		sub	sp, sp, #8
 6249              	.LCFI101:
 6250              		.cfi_def_cfa_offset 24
 6251 001a 0D46     		mov	r5, r1
 6252 001c 0446     		mov	r4, r0
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6253              		.loc 1 2931 0 discriminator 2
 6254 001e 0126     		movs	r6, #1
 6255 0020 80F84060 		strb	r6, [r0, #64]
2934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 6256              		.loc 1 2934 0 discriminator 2
 6257 0024 0221     		movs	r1, #2
 6258              	.LVL513:
 6259 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
 6260              	.LVL514:
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 213


 6261              		.loc 1 2935 0 discriminator 2
 6262 002a 3146     		mov	r1, r6
 6263 002c 2046     		mov	r0, r4
 6264 002e FFF7FEFF 		bl	I2C_Disable_IRQ
 6265              	.LVL515:
2938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6266              		.loc 1 2938 0 discriminator 2
 6267 0032 6023     		movs	r3, #96
 6268 0034 84F84130 		strb	r3, [r4, #65]
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6269              		.loc 1 2942 0 discriminator 2
 6270 0038 0A4B     		ldr	r3, .L495
 6271 003a 0093     		str	r3, [sp]
 6272 003c 4FF00073 		mov	r3, #33554432
 6273 0040 3246     		mov	r2, r6
 6274 0042 2946     		mov	r1, r5
 6275 0044 2046     		mov	r0, r4
 6276 0046 FFF7FEFF 		bl	I2C_TransferConfig
 6277              	.LVL516:
2945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6278              		.loc 1 2945 0 discriminator 2
 6279 004a 0025     		movs	r5, #0
 6280 004c 84F84050 		strb	r5, [r4, #64]
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6281              		.loc 1 2950 0 discriminator 2
 6282 0050 1221     		movs	r1, #18
 6283 0052 2046     		mov	r0, r4
 6284 0054 FFF7FEFF 		bl	I2C_Enable_IRQ
 6285              	.LVL517:
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6286              		.loc 1 2952 0 discriminator 2
 6287 0058 2846     		mov	r0, r5
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6288              		.loc 1 2960 0 discriminator 2
 6289 005a 02B0     		add	sp, sp, #8
 6290              	.LCFI102:
 6291              		.cfi_def_cfa_offset 16
 6292              		@ sp needed
 6293 005c 70BD     		pop	{r4, r5, r6, pc}
 6294              	.LVL518:
 6295              	.L489:
 6296              	.LCFI103:
 6297              		.cfi_def_cfa_offset 0
 6298              		.cfi_restore 4
 6299              		.cfi_restore 5
 6300              		.cfi_restore 6
 6301              		.cfi_restore 14
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6302              		.loc 1 2931 0
 6303 005e 0220     		movs	r0, #2
 6304              	.LVL519:
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6305              		.loc 1 2960 0
 6306 0060 7047     		bx	lr
 6307              	.L496:
 6308 0062 00BF     		.align	2
 6309              	.L495:
ARM GAS  /tmp/cciXgPzD.s 			page 214


 6310 0064 00400080 		.word	-2147467264
 6311              		.cfi_endproc
 6312              	.LFE167:
 6314              		.section	.text.HAL_I2C_EV_IRQHandler,"ax",%progbits
 6315              		.align	1
 6316              		.global	HAL_I2C_EV_IRQHandler
 6317              		.syntax unified
 6318              		.thumb
 6319              		.thumb_func
 6320              		.fpu fpv5-d16
 6322              	HAL_I2C_EV_IRQHandler:
 6323              	.LFB168:
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
 6324              		.loc 1 2977 0
 6325              		.cfi_startproc
 6326              		@ args = 0, pretend = 0, frame = 0
 6327              		@ frame_needed = 0, uses_anonymous_args = 0
 6328              	.LVL520:
 6329 0000 08B5     		push	{r3, lr}
 6330              	.LCFI104:
 6331              		.cfi_def_cfa_offset 8
 6332              		.cfi_offset 3, -8
 6333              		.cfi_offset 14, -4
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 6334              		.loc 1 2979 0
 6335 0002 0368     		ldr	r3, [r0]
 6336 0004 9969     		ldr	r1, [r3, #24]
 6337              	.LVL521:
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6338              		.loc 1 2980 0
 6339 0006 1A68     		ldr	r2, [r3]
 6340              	.LVL522:
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6341              		.loc 1 2983 0
 6342 0008 436B     		ldr	r3, [r0, #52]
 6343 000a 03B1     		cbz	r3, .L497
2985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6344              		.loc 1 2985 0
 6345 000c 9847     		blx	r3
 6346              	.LVL523:
 6347              	.L497:
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6348              		.loc 1 2987 0
 6349 000e 08BD     		pop	{r3, pc}
 6350              		.cfi_endproc
 6351              	.LFE168:
 6353              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 6354              		.align	1
 6355              		.weak	HAL_I2C_MasterTxCpltCallback
 6356              		.syntax unified
 6357              		.thumb
 6358              		.thumb_func
 6359              		.fpu fpv5-d16
 6361              	HAL_I2C_MasterTxCpltCallback:
 6362              	.LFB170:
3041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 6363              		.loc 1 3041 0
ARM GAS  /tmp/cciXgPzD.s 			page 215


 6364              		.cfi_startproc
 6365              		@ args = 0, pretend = 0, frame = 0
 6366              		@ frame_needed = 0, uses_anonymous_args = 0
 6367              		@ link register save eliminated.
 6368              	.LVL524:
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6369              		.loc 1 3048 0
 6370 0000 7047     		bx	lr
 6371              		.cfi_endproc
 6372              	.LFE170:
 6374              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 6375              		.align	1
 6376              		.weak	HAL_I2C_MasterRxCpltCallback
 6377              		.syntax unified
 6378              		.thumb
 6379              		.thumb_func
 6380              		.fpu fpv5-d16
 6382              	HAL_I2C_MasterRxCpltCallback:
 6383              	.LFB171:
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 6384              		.loc 1 3057 0
 6385              		.cfi_startproc
 6386              		@ args = 0, pretend = 0, frame = 0
 6387              		@ frame_needed = 0, uses_anonymous_args = 0
 6388              		@ link register save eliminated.
 6389              	.LVL525:
3064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6390              		.loc 1 3064 0
 6391 0000 7047     		bx	lr
 6392              		.cfi_endproc
 6393              	.LFE171:
 6395              		.section	.text.I2C_ITMasterSequentialCplt,"ax",%progbits
 6396              		.align	1
 6397              		.syntax unified
 6398              		.thumb
 6399              		.thumb_func
 6400              		.fpu fpv5-d16
 6402              	I2C_ITMasterSequentialCplt:
 6403              	.LFB190:
3860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 6404              		.loc 1 3860 0
 6405              		.cfi_startproc
 6406              		@ args = 0, pretend = 0, frame = 0
 6407              		@ frame_needed = 0, uses_anonymous_args = 0
 6408              	.LVL526:
 6409 0000 38B5     		push	{r3, r4, r5, lr}
 6410              	.LCFI105:
 6411              		.cfi_def_cfa_offset 16
 6412              		.cfi_offset 3, -16
 6413              		.cfi_offset 4, -12
 6414              		.cfi_offset 5, -8
 6415              		.cfi_offset 14, -4
 6416 0002 0446     		mov	r4, r0
3862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6417              		.loc 1 3862 0
 6418 0004 0023     		movs	r3, #0
 6419 0006 80F84230 		strb	r3, [r0, #66]
ARM GAS  /tmp/cciXgPzD.s 			page 216


3866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6420              		.loc 1 3866 0
 6421 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6422 000e DBB2     		uxtb	r3, r3
 6423 0010 212B     		cmp	r3, #33
 6424 0012 0FD0     		beq	.L506
3884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 6425              		.loc 1 3884 0
 6426 0014 2023     		movs	r3, #32
 6427 0016 80F84130 		strb	r3, [r0, #65]
3885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 6428              		.loc 1 3885 0
 6429 001a 1223     		movs	r3, #18
 6430 001c 0363     		str	r3, [r0, #48]
3886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6431              		.loc 1 3886 0
 6432 001e 0025     		movs	r5, #0
 6433 0020 4563     		str	r5, [r0, #52]
3889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6434              		.loc 1 3889 0
 6435 0022 0221     		movs	r1, #2
 6436 0024 FFF7FEFF 		bl	I2C_Disable_IRQ
 6437              	.LVL527:
3892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6438              		.loc 1 3892 0
 6439 0028 84F84050 		strb	r5, [r4, #64]
3895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6440              		.loc 1 3895 0
 6441 002c 2046     		mov	r0, r4
 6442 002e FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 6443              	.LVL528:
 6444              	.L502:
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6445              		.loc 1 3897 0
 6446 0032 38BD     		pop	{r3, r4, r5, pc}
 6447              	.LVL529:
 6448              	.L506:
3868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 6449              		.loc 1 3868 0
 6450 0034 2023     		movs	r3, #32
 6451 0036 80F84130 		strb	r3, [r0, #65]
3869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 6452              		.loc 1 3869 0
 6453 003a 1123     		movs	r3, #17
 6454 003c 0363     		str	r3, [r0, #48]
3870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6455              		.loc 1 3870 0
 6456 003e 0025     		movs	r5, #0
 6457 0040 4563     		str	r5, [r0, #52]
3873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6458              		.loc 1 3873 0
 6459 0042 0121     		movs	r1, #1
 6460 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 6461              	.LVL530:
3876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6462              		.loc 1 3876 0
 6463 0048 84F84050 		strb	r5, [r4, #64]
ARM GAS  /tmp/cciXgPzD.s 			page 217


3879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6464              		.loc 1 3879 0
 6465 004c 2046     		mov	r0, r4
 6466 004e FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 6467              	.LVL531:
 6468 0052 EEE7     		b	.L502
 6469              		.cfi_endproc
 6470              	.LFE190:
 6472              		.section	.text.HAL_I2C_SlaveTxCpltCallback,"ax",%progbits
 6473              		.align	1
 6474              		.weak	HAL_I2C_SlaveTxCpltCallback
 6475              		.syntax unified
 6476              		.thumb
 6477              		.thumb_func
 6478              		.fpu fpv5-d16
 6480              	HAL_I2C_SlaveTxCpltCallback:
 6481              	.LFB172:
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 6482              		.loc 1 3072 0
 6483              		.cfi_startproc
 6484              		@ args = 0, pretend = 0, frame = 0
 6485              		@ frame_needed = 0, uses_anonymous_args = 0
 6486              		@ link register save eliminated.
 6487              	.LVL532:
3079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6488              		.loc 1 3079 0
 6489 0000 7047     		bx	lr
 6490              		.cfi_endproc
 6491              	.LFE172:
 6493              		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 6494              		.align	1
 6495              		.weak	HAL_I2C_SlaveRxCpltCallback
 6496              		.syntax unified
 6497              		.thumb
 6498              		.thumb_func
 6499              		.fpu fpv5-d16
 6501              	HAL_I2C_SlaveRxCpltCallback:
 6502              	.LFB173:
3088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 6503              		.loc 1 3088 0
 6504              		.cfi_startproc
 6505              		@ args = 0, pretend = 0, frame = 0
 6506              		@ frame_needed = 0, uses_anonymous_args = 0
 6507              		@ link register save eliminated.
 6508              	.LVL533:
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6509              		.loc 1 3095 0
 6510 0000 7047     		bx	lr
 6511              		.cfi_endproc
 6512              	.LFE173:
 6514              		.section	.text.I2C_ITSlaveSequentialCplt,"ax",%progbits
 6515              		.align	1
 6516              		.syntax unified
 6517              		.thumb
 6518              		.thumb_func
 6519              		.fpu fpv5-d16
 6521              	I2C_ITSlaveSequentialCplt:
ARM GAS  /tmp/cciXgPzD.s 			page 218


 6522              	.LFB191:
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 6523              		.loc 1 3905 0
 6524              		.cfi_startproc
 6525              		@ args = 0, pretend = 0, frame = 0
 6526              		@ frame_needed = 0, uses_anonymous_args = 0
 6527              	.LVL534:
 6528 0000 10B5     		push	{r4, lr}
 6529              	.LCFI106:
 6530              		.cfi_def_cfa_offset 8
 6531              		.cfi_offset 4, -8
 6532              		.cfi_offset 14, -4
 6533 0002 0446     		mov	r4, r0
3907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6534              		.loc 1 3907 0
 6535 0004 0023     		movs	r3, #0
 6536 0006 80F84230 		strb	r3, [r0, #66]
3909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6537              		.loc 1 3909 0
 6538 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6539 000e DBB2     		uxtb	r3, r3
 6540 0010 292B     		cmp	r3, #41
 6541 0012 05D0     		beq	.L513
3925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6542              		.loc 1 3925 0
 6543 0014 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6544 0018 DBB2     		uxtb	r3, r3
 6545 001a 2A2B     		cmp	r3, #42
 6546 001c 0FD0     		beq	.L514
 6547              	.LVL535:
 6548              	.L509:
3940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6549              		.loc 1 3940 0
 6550 001e 10BD     		pop	{r4, pc}
 6551              	.LVL536:
 6552              	.L513:
3912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 6553              		.loc 1 3912 0
 6554 0020 2823     		movs	r3, #40
 6555 0022 80F84130 		strb	r3, [r0, #65]
3913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6556              		.loc 1 3913 0
 6557 0026 2123     		movs	r3, #33
 6558 0028 0363     		str	r3, [r0, #48]
3916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6559              		.loc 1 3916 0
 6560 002a 0121     		movs	r1, #1
 6561 002c FFF7FEFF 		bl	I2C_Disable_IRQ
 6562              	.LVL537:
3919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6563              		.loc 1 3919 0
 6564 0030 0023     		movs	r3, #0
 6565 0032 84F84030 		strb	r3, [r4, #64]
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6566              		.loc 1 3922 0
 6567 0036 2046     		mov	r0, r4
 6568 0038 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
ARM GAS  /tmp/cciXgPzD.s 			page 219


 6569              	.LVL538:
 6570 003c EFE7     		b	.L509
 6571              	.LVL539:
 6572              	.L514:
3928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 6573              		.loc 1 3928 0
 6574 003e 2823     		movs	r3, #40
 6575 0040 80F84130 		strb	r3, [r0, #65]
3929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6576              		.loc 1 3929 0
 6577 0044 2223     		movs	r3, #34
 6578 0046 0363     		str	r3, [r0, #48]
3932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6579              		.loc 1 3932 0
 6580 0048 0221     		movs	r1, #2
 6581 004a FFF7FEFF 		bl	I2C_Disable_IRQ
 6582              	.LVL540:
3935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6583              		.loc 1 3935 0
 6584 004e 0023     		movs	r3, #0
 6585 0050 84F84030 		strb	r3, [r4, #64]
3938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6586              		.loc 1 3938 0
 6587 0054 2046     		mov	r0, r4
 6588 0056 FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 6589              	.LVL541:
3940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6590              		.loc 1 3940 0
 6591 005a E0E7     		b	.L509
 6592              		.cfi_endproc
 6593              	.LFE191:
 6595              		.section	.text.HAL_I2C_AddrCallback,"ax",%progbits
 6596              		.align	1
 6597              		.weak	HAL_I2C_AddrCallback
 6598              		.syntax unified
 6599              		.thumb
 6600              		.thumb_func
 6601              		.fpu fpv5-d16
 6603              	HAL_I2C_AddrCallback:
 6604              	.LFB174:
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 6605              		.loc 1 3106 0
 6606              		.cfi_startproc
 6607              		@ args = 0, pretend = 0, frame = 0
 6608              		@ frame_needed = 0, uses_anonymous_args = 0
 6609              		@ link register save eliminated.
 6610              	.LVL542:
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6611              		.loc 1 3115 0
 6612 0000 7047     		bx	lr
 6613              		.cfi_endproc
 6614              	.LFE174:
 6616              		.section	.text.I2C_ITAddrCplt,"ax",%progbits
 6617              		.align	1
 6618              		.syntax unified
 6619              		.thumb
 6620              		.thumb_func
ARM GAS  /tmp/cciXgPzD.s 			page 220


 6621              		.fpu fpv5-d16
 6623              	I2C_ITAddrCplt:
 6624              	.LFB189:
3777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection = 0U;
 6625              		.loc 1 3777 0
 6626              		.cfi_startproc
 6627              		@ args = 0, pretend = 0, frame = 0
 6628              		@ frame_needed = 0, uses_anonymous_args = 0
 6629              	.LVL543:
 6630 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6631              	.LCFI107:
 6632              		.cfi_def_cfa_offset 24
 6633              		.cfi_offset 3, -24
 6634              		.cfi_offset 4, -20
 6635              		.cfi_offset 5, -16
 6636              		.cfi_offset 6, -12
 6637              		.cfi_offset 7, -8
 6638              		.cfi_offset 14, -4
 6639              	.LVL544:
3787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6640              		.loc 1 3787 0
 6641 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6642 0006 03F02803 		and	r3, r3, #40
 6643 000a 282B     		cmp	r3, #40
 6644 000c 06D0     		beq	.L522
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6645              		.loc 1 3847 0
 6646 000e 0368     		ldr	r3, [r0]
 6647 0010 0822     		movs	r2, #8
 6648 0012 DA61     		str	r2, [r3, #28]
3850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6649              		.loc 1 3850 0
 6650 0014 0023     		movs	r3, #0
 6651 0016 80F84030 		strb	r3, [r0, #64]
 6652              	.LVL545:
 6653              	.L516:
3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6654              		.loc 1 3852 0
 6655 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6656              	.LVL546:
 6657              	.L522:
 6658 001c 0446     		mov	r4, r0
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 6659              		.loc 1 3789 0
 6660 001e 0368     		ldr	r3, [r0]
 6661 0020 9E69     		ldr	r6, [r3, #24]
 6662 0022 C6F30046 		ubfx	r6, r6, #16, #1
 6663              	.LVL547:
3790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 6664              		.loc 1 3790 0
 6665 0026 9A69     		ldr	r2, [r3, #24]
 6666 0028 120C     		lsrs	r2, r2, #16
 6667 002a 02F0FE05 		and	r5, r2, #254
 6668              	.LVL548:
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 6669              		.loc 1 3791 0
 6670 002e 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/cciXgPzD.s 			page 221


 6671 0030 C2F30902 		ubfx	r2, r2, #0, #10
 6672              	.LVL549:
3792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6673              		.loc 1 3792 0
 6674 0034 DF68     		ldr	r7, [r3, #12]
 6675 0036 07F0FE07 		and	r7, r7, #254
 6676              	.LVL550:
3795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6677              		.loc 1 3795 0
 6678 003a C168     		ldr	r1, [r0, #12]
 6679              	.LVL551:
 6680 003c 0229     		cmp	r1, #2
 6681 003e 21D1     		bne	.L518
3797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6682              		.loc 1 3797 0
 6683 0040 85EAD215 		eor	r5, r5, r2, lsr #7
 6684              	.LVL552:
 6685 0044 15F0060F 		tst	r5, #6
 6686 0048 10D1     		bne	.L519
 6687              	.LVL553:
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
 6688              		.loc 1 3800 0
 6689 004a 816C     		ldr	r1, [r0, #72]
 6690 004c 0131     		adds	r1, r1, #1
 6691 004e 8164     		str	r1, [r0, #72]
3801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6692              		.loc 1 3801 0
 6693 0050 816C     		ldr	r1, [r0, #72]
 6694 0052 0229     		cmp	r1, #2
 6695 0054 E1D1     		bne	.L516
3804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6696              		.loc 1 3804 0
 6697 0056 0021     		movs	r1, #0
 6698 0058 8164     		str	r1, [r0, #72]
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6699              		.loc 1 3807 0
 6700 005a 0820     		movs	r0, #8
 6701              	.LVL554:
 6702 005c D861     		str	r0, [r3, #28]
3810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6703              		.loc 1 3810 0
 6704 005e 84F84010 		strb	r1, [r4, #64]
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 6705              		.loc 1 3813 0
 6706 0062 3146     		mov	r1, r6
 6707 0064 2046     		mov	r0, r4
 6708 0066 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 6709              	.LVL555:
 6710 006a D6E7     		b	.L516
 6711              	.LVL556:
 6712              	.L519:
3821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6713              		.loc 1 3821 0
 6714 006c 0421     		movs	r1, #4
 6715 006e FFF7FEFF 		bl	I2C_Disable_IRQ
 6716              	.LVL557:
3824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 222


 6717              		.loc 1 3824 0
 6718 0072 0023     		movs	r3, #0
 6719 0074 84F84030 		strb	r3, [r4, #64]
3827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6720              		.loc 1 3827 0
 6721 0078 3A46     		mov	r2, r7
 6722 007a 3146     		mov	r1, r6
 6723 007c 2046     		mov	r0, r4
 6724 007e FFF7FEFF 		bl	HAL_I2C_AddrCallback
 6725              	.LVL558:
 6726 0082 CAE7     		b	.L516
 6727              	.LVL559:
 6728              	.L518:
3834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6729              		.loc 1 3834 0
 6730 0084 0421     		movs	r1, #4
 6731 0086 FFF7FEFF 		bl	I2C_Disable_IRQ
 6732              	.LVL560:
3837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6733              		.loc 1 3837 0
 6734 008a 0023     		movs	r3, #0
 6735 008c 84F84030 		strb	r3, [r4, #64]
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6736              		.loc 1 3840 0
 6737 0090 2A46     		mov	r2, r5
 6738 0092 3146     		mov	r1, r6
 6739 0094 2046     		mov	r0, r4
 6740 0096 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 6741              	.LVL561:
 6742 009a BEE7     		b	.L516
 6743              		.cfi_endproc
 6744              	.LFE189:
 6746              		.section	.text.HAL_I2C_ListenCpltCallback,"ax",%progbits
 6747              		.align	1
 6748              		.weak	HAL_I2C_ListenCpltCallback
 6749              		.syntax unified
 6750              		.thumb
 6751              		.thumb_func
 6752              		.fpu fpv5-d16
 6754              	HAL_I2C_ListenCpltCallback:
 6755              	.LFB175:
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 6756              		.loc 1 3124 0
 6757              		.cfi_startproc
 6758              		@ args = 0, pretend = 0, frame = 0
 6759              		@ frame_needed = 0, uses_anonymous_args = 0
 6760              		@ link register save eliminated.
 6761              	.LVL562:
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6762              		.loc 1 3131 0
 6763 0000 7047     		bx	lr
 6764              		.cfi_endproc
 6765              	.LFE175:
 6767              		.section	.text.I2C_ITListenCplt,"ax",%progbits
 6768              		.align	1
 6769              		.syntax unified
 6770              		.thumb
ARM GAS  /tmp/cciXgPzD.s 			page 223


 6771              		.thumb_func
 6772              		.fpu fpv5-d16
 6774              	I2C_ITListenCplt:
 6775              	.LFB194:
4147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
 6776              		.loc 1 4147 0
 6777              		.cfi_startproc
 6778              		@ args = 0, pretend = 0, frame = 0
 6779              		@ frame_needed = 0, uses_anonymous_args = 0
 6780              	.LVL563:
 6781 0000 10B5     		push	{r4, lr}
 6782              	.LCFI108:
 6783              		.cfi_def_cfa_offset 8
 6784              		.cfi_offset 4, -8
 6785              		.cfi_offset 14, -4
 6786 0002 0446     		mov	r4, r0
4149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 6787              		.loc 1 4149 0
 6788 0004 164B     		ldr	r3, .L527
 6789 0006 C362     		str	r3, [r0, #44]
4150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 6790              		.loc 1 4150 0
 6791 0008 0023     		movs	r3, #0
 6792 000a 0363     		str	r3, [r0, #48]
4151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 6793              		.loc 1 4151 0
 6794 000c 2022     		movs	r2, #32
 6795 000e 80F84120 		strb	r2, [r0, #65]
4152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 6796              		.loc 1 4152 0
 6797 0012 80F84230 		strb	r3, [r0, #66]
4153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6798              		.loc 1 4153 0
 6799 0016 4363     		str	r3, [r0, #52]
4156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6800              		.loc 1 4156 0
 6801 0018 11F0040F 		tst	r1, #4
 6802 001c 11D0     		beq	.L525
4159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6803              		.loc 1 4159 0
 6804 001e 0368     		ldr	r3, [r0]
 6805 0020 5A6A     		ldr	r2, [r3, #36]
 6806 0022 436A     		ldr	r3, [r0, #36]
 6807 0024 591C     		adds	r1, r3, #1
 6808              	.LVL564:
 6809 0026 4162     		str	r1, [r0, #36]
 6810 0028 1A70     		strb	r2, [r3]
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6811              		.loc 1 4161 0
 6812 002a 038D     		ldrh	r3, [r0, #40]
 6813 002c 4BB1     		cbz	r3, .L525
4163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 6814              		.loc 1 4163 0
 6815 002e 013B     		subs	r3, r3, #1
 6816 0030 0385     		strh	r3, [r0, #40]	@ movhi
4164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6817              		.loc 1 4164 0
ARM GAS  /tmp/cciXgPzD.s 			page 224


 6818 0032 438D     		ldrh	r3, [r0, #42]
 6819 0034 013B     		subs	r3, r3, #1
 6820 0036 9BB2     		uxth	r3, r3
 6821 0038 4385     		strh	r3, [r0, #42]	@ movhi
4167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6822              		.loc 1 4167 0
 6823 003a 436C     		ldr	r3, [r0, #68]
 6824 003c 43F00403 		orr	r3, r3, #4
 6825 0040 4364     		str	r3, [r0, #68]
 6826              	.L525:
4172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6827              		.loc 1 4172 0
 6828 0042 0721     		movs	r1, #7
 6829 0044 2046     		mov	r0, r4
 6830              	.LVL565:
 6831 0046 FFF7FEFF 		bl	I2C_Disable_IRQ
 6832              	.LVL566:
4175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6833              		.loc 1 4175 0
 6834 004a 2368     		ldr	r3, [r4]
 6835 004c 1022     		movs	r2, #16
 6836 004e DA61     		str	r2, [r3, #28]
4178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6837              		.loc 1 4178 0
 6838 0050 0023     		movs	r3, #0
 6839 0052 84F84030 		strb	r3, [r4, #64]
4181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 6840              		.loc 1 4181 0
 6841 0056 2046     		mov	r0, r4
 6842 0058 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 6843              	.LVL567:
4182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6844              		.loc 1 4182 0
 6845 005c 10BD     		pop	{r4, pc}
 6846              	.LVL568:
 6847              	.L528:
 6848 005e 00BF     		.align	2
 6849              	.L527:
 6850 0060 0000FFFF 		.word	-65536
 6851              		.cfi_endproc
 6852              	.LFE194:
 6854              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
 6855              		.align	1
 6856              		.weak	HAL_I2C_MemTxCpltCallback
 6857              		.syntax unified
 6858              		.thumb
 6859              		.thumb_func
 6860              		.fpu fpv5-d16
 6862              	HAL_I2C_MemTxCpltCallback:
 6863              	.LFB176:
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 6864              		.loc 1 3140 0
 6865              		.cfi_startproc
 6866              		@ args = 0, pretend = 0, frame = 0
 6867              		@ frame_needed = 0, uses_anonymous_args = 0
 6868              		@ link register save eliminated.
 6869              	.LVL569:
ARM GAS  /tmp/cciXgPzD.s 			page 225


3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6870              		.loc 1 3147 0
 6871 0000 7047     		bx	lr
 6872              		.cfi_endproc
 6873              	.LFE176:
 6875              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 6876              		.align	1
 6877              		.weak	HAL_I2C_MemRxCpltCallback
 6878              		.syntax unified
 6879              		.thumb
 6880              		.thumb_func
 6881              		.fpu fpv5-d16
 6883              	HAL_I2C_MemRxCpltCallback:
 6884              	.LFB177:
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 6885              		.loc 1 3156 0
 6886              		.cfi_startproc
 6887              		@ args = 0, pretend = 0, frame = 0
 6888              		@ frame_needed = 0, uses_anonymous_args = 0
 6889              		@ link register save eliminated.
 6890              	.LVL570:
3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6891              		.loc 1 3163 0
 6892 0000 7047     		bx	lr
 6893              		.cfi_endproc
 6894              	.LFE177:
 6896              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 6897              		.align	1
 6898              		.weak	HAL_I2C_ErrorCallback
 6899              		.syntax unified
 6900              		.thumb
 6901              		.thumb_func
 6902              		.fpu fpv5-d16
 6904              	HAL_I2C_ErrorCallback:
 6905              	.LFB178:
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 6906              		.loc 1 3172 0
 6907              		.cfi_startproc
 6908              		@ args = 0, pretend = 0, frame = 0
 6909              		@ frame_needed = 0, uses_anonymous_args = 0
 6910              		@ link register save eliminated.
 6911              	.LVL571:
3179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6912              		.loc 1 3179 0
 6913 0000 7047     		bx	lr
 6914              		.cfi_endproc
 6915              	.LFE178:
 6917              		.section	.text.HAL_I2C_AbortCpltCallback,"ax",%progbits
 6918              		.align	1
 6919              		.weak	HAL_I2C_AbortCpltCallback
 6920              		.syntax unified
 6921              		.thumb
 6922              		.thumb_func
 6923              		.fpu fpv5-d16
 6925              	HAL_I2C_AbortCpltCallback:
 6926              	.LFB179:
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/cciXgPzD.s 			page 226


 6927              		.loc 1 3188 0
 6928              		.cfi_startproc
 6929              		@ args = 0, pretend = 0, frame = 0
 6930              		@ frame_needed = 0, uses_anonymous_args = 0
 6931              		@ link register save eliminated.
 6932              	.LVL572:
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6933              		.loc 1 3195 0
 6934 0000 7047     		bx	lr
 6935              		.cfi_endproc
 6936              	.LFE179:
 6938              		.section	.text.I2C_ITError,"ax",%progbits
 6939              		.align	1
 6940              		.syntax unified
 6941              		.thumb
 6942              		.thumb_func
 6943              		.fpu fpv5-d16
 6945              	I2C_ITError:
 6946              	.LFB195:
4191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
 6947              		.loc 1 4191 0
 6948              		.cfi_startproc
 6949              		@ args = 0, pretend = 0, frame = 0
 6950              		@ frame_needed = 0, uses_anonymous_args = 0
 6951              	.LVL573:
 6952 0000 10B5     		push	{r4, lr}
 6953              	.LCFI109:
 6954              		.cfi_def_cfa_offset 8
 6955              		.cfi_offset 4, -8
 6956              		.cfi_offset 14, -4
 6957 0002 0446     		mov	r4, r0
4193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 6958              		.loc 1 4193 0
 6959 0004 0023     		movs	r3, #0
 6960 0006 80F84230 		strb	r3, [r0, #66]
4194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
 6961              		.loc 1 4194 0
 6962 000a 3A4A     		ldr	r2, .L546
 6963 000c C262     		str	r2, [r0, #44]
4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6964              		.loc 1 4195 0
 6965 000e 4385     		strh	r3, [r0, #42]	@ movhi
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6966              		.loc 1 4198 0
 6967 0010 436C     		ldr	r3, [r0, #68]
 6968 0012 1943     		orrs	r1, r1, r3
 6969              	.LVL574:
 6970 0014 4164     		str	r1, [r0, #68]
4201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 6971              		.loc 1 4201 0
 6972 0016 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6973 001a DBB2     		uxtb	r3, r3
 6974 001c 282B     		cmp	r3, #40
 6975 001e 09D0     		beq	.L534
4202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN))
 6976              		.loc 1 4202 0 discriminator 1
 6977 0020 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
ARM GAS  /tmp/cciXgPzD.s 			page 227


 6978 0024 DBB2     		uxtb	r3, r3
4201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 6979              		.loc 1 4201 0 discriminator 1
 6980 0026 292B     		cmp	r3, #41
 6981 0028 04D0     		beq	.L534
4203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6982              		.loc 1 4203 0
 6983 002a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6984 002e DBB2     		uxtb	r3, r3
4202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN))
 6985              		.loc 1 4202 0
 6986 0030 2A2B     		cmp	r3, #42
 6987 0032 1FD1     		bne	.L535
 6988              	.L534:
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6989              		.loc 1 4206 0
 6990 0034 0321     		movs	r1, #3
 6991 0036 2046     		mov	r0, r4
 6992              	.LVL575:
 6993 0038 FFF7FEFF 		bl	I2C_Disable_IRQ
 6994              	.LVL576:
4209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 6995              		.loc 1 4209 0
 6996 003c 2823     		movs	r3, #40
 6997 003e 84F84130 		strb	r3, [r4, #65]
4210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
 6998              		.loc 1 4210 0
 6999 0042 0023     		movs	r3, #0
 7000 0044 2363     		str	r3, [r4, #48]
4211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7001              		.loc 1 4211 0
 7002 0046 2C4B     		ldr	r3, .L546+4
 7003 0048 6363     		str	r3, [r4, #52]
 7004              	.L536:
4230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7005              		.loc 1 4230 0
 7006 004a 2368     		ldr	r3, [r4]
 7007 004c 1A68     		ldr	r2, [r3]
 7008 004e 12F4804F 		tst	r2, #16384
 7009 0052 1ED1     		bne	.L543
4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7010              		.loc 1 4249 0
 7011 0054 1A68     		ldr	r2, [r3]
 7012 0056 12F4004F 		tst	r2, #32768
 7013 005a 2DD1     		bne	.L544
4267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7014              		.loc 1 4267 0
 7015 005c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7016 0060 DBB2     		uxtb	r3, r3
 7017 0062 602B     		cmp	r3, #96
 7018 0064 3BD0     		beq	.L545
4280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7019              		.loc 1 4280 0
 7020 0066 0023     		movs	r3, #0
 7021 0068 84F84030 		strb	r3, [r4, #64]
4283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7022              		.loc 1 4283 0
ARM GAS  /tmp/cciXgPzD.s 			page 228


 7023 006c 2046     		mov	r0, r4
 7024 006e FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 7025              	.LVL577:
 7026              	.L533:
4285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7027              		.loc 1 4285 0
 7028 0072 10BD     		pop	{r4, pc}
 7029              	.LVL578:
 7030              	.L535:
4216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7031              		.loc 1 4216 0
 7032 0074 0721     		movs	r1, #7
 7033 0076 FFF7FEFF 		bl	I2C_Disable_IRQ
 7034              	.LVL579:
4220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7035              		.loc 1 4220 0
 7036 007a 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7037 007e DBB2     		uxtb	r3, r3
 7038 0080 602B     		cmp	r3, #96
 7039 0082 02D0     		beq	.L537
4223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7040              		.loc 1 4223 0
 7041 0084 2023     		movs	r3, #32
 7042 0086 84F84130 		strb	r3, [r4, #65]
 7043              	.L537:
4225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7044              		.loc 1 4225 0
 7045 008a 0023     		movs	r3, #0
 7046 008c 2363     		str	r3, [r4, #48]
4226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7047              		.loc 1 4226 0
 7048 008e 6363     		str	r3, [r4, #52]
 7049 0090 DBE7     		b	.L536
 7050              	.L543:
4232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7051              		.loc 1 4232 0
 7052 0092 1A68     		ldr	r2, [r3]
 7053 0094 22F48042 		bic	r2, r2, #16384
 7054 0098 1A60     		str	r2, [r3]
4236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7055              		.loc 1 4236 0
 7056 009a A36B     		ldr	r3, [r4, #56]
 7057 009c 174A     		ldr	r2, .L546+8
 7058 009e 1A65     		str	r2, [r3, #80]
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7059              		.loc 1 4239 0
 7060 00a0 0023     		movs	r3, #0
 7061 00a2 84F84030 		strb	r3, [r4, #64]
4242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7062              		.loc 1 4242 0
 7063 00a6 A06B     		ldr	r0, [r4, #56]
 7064 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7065              	.LVL580:
 7066 00ac 0028     		cmp	r0, #0
 7067 00ae E0D0     		beq	.L533
4245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7068              		.loc 1 4245 0
ARM GAS  /tmp/cciXgPzD.s 			page 229


 7069 00b0 A06B     		ldr	r0, [r4, #56]
 7070 00b2 036D     		ldr	r3, [r0, #80]
 7071 00b4 9847     		blx	r3
 7072              	.LVL581:
 7073 00b6 DCE7     		b	.L533
 7074              	.L544:
4251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7075              		.loc 1 4251 0
 7076 00b8 1A68     		ldr	r2, [r3]
 7077 00ba 22F40042 		bic	r2, r2, #32768
 7078 00be 1A60     		str	r2, [r3]
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7079              		.loc 1 4255 0
 7080 00c0 E36B     		ldr	r3, [r4, #60]
 7081 00c2 0E4A     		ldr	r2, .L546+8
 7082 00c4 1A65     		str	r2, [r3, #80]
4258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7083              		.loc 1 4258 0
 7084 00c6 0023     		movs	r3, #0
 7085 00c8 84F84030 		strb	r3, [r4, #64]
4261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7086              		.loc 1 4261 0
 7087 00cc E06B     		ldr	r0, [r4, #60]
 7088 00ce FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7089              	.LVL582:
 7090 00d2 0028     		cmp	r0, #0
 7091 00d4 CDD0     		beq	.L533
4264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7092              		.loc 1 4264 0
 7093 00d6 E06B     		ldr	r0, [r4, #60]
 7094 00d8 036D     		ldr	r3, [r0, #80]
 7095 00da 9847     		blx	r3
 7096              	.LVL583:
 7097 00dc C9E7     		b	.L533
 7098              	.L545:
4269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7099              		.loc 1 4269 0
 7100 00de 2023     		movs	r3, #32
 7101 00e0 84F84130 		strb	r3, [r4, #65]
4272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7102              		.loc 1 4272 0
 7103 00e4 0023     		movs	r3, #0
 7104 00e6 84F84030 		strb	r3, [r4, #64]
4275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7105              		.loc 1 4275 0
 7106 00ea 2046     		mov	r0, r4
 7107 00ec FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 7108              	.LVL584:
 7109 00f0 BFE7     		b	.L533
 7110              	.L547:
 7111 00f2 00BF     		.align	2
 7112              	.L546:
 7113 00f4 0000FFFF 		.word	-65536
 7114 00f8 00000000 		.word	I2C_Slave_ISR_IT
 7115 00fc 00000000 		.word	I2C_DMAAbort
 7116              		.cfi_endproc
 7117              	.LFE195:
ARM GAS  /tmp/cciXgPzD.s 			page 230


 7119              		.section	.text.I2C_ITSlaveCplt,"ax",%progbits
 7120              		.align	1
 7121              		.syntax unified
 7122              		.thumb
 7123              		.thumb_func
 7124              		.fpu fpv5-d16
 7126              	I2C_ITSlaveCplt:
 7127              	.LFB193:
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
 7128              		.loc 1 4041 0
 7129              		.cfi_startproc
 7130              		@ args = 0, pretend = 0, frame = 0
 7131              		@ frame_needed = 0, uses_anonymous_args = 0
 7132              	.LVL585:
 7133 0000 38B5     		push	{r3, r4, r5, lr}
 7134              	.LCFI110:
 7135              		.cfi_def_cfa_offset 16
 7136              		.cfi_offset 3, -16
 7137              		.cfi_offset 4, -12
 7138              		.cfi_offset 5, -8
 7139              		.cfi_offset 14, -4
 7140 0002 0446     		mov	r4, r0
 7141 0004 0D46     		mov	r5, r1
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7142              		.loc 1 4043 0
 7143 0006 0368     		ldr	r3, [r0]
 7144 0008 2022     		movs	r2, #32
 7145 000a DA61     		str	r2, [r3, #28]
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7146              		.loc 1 4046 0
 7147 000c 0368     		ldr	r3, [r0]
 7148 000e 0822     		movs	r2, #8
 7149 0010 DA61     		str	r2, [r3, #28]
4049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7150              		.loc 1 4049 0
 7151 0012 0721     		movs	r1, #7
 7152              	.LVL586:
 7153 0014 FFF7FEFF 		bl	I2C_Disable_IRQ
 7154              	.LVL587:
4052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7155              		.loc 1 4052 0
 7156 0018 2268     		ldr	r2, [r4]
 7157 001a 5368     		ldr	r3, [r2, #4]
 7158 001c 43F40043 		orr	r3, r3, #32768
 7159 0020 5360     		str	r3, [r2, #4]
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7160              		.loc 1 4055 0
 7161 0022 2268     		ldr	r2, [r4]
 7162 0024 5368     		ldr	r3, [r2, #4]
 7163 0026 23F0FF73 		bic	r3, r3, #33423360
 7164 002a 23F48B33 		bic	r3, r3, #71168
 7165 002e 23F4FF73 		bic	r3, r3, #510
 7166 0032 23F00103 		bic	r3, r3, #1
 7167 0036 5360     		str	r3, [r2, #4]
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7168              		.loc 1 4058 0
 7169 0038 2046     		mov	r0, r4
ARM GAS  /tmp/cciXgPzD.s 			page 231


 7170 003a FFF7FEFF 		bl	I2C_Flush_TXDR
 7171              	.LVL588:
4061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN))
 7172              		.loc 1 4061 0
 7173 003e 2268     		ldr	r2, [r4]
 7174 0040 1368     		ldr	r3, [r2]
 7175 0042 13F4804F 		tst	r3, #16384
 7176 0046 03D1     		bne	.L549
4062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7177              		.loc 1 4062 0 discriminator 1
 7178 0048 1368     		ldr	r3, [r2]
4061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN))
 7179              		.loc 1 4061 0 discriminator 1
 7180 004a 13F4004F 		tst	r3, #32768
 7181 004e 09D0     		beq	.L550
 7182              	.L549:
4064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7183              		.loc 1 4064 0
 7184 0050 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7185 0054 DBB2     		uxtb	r3, r3
 7186 0056 212B     		cmp	r3, #33
 7187 0058 39D0     		beq	.L560
4064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7188              		.loc 1 4064 0 is_stmt 0 discriminator 2
 7189 005a E36B     		ldr	r3, [r4, #60]
 7190 005c 1B68     		ldr	r3, [r3]
 7191 005e 5B68     		ldr	r3, [r3, #4]
 7192 0060 9BB2     		uxth	r3, r3
 7193              	.L552:
4064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7194              		.loc 1 4064 0 discriminator 4
 7195 0062 6385     		strh	r3, [r4, #42]	@ movhi
 7196              	.L550:
4068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7197              		.loc 1 4068 0 is_stmt 1
 7198 0064 638D     		ldrh	r3, [r4, #42]
 7199 0066 9BB2     		uxth	r3, r3
 7200 0068 1BB1     		cbz	r3, .L553
4071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7201              		.loc 1 4071 0
 7202 006a 636C     		ldr	r3, [r4, #68]
 7203 006c 43F00403 		orr	r3, r3, #4
 7204 0070 6364     		str	r3, [r4, #68]
 7205              	.L553:
4075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7206              		.loc 1 4075 0
 7207 0072 15F0040F 		tst	r5, #4
 7208 0076 10D0     		beq	.L554
4078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7209              		.loc 1 4078 0
 7210 0078 526A     		ldr	r2, [r2, #36]
 7211 007a 636A     		ldr	r3, [r4, #36]
 7212 007c 591C     		adds	r1, r3, #1
 7213 007e 6162     		str	r1, [r4, #36]
 7214 0080 1A70     		strb	r2, [r3]
4080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7215              		.loc 1 4080 0
ARM GAS  /tmp/cciXgPzD.s 			page 232


 7216 0082 238D     		ldrh	r3, [r4, #40]
 7217 0084 4BB1     		cbz	r3, .L554
4082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 7218              		.loc 1 4082 0
 7219 0086 013B     		subs	r3, r3, #1
 7220 0088 2385     		strh	r3, [r4, #40]	@ movhi
4083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7221              		.loc 1 4083 0
 7222 008a 638D     		ldrh	r3, [r4, #42]
 7223 008c 013B     		subs	r3, r3, #1
 7224 008e 9BB2     		uxth	r3, r3
 7225 0090 6385     		strh	r3, [r4, #42]	@ movhi
4086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7226              		.loc 1 4086 0
 7227 0092 636C     		ldr	r3, [r4, #68]
 7228 0094 43F00403 		orr	r3, r3, #4
 7229 0098 6364     		str	r3, [r4, #68]
 7230              	.L554:
4090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 7231              		.loc 1 4090 0
 7232 009a 0023     		movs	r3, #0
 7233 009c 2363     		str	r3, [r4, #48]
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 7234              		.loc 1 4091 0
 7235 009e 84F84230 		strb	r3, [r4, #66]
4092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7236              		.loc 1 4092 0
 7237 00a2 6363     		str	r3, [r4, #52]
4094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7238              		.loc 1 4094 0
 7239 00a4 636C     		ldr	r3, [r4, #68]
 7240 00a6 BBB9     		cbnz	r3, .L561
4106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7241              		.loc 1 4106 0
 7242 00a8 E36A     		ldr	r3, [r4, #44]
 7243 00aa 13F5803F 		cmn	r3, #65536
 7244 00ae 21D1     		bne	.L562
4118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7245              		.loc 1 4118 0
 7246 00b0 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7247 00b4 DBB2     		uxtb	r3, r3
 7248 00b6 222B     		cmp	r3, #34
 7249 00b8 28D0     		beq	.L563
4130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7250              		.loc 1 4130 0
 7251 00ba 2023     		movs	r3, #32
 7252 00bc 84F84130 		strb	r3, [r4, #65]
4133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7253              		.loc 1 4133 0
 7254 00c0 0023     		movs	r3, #0
 7255 00c2 84F84030 		strb	r3, [r4, #64]
4136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7256              		.loc 1 4136 0
 7257 00c6 2046     		mov	r0, r4
 7258 00c8 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 7259              	.LVL589:
4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 233


 7260              		.loc 1 4138 0
 7261 00cc 1DE0     		b	.L548
 7262              	.L560:
4064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7263              		.loc 1 4064 0 discriminator 1
 7264 00ce A36B     		ldr	r3, [r4, #56]
 7265 00d0 1B68     		ldr	r3, [r3]
 7266 00d2 5B68     		ldr	r3, [r3, #4]
 7267 00d4 9BB2     		uxth	r3, r3
 7268 00d6 C4E7     		b	.L552
 7269              	.L561:
4097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7270              		.loc 1 4097 0
 7271 00d8 616C     		ldr	r1, [r4, #68]
 7272 00da 2046     		mov	r0, r4
 7273 00dc FFF7FEFF 		bl	I2C_ITError
 7274              	.LVL590:
4100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7275              		.loc 1 4100 0
 7276 00e0 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7277 00e4 DBB2     		uxtb	r3, r3
 7278 00e6 282B     		cmp	r3, #40
 7279 00e8 0FD1     		bne	.L548
4103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7280              		.loc 1 4103 0
 7281 00ea 2946     		mov	r1, r5
 7282 00ec 2046     		mov	r0, r4
 7283 00ee FFF7FEFF 		bl	I2C_ITListenCplt
 7284              	.LVL591:
 7285 00f2 0AE0     		b	.L548
 7286              	.L562:
4108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7287              		.loc 1 4108 0
 7288 00f4 0A4B     		ldr	r3, .L564
 7289 00f6 E362     		str	r3, [r4, #44]
4109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7290              		.loc 1 4109 0
 7291 00f8 2023     		movs	r3, #32
 7292 00fa 84F84130 		strb	r3, [r4, #65]
4112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7293              		.loc 1 4112 0
 7294 00fe 0023     		movs	r3, #0
 7295 0100 84F84030 		strb	r3, [r4, #64]
4115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7296              		.loc 1 4115 0
 7297 0104 2046     		mov	r0, r4
 7298 0106 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 7299              	.LVL592:
 7300              	.L548:
4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7301              		.loc 1 4138 0
 7302 010a 38BD     		pop	{r3, r4, r5, pc}
 7303              	.LVL593:
 7304              	.L563:
4120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7305              		.loc 1 4120 0
 7306 010c 2023     		movs	r3, #32
ARM GAS  /tmp/cciXgPzD.s 			page 234


 7307 010e 84F84130 		strb	r3, [r4, #65]
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7308              		.loc 1 4123 0
 7309 0112 0023     		movs	r3, #0
 7310 0114 84F84030 		strb	r3, [r4, #64]
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7311              		.loc 1 4126 0
 7312 0118 2046     		mov	r0, r4
 7313 011a FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 7314              	.LVL594:
 7315 011e F4E7     		b	.L548
 7316              	.L565:
 7317              		.align	2
 7318              	.L564:
 7319 0120 0000FFFF 		.word	-65536
 7320              		.cfi_endproc
 7321              	.LFE193:
 7323              		.section	.text.I2C_Slave_ISR_IT,"ax",%progbits
 7324              		.align	1
 7325              		.syntax unified
 7326              		.thumb
 7327              		.thumb_func
 7328              		.fpu fpv5-d16
 7330              	I2C_Slave_ISR_IT:
 7331              	.LFB184:
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 7332              		.loc 1 3392 0
 7333              		.cfi_startproc
 7334              		@ args = 0, pretend = 0, frame = 0
 7335              		@ frame_needed = 0, uses_anonymous_args = 0
 7336              	.LVL595:
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7337              		.loc 1 3394 0
 7338 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7339 0004 012B     		cmp	r3, #1
 7340 0006 00F09E80 		beq	.L580
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 7341              		.loc 1 3392 0 discriminator 2
 7342 000a 70B5     		push	{r4, r5, r6, lr}
 7343              	.LCFI111:
 7344              		.cfi_def_cfa_offset 16
 7345              		.cfi_offset 4, -16
 7346              		.cfi_offset 5, -12
 7347              		.cfi_offset 6, -8
 7348              		.cfi_offset 14, -4
 7349 000c 1646     		mov	r6, r2
 7350 000e 0D46     		mov	r5, r1
 7351 0010 0446     		mov	r4, r0
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7352              		.loc 1 3394 0 discriminator 2
 7353 0012 0123     		movs	r3, #1
 7354 0014 80F84030 		strb	r3, [r0, #64]
3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7355              		.loc 1 3396 0 discriminator 2
 7356 0018 11F0100F 		tst	r1, #16
 7357 001c 3FD0     		beq	.L568
3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cciXgPzD.s 			page 235


 7358              		.loc 1 3396 0 is_stmt 0 discriminator 1
 7359 001e 12F0100F 		tst	r2, #16
 7360 0022 3CD0     		beq	.L568
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7361              		.loc 1 3402 0 is_stmt 1
 7362 0024 438D     		ldrh	r3, [r0, #42]
 7363 0026 9BB2     		uxth	r3, r3
 7364 0028 43BB     		cbnz	r3, .L569
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           (hi2c->State == HAL_I2C_STATE_LISTEN))
 7365              		.loc 1 3404 0
 7366 002a C36A     		ldr	r3, [r0, #44]
 7367 002c B3F1007F 		cmp	r3, #33554432
 7368 0030 03D0     		beq	.L570
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           (hi2c->State == HAL_I2C_STATE_LISTEN))
 7369              		.loc 1 3404 0 is_stmt 0 discriminator 2
 7370 0032 C36A     		ldr	r3, [r0, #44]
 7371 0034 B3F1007F 		cmp	r3, #33554432
 7372 0038 04D1     		bne	.L571
 7373              	.L570:
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7374              		.loc 1 3405 0 is_stmt 1 discriminator 3
 7375 003a 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7376 003e DBB2     		uxtb	r3, r3
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           (hi2c->State == HAL_I2C_STATE_LISTEN))
 7377              		.loc 1 3404 0 discriminator 3
 7378 0040 282B     		cmp	r3, #40
 7379 0042 0CD0     		beq	.L585
 7380              	.L571:
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7381              		.loc 1 3410 0
 7382 0044 E36A     		ldr	r3, [r4, #44]
 7383 0046 13F5803F 		cmn	r3, #65536
 7384 004a 04D0     		beq	.L573
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7385              		.loc 1 3410 0 is_stmt 0 discriminator 1
 7386 004c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7387 0050 DBB2     		uxtb	r3, r3
 7388 0052 292B     		cmp	r3, #41
 7389 0054 08D0     		beq	.L586
 7390              	.L573:
3425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 7391              		.loc 1 3425 0 is_stmt 1
 7392 0056 2368     		ldr	r3, [r4]
 7393 0058 1022     		movs	r2, #16
 7394              	.LVL596:
 7395 005a DA61     		str	r2, [r3, #28]
 7396 005c 15E0     		b	.L572
 7397              	.LVL597:
 7398              	.L585:
3408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 7399              		.loc 1 3408 0
 7400 005e 2946     		mov	r1, r5
 7401              	.LVL598:
 7402 0060 2046     		mov	r0, r4
 7403              	.LVL599:
 7404 0062 FFF7FEFF 		bl	I2C_ITListenCplt
 7405              	.LVL600:
ARM GAS  /tmp/cciXgPzD.s 			page 236


 7406 0066 10E0     		b	.L572
 7407              	.LVL601:
 7408              	.L586:
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7409              		.loc 1 3413 0
 7410 0068 2368     		ldr	r3, [r4]
 7411 006a 1022     		movs	r2, #16
 7412              	.LVL602:
 7413 006c DA61     		str	r2, [r3, #28]
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7414              		.loc 1 3416 0
 7415 006e 2046     		mov	r0, r4
 7416              	.LVL603:
 7417 0070 FFF7FEFF 		bl	I2C_Flush_TXDR
 7418              	.LVL604:
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 7419              		.loc 1 3420 0
 7420 0074 2046     		mov	r0, r4
 7421 0076 FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
 7422              	.LVL605:
 7423 007a 06E0     		b	.L572
 7424              	.LVL606:
 7425              	.L569:
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7426              		.loc 1 3432 0
 7427 007c 0368     		ldr	r3, [r0]
 7428 007e 1022     		movs	r2, #16
 7429              	.LVL607:
 7430 0080 DA61     		str	r2, [r3, #28]
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7431              		.loc 1 3435 0
 7432 0082 436C     		ldr	r3, [r0, #68]
 7433 0084 43F00403 		orr	r3, r3, #4
 7434 0088 4364     		str	r3, [r0, #68]
 7435              	.LVL608:
 7436              	.L572:
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7437              		.loc 1 3484 0
 7438 008a 15F0200F 		tst	r5, #32
 7439 008e 02D0     		beq	.L579
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7440              		.loc 1 3484 0 is_stmt 0 discriminator 1
 7441 0090 16F0200F 		tst	r6, #32
 7442 0094 52D1     		bne	.L587
 7443              	.L579:
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7444              		.loc 1 3491 0 is_stmt 1
 7445 0096 0020     		movs	r0, #0
 7446 0098 84F84000 		strb	r0, [r4, #64]
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7447              		.loc 1 3494 0
 7448 009c 70BD     		pop	{r4, r5, r6, pc}
 7449              	.LVL609:
 7450              	.L568:
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7451              		.loc 1 3438 0
 7452 009e 15F0040F 		tst	r5, #4
ARM GAS  /tmp/cciXgPzD.s 			page 237


 7453 00a2 1ED0     		beq	.L574
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7454              		.loc 1 3438 0 is_stmt 0 discriminator 1
 7455 00a4 16F0040F 		tst	r6, #4
 7456 00a8 1BD0     		beq	.L574
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7457              		.loc 1 3440 0 is_stmt 1
 7458 00aa 638D     		ldrh	r3, [r4, #42]
 7459 00ac 9BB2     		uxth	r3, r3
 7460 00ae 63B1     		cbz	r3, .L575
3443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 7461              		.loc 1 3443 0
 7462 00b0 2368     		ldr	r3, [r4]
 7463 00b2 5A6A     		ldr	r2, [r3, #36]
 7464              	.LVL610:
 7465 00b4 636A     		ldr	r3, [r4, #36]
 7466 00b6 591C     		adds	r1, r3, #1
 7467              	.LVL611:
 7468 00b8 6162     		str	r1, [r4, #36]
 7469 00ba 1A70     		strb	r2, [r3]
3444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 7470              		.loc 1 3444 0
 7471 00bc 238D     		ldrh	r3, [r4, #40]
 7472 00be 013B     		subs	r3, r3, #1
 7473 00c0 2385     		strh	r3, [r4, #40]	@ movhi
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7474              		.loc 1 3445 0
 7475 00c2 638D     		ldrh	r3, [r4, #42]
 7476 00c4 013B     		subs	r3, r3, #1
 7477 00c6 9BB2     		uxth	r3, r3
 7478 00c8 6385     		strh	r3, [r4, #42]	@ movhi
 7479              	.L575:
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (hi2c->XferOptions != I2C_NO_OPTION_FRAME))
 7480              		.loc 1 3448 0
 7481 00ca 638D     		ldrh	r3, [r4, #42]
 7482 00cc 9BB2     		uxth	r3, r3
 7483 00ce 002B     		cmp	r3, #0
 7484 00d0 DBD1     		bne	.L572
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7485              		.loc 1 3449 0 discriminator 1
 7486 00d2 E36A     		ldr	r3, [r4, #44]
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (hi2c->XferOptions != I2C_NO_OPTION_FRAME))
 7487              		.loc 1 3448 0 discriminator 1
 7488 00d4 13F5803F 		cmn	r3, #65536
 7489 00d8 D7D0     		beq	.L572
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7490              		.loc 1 3452 0
 7491 00da 2046     		mov	r0, r4
 7492              	.LVL612:
 7493 00dc FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
 7494              	.LVL613:
 7495 00e0 D3E7     		b	.L572
 7496              	.LVL614:
 7497              	.L574:
3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7498              		.loc 1 3455 0
 7499 00e2 15F0080F 		tst	r5, #8
ARM GAS  /tmp/cciXgPzD.s 			page 238


 7500 00e6 02D0     		beq	.L576
3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7501              		.loc 1 3455 0 is_stmt 0 discriminator 1
 7502 00e8 16F0080F 		tst	r6, #8
 7503 00ec 16D1     		bne	.L588
 7504              	.L576:
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7505              		.loc 1 3459 0 is_stmt 1
 7506 00ee 15F0020F 		tst	r5, #2
 7507 00f2 CAD0     		beq	.L572
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7508              		.loc 1 3459 0 is_stmt 0 discriminator 1
 7509 00f4 16F0020F 		tst	r6, #2
 7510 00f8 C7D0     		beq	.L572
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7511              		.loc 1 3465 0 is_stmt 1
 7512 00fa 638D     		ldrh	r3, [r4, #42]
 7513 00fc 9BB2     		uxth	r3, r3
 7514 00fe 93B1     		cbz	r3, .L577
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 7515              		.loc 1 3468 0
 7516 0100 636A     		ldr	r3, [r4, #36]
 7517 0102 5A1C     		adds	r2, r3, #1
 7518              	.LVL615:
 7519 0104 6262     		str	r2, [r4, #36]
 7520 0106 2268     		ldr	r2, [r4]
 7521 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7522 010a 9362     		str	r3, [r2, #40]
3469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 7523              		.loc 1 3469 0
 7524 010c 638D     		ldrh	r3, [r4, #42]
 7525 010e 013B     		subs	r3, r3, #1
 7526 0110 9BB2     		uxth	r3, r3
 7527 0112 6385     		strh	r3, [r4, #42]	@ movhi
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7528              		.loc 1 3470 0
 7529 0114 238D     		ldrh	r3, [r4, #40]
 7530 0116 013B     		subs	r3, r3, #1
 7531 0118 2385     		strh	r3, [r4, #40]	@ movhi
 7532 011a B6E7     		b	.L572
 7533              	.LVL616:
 7534              	.L588:
3457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7535              		.loc 1 3457 0
 7536 011c 2946     		mov	r1, r5
 7537              	.LVL617:
 7538 011e 2046     		mov	r0, r4
 7539              	.LVL618:
 7540 0120 FFF7FEFF 		bl	I2C_ITAddrCplt
 7541              	.LVL619:
 7542 0124 B1E7     		b	.L572
 7543              	.LVL620:
 7544              	.L577:
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7545              		.loc 1 3474 0
 7546 0126 E36A     		ldr	r3, [r4, #44]
 7547 0128 B3F1807F 		cmp	r3, #16777216
ARM GAS  /tmp/cciXgPzD.s 			page 239


 7548 012c 02D0     		beq	.L578
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7549              		.loc 1 3474 0 is_stmt 0 discriminator 1
 7550 012e E36A     		ldr	r3, [r4, #44]
 7551 0130 002B     		cmp	r3, #0
 7552 0132 AAD1     		bne	.L572
 7553              	.L578:
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 7554              		.loc 1 3478 0 is_stmt 1
 7555 0134 2046     		mov	r0, r4
 7556              	.LVL621:
 7557 0136 FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
 7558              	.LVL622:
 7559 013a A6E7     		b	.L572
 7560              	.L587:
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7561              		.loc 1 3487 0
 7562 013c 2946     		mov	r1, r5
 7563 013e 2046     		mov	r0, r4
 7564 0140 FFF7FEFF 		bl	I2C_ITSlaveCplt
 7565              	.LVL623:
 7566 0144 A7E7     		b	.L579
 7567              	.LVL624:
 7568              	.L580:
 7569              	.LCFI112:
 7570              		.cfi_def_cfa_offset 0
 7571              		.cfi_restore 4
 7572              		.cfi_restore 5
 7573              		.cfi_restore 6
 7574              		.cfi_restore 14
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7575              		.loc 1 3394 0
 7576 0146 0220     		movs	r0, #2
 7577              	.LVL625:
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7578              		.loc 1 3494 0
 7579 0148 7047     		bx	lr
 7580              		.cfi_endproc
 7581              	.LFE184:
 7583              		.section	.text.I2C_Slave_ISR_DMA,"ax",%progbits
 7584              		.align	1
 7585              		.syntax unified
 7586              		.thumb
 7587              		.thumb_func
 7588              		.fpu fpv5-d16
 7590              	I2C_Slave_ISR_DMA:
 7591              	.LFB186:
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 7592              		.loc 1 3594 0
 7593              		.cfi_startproc
 7594              		@ args = 0, pretend = 0, frame = 0
 7595              		@ frame_needed = 0, uses_anonymous_args = 0
 7596              	.LVL626:
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7597              		.loc 1 3596 0
 7598 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7599 0004 012B     		cmp	r3, #1
ARM GAS  /tmp/cciXgPzD.s 			page 240


 7600 0006 41D0     		beq	.L597
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 7601              		.loc 1 3594 0 discriminator 2
 7602 0008 10B5     		push	{r4, lr}
 7603              	.LCFI113:
 7604              		.cfi_def_cfa_offset 8
 7605              		.cfi_offset 4, -8
 7606              		.cfi_offset 14, -4
 7607 000a 0446     		mov	r4, r0
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7608              		.loc 1 3596 0 discriminator 2
 7609 000c 0123     		movs	r3, #1
 7610 000e 80F84030 		strb	r3, [r0, #64]
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7611              		.loc 1 3598 0 discriminator 2
 7612 0012 11F0100F 		tst	r1, #16
 7613 0016 21D0     		beq	.L591
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7614              		.loc 1 3598 0 is_stmt 0 discriminator 1
 7615 0018 12F0100F 		tst	r2, #16
 7616 001c 1ED0     		beq	.L591
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7617              		.loc 1 3604 0 is_stmt 1
 7618 001e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7619 0022 DBB2     		uxtb	r3, r3
 7620 0024 212B     		cmp	r3, #33
 7621 0026 0AD0     		beq	.L602
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7622              		.loc 1 3604 0 is_stmt 0 discriminator 2
 7623 0028 C36B     		ldr	r3, [r0, #60]
 7624 002a 1B68     		ldr	r3, [r3]
 7625 002c 5B68     		ldr	r3, [r3, #4]
 7626 002e B3FA83F3 		clz	r3, r3
 7627 0032 5B09     		lsrs	r3, r3, #5
 7628              	.L593:
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7629              		.loc 1 3604 0 discriminator 4
 7630 0034 53B1     		cbz	r3, .L594
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7631              		.loc 1 3607 0 is_stmt 1
 7632 0036 2368     		ldr	r3, [r4]
 7633 0038 1022     		movs	r2, #16
 7634              	.LVL627:
 7635 003a DA61     		str	r2, [r3, #28]
 7636 003c 1EE0     		b	.L595
 7637              	.LVL628:
 7638              	.L602:
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7639              		.loc 1 3604 0 discriminator 1
 7640 003e 836B     		ldr	r3, [r0, #56]
 7641 0040 1B68     		ldr	r3, [r3]
 7642 0042 5B68     		ldr	r3, [r3, #4]
 7643 0044 B3FA83F3 		clz	r3, r3
 7644 0048 5B09     		lsrs	r3, r3, #5
 7645 004a F3E7     		b	.L593
 7646              	.L594:
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 241


 7647              		.loc 1 3613 0
 7648 004c 2368     		ldr	r3, [r4]
 7649 004e 1022     		movs	r2, #16
 7650              	.LVL629:
 7651 0050 DA61     		str	r2, [r3, #28]
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7652              		.loc 1 3616 0
 7653 0052 636C     		ldr	r3, [r4, #68]
 7654 0054 43F00403 		orr	r3, r3, #4
 7655 0058 6364     		str	r3, [r4, #68]
 7656 005a 0FE0     		b	.L595
 7657              	.LVL630:
 7658              	.L591:
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7659              		.loc 1 3619 0
 7660 005c 11F0080F 		tst	r1, #8
 7661 0060 06D0     		beq	.L596
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7662              		.loc 1 3619 0 is_stmt 0 discriminator 1
 7663 0062 12F0080F 		tst	r2, #8
 7664 0066 03D0     		beq	.L596
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7665              		.loc 1 3622 0 is_stmt 1
 7666 0068 2368     		ldr	r3, [r4]
 7667 006a 0822     		movs	r2, #8
 7668              	.LVL631:
 7669 006c DA61     		str	r2, [r3, #28]
 7670 006e 05E0     		b	.L595
 7671              	.LVL632:
 7672              	.L596:
3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7673              		.loc 1 3624 0
 7674 0070 11F0200F 		tst	r1, #32
 7675 0074 02D0     		beq	.L595
3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7676              		.loc 1 3624 0 is_stmt 0 discriminator 1
 7677 0076 12F0200F 		tst	r2, #32
 7678 007a 03D1     		bne	.L603
 7679              	.LVL633:
 7680              	.L595:
3631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7681              		.loc 1 3631 0 is_stmt 1
 7682 007c 0020     		movs	r0, #0
 7683 007e 84F84000 		strb	r0, [r4, #64]
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7684              		.loc 1 3634 0
 7685 0082 10BD     		pop	{r4, pc}
 7686              	.LVL634:
 7687              	.L603:
3627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7688              		.loc 1 3627 0
 7689 0084 2046     		mov	r0, r4
 7690              	.LVL635:
 7691 0086 FFF7FEFF 		bl	I2C_ITSlaveCplt
 7692              	.LVL636:
 7693 008a F7E7     		b	.L595
 7694              	.LVL637:
ARM GAS  /tmp/cciXgPzD.s 			page 242


 7695              	.L597:
 7696              	.LCFI114:
 7697              		.cfi_def_cfa_offset 0
 7698              		.cfi_restore 4
 7699              		.cfi_restore 14
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7700              		.loc 1 3596 0
 7701 008c 0220     		movs	r0, #2
 7702              	.LVL638:
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7703              		.loc 1 3634 0
 7704 008e 7047     		bx	lr
 7705              		.cfi_endproc
 7706              	.LFE186:
 7708              		.section	.text.I2C_ITMasterCplt,"ax",%progbits
 7709              		.align	1
 7710              		.syntax unified
 7711              		.thumb
 7712              		.thumb_func
 7713              		.fpu fpv5-d16
 7715              	I2C_ITMasterCplt:
 7716              	.LFB192:
3949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
 7717              		.loc 1 3949 0
 7718              		.cfi_startproc
 7719              		@ args = 0, pretend = 0, frame = 0
 7720              		@ frame_needed = 0, uses_anonymous_args = 0
 7721              	.LVL639:
 7722 0000 10B5     		push	{r4, lr}
 7723              	.LCFI115:
 7724              		.cfi_def_cfa_offset 8
 7725              		.cfi_offset 4, -8
 7726              		.cfi_offset 14, -4
 7727 0002 0446     		mov	r4, r0
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7728              		.loc 1 3951 0
 7729 0004 0368     		ldr	r3, [r0]
 7730 0006 2022     		movs	r2, #32
 7731 0008 DA61     		str	r2, [r3, #28]
3954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7732              		.loc 1 3954 0
 7733 000a 0268     		ldr	r2, [r0]
 7734 000c 5368     		ldr	r3, [r2, #4]
 7735 000e 23F0FF73 		bic	r3, r3, #33423360
 7736 0012 23F48B33 		bic	r3, r3, #71168
 7737 0016 23F4FF73 		bic	r3, r3, #510
 7738 001a 23F00103 		bic	r3, r3, #1
 7739 001e 5360     		str	r3, [r2, #4]
3957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
 7740              		.loc 1 3957 0
 7741 0020 0023     		movs	r3, #0
 7742 0022 0363     		str	r3, [r0, #48]
3958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 7743              		.loc 1 3958 0
 7744 0024 4363     		str	r3, [r0, #52]
3959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7745              		.loc 1 3959 0
ARM GAS  /tmp/cciXgPzD.s 			page 243


 7746 0026 A3F58033 		sub	r3, r3, #65536
 7747 002a C362     		str	r3, [r0, #44]
3961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7748              		.loc 1 3961 0
 7749 002c 11F0100F 		tst	r1, #16
 7750 0030 06D0     		beq	.L605
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7751              		.loc 1 3964 0
 7752 0032 0368     		ldr	r3, [r0]
 7753 0034 1022     		movs	r2, #16
 7754 0036 DA61     		str	r2, [r3, #28]
3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7755              		.loc 1 3967 0
 7756 0038 436C     		ldr	r3, [r0, #68]
 7757 003a 43F00403 		orr	r3, r3, #4
 7758 003e 4364     		str	r3, [r0, #68]
 7759              	.L605:
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7760              		.loc 1 3971 0
 7761 0040 2046     		mov	r0, r4
 7762              	.LVL640:
 7763 0042 FFF7FEFF 		bl	I2C_Flush_TXDR
 7764              	.LVL641:
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7765              		.loc 1 3974 0
 7766 0046 0321     		movs	r1, #3
 7767 0048 2046     		mov	r0, r4
 7768 004a FFF7FEFF 		bl	I2C_Disable_IRQ
 7769              	.LVL642:
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7770              		.loc 1 3977 0
 7771 004e 636C     		ldr	r3, [r4, #68]
 7772 0050 FBB9     		cbnz	r3, .L606
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7773              		.loc 1 3977 0 is_stmt 0 discriminator 1
 7774 0052 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7775 0056 DBB2     		uxtb	r3, r3
 7776 0058 602B     		cmp	r3, #96
 7777 005a 1AD0     		beq	.L606
3983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7778              		.loc 1 3983 0 is_stmt 1
 7779 005c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7780 0060 DBB2     		uxtb	r3, r3
 7781 0062 212B     		cmp	r3, #33
 7782 0064 1AD0     		beq	.L613
4009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7783              		.loc 1 4009 0
 7784 0066 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7785 006a DBB2     		uxtb	r3, r3
 7786 006c 222B     		cmp	r3, #34
 7787 006e 14D1     		bne	.L604
4011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7788              		.loc 1 4011 0
 7789 0070 2023     		movs	r3, #32
 7790 0072 84F84130 		strb	r3, [r4, #65]
4013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7791              		.loc 1 4013 0
ARM GAS  /tmp/cciXgPzD.s 			page 244


 7792 0076 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 7793 007a DBB2     		uxtb	r3, r3
 7794 007c 402B     		cmp	r3, #64
 7795 007e 27D0     		beq	.L614
4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7796              		.loc 1 4024 0
 7797 0080 0023     		movs	r3, #0
 7798 0082 84F84230 		strb	r3, [r4, #66]
4027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7799              		.loc 1 4027 0
 7800 0086 84F84030 		strb	r3, [r4, #64]
4029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7801              		.loc 1 4029 0
 7802 008a 2046     		mov	r0, r4
 7803 008c FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 7804              	.LVL643:
4032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7805              		.loc 1 4032 0
 7806 0090 03E0     		b	.L604
 7807              	.L606:
3980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7808              		.loc 1 3980 0
 7809 0092 616C     		ldr	r1, [r4, #68]
 7810 0094 2046     		mov	r0, r4
 7811 0096 FFF7FEFF 		bl	I2C_ITError
 7812              	.LVL644:
 7813              	.L604:
4032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7814              		.loc 1 4032 0
 7815 009a 10BD     		pop	{r4, pc}
 7816              	.LVL645:
 7817              	.L613:
3985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7818              		.loc 1 3985 0
 7819 009c 2023     		movs	r3, #32
 7820 009e 84F84130 		strb	r3, [r4, #65]
3987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7821              		.loc 1 3987 0
 7822 00a2 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 7823 00a6 DBB2     		uxtb	r3, r3
 7824 00a8 402B     		cmp	r3, #64
 7825 00aa 08D0     		beq	.L615
3999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7826              		.loc 1 3999 0
 7827 00ac 0023     		movs	r3, #0
 7828 00ae 84F84230 		strb	r3, [r4, #66]
4002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7829              		.loc 1 4002 0
 7830 00b2 84F84030 		strb	r3, [r4, #64]
4005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7831              		.loc 1 4005 0
 7832 00b6 2046     		mov	r0, r4
 7833 00b8 FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 7834              	.LVL646:
 7835 00bc EDE7     		b	.L604
 7836              	.L615:
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cciXgPzD.s 			page 245


 7837              		.loc 1 3989 0
 7838 00be 0023     		movs	r3, #0
 7839 00c0 84F84230 		strb	r3, [r4, #66]
3992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7840              		.loc 1 3992 0
 7841 00c4 84F84030 		strb	r3, [r4, #64]
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7842              		.loc 1 3995 0
 7843 00c8 2046     		mov	r0, r4
 7844 00ca FFF7FEFF 		bl	HAL_I2C_MemTxCpltCallback
 7845              	.LVL647:
 7846 00ce E4E7     		b	.L604
 7847              	.L614:
4015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7848              		.loc 1 4015 0
 7849 00d0 0023     		movs	r3, #0
 7850 00d2 84F84230 		strb	r3, [r4, #66]
4018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7851              		.loc 1 4018 0
 7852 00d6 84F84030 		strb	r3, [r4, #64]
4020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7853              		.loc 1 4020 0
 7854 00da 2046     		mov	r0, r4
 7855 00dc FFF7FEFF 		bl	HAL_I2C_MemRxCpltCallback
 7856              	.LVL648:
 7857 00e0 DBE7     		b	.L604
 7858              		.cfi_endproc
 7859              	.LFE192:
 7861              		.section	.text.I2C_Master_ISR_IT,"ax",%progbits
 7862              		.align	1
 7863              		.syntax unified
 7864              		.thumb
 7865              		.thumb_func
 7866              		.fpu fpv5-d16
 7868              	I2C_Master_ISR_IT:
 7869              	.LFB183:
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress = 0U;
 7870              		.loc 1 3271 0
 7871              		.cfi_startproc
 7872              		@ args = 0, pretend = 0, frame = 0
 7873              		@ frame_needed = 0, uses_anonymous_args = 0
 7874              	.LVL649:
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7875              		.loc 1 3275 0
 7876 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7877 0004 012B     		cmp	r3, #1
 7878 0006 00F0B380 		beq	.L630
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress = 0U;
 7879              		.loc 1 3271 0 discriminator 2
 7880 000a 70B5     		push	{r4, r5, r6, lr}
 7881              	.LCFI116:
 7882              		.cfi_def_cfa_offset 16
 7883              		.cfi_offset 4, -16
 7884              		.cfi_offset 5, -12
 7885              		.cfi_offset 6, -8
 7886              		.cfi_offset 14, -4
 7887 000c 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/cciXgPzD.s 			page 246


 7888              	.LCFI117:
 7889              		.cfi_def_cfa_offset 24
 7890 000e 1646     		mov	r6, r2
 7891 0010 0D46     		mov	r5, r1
 7892 0012 0446     		mov	r4, r0
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7893              		.loc 1 3275 0 discriminator 2
 7894 0014 0123     		movs	r3, #1
 7895 0016 80F84030 		strb	r3, [r0, #64]
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7896              		.loc 1 3277 0 discriminator 2
 7897 001a 11F0100F 		tst	r1, #16
 7898 001e 02D0     		beq	.L618
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7899              		.loc 1 3277 0 is_stmt 0 discriminator 1
 7900 0020 12F0100F 		tst	r2, #16
 7901 0024 1ED1     		bne	.L635
 7902              	.L618:
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7903              		.loc 1 3290 0 is_stmt 1
 7904 0026 15F0040F 		tst	r5, #4
 7905 002a 25D0     		beq	.L620
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7906              		.loc 1 3290 0 is_stmt 0 discriminator 1
 7907 002c 16F0040F 		tst	r6, #4
 7908 0030 22D0     		beq	.L620
3293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
 7909              		.loc 1 3293 0 is_stmt 1
 7910 0032 2368     		ldr	r3, [r4]
 7911 0034 5A6A     		ldr	r2, [r3, #36]
 7912              	.LVL650:
 7913 0036 636A     		ldr	r3, [r4, #36]
 7914 0038 591C     		adds	r1, r3, #1
 7915              	.LVL651:
 7916 003a 6162     		str	r1, [r4, #36]
 7917 003c 1A70     		strb	r2, [r3]
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
 7918              		.loc 1 3294 0
 7919 003e 238D     		ldrh	r3, [r4, #40]
 7920 0040 013B     		subs	r3, r3, #1
 7921 0042 2385     		strh	r3, [r4, #40]	@ movhi
3295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7922              		.loc 1 3295 0
 7923 0044 638D     		ldrh	r3, [r4, #42]
 7924 0046 013B     		subs	r3, r3, #1
 7925 0048 9BB2     		uxth	r3, r3
 7926 004a 6385     		strh	r3, [r4, #42]	@ movhi
 7927              	.LVL652:
 7928              	.L619:
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7929              		.loc 1 3371 0
 7930 004c 15F0200F 		tst	r5, #32
 7931 0050 03D0     		beq	.L629
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7932              		.loc 1 3371 0 is_stmt 0 discriminator 1
 7933 0052 16F0200F 		tst	r6, #32
 7934 0056 40F08680 		bne	.L636
ARM GAS  /tmp/cciXgPzD.s 			page 247


 7935              	.L629:
3378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7936              		.loc 1 3378 0 is_stmt 1
 7937 005a 0020     		movs	r0, #0
 7938 005c 84F84000 		strb	r0, [r4, #64]
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7939              		.loc 1 3381 0
 7940 0060 02B0     		add	sp, sp, #8
 7941              	.LCFI118:
 7942              		.cfi_remember_state
 7943              		.cfi_def_cfa_offset 16
 7944              		@ sp needed
 7945 0062 70BD     		pop	{r4, r5, r6, pc}
 7946              	.LVL653:
 7947              	.L635:
 7948              	.LCFI119:
 7949              		.cfi_restore_state
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7950              		.loc 1 3280 0
 7951 0064 0368     		ldr	r3, [r0]
 7952 0066 1022     		movs	r2, #16
 7953              	.LVL654:
 7954 0068 DA61     		str	r2, [r3, #28]
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7955              		.loc 1 3285 0
 7956 006a 436C     		ldr	r3, [r0, #68]
 7957 006c 43F00403 		orr	r3, r3, #4
 7958 0070 4364     		str	r3, [r0, #68]
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7959              		.loc 1 3288 0
 7960 0072 FFF7FEFF 		bl	I2C_Flush_TXDR
 7961              	.LVL655:
 7962 0076 E9E7     		b	.L619
 7963              	.LVL656:
 7964              	.L620:
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7965              		.loc 1 3297 0
 7966 0078 15F0020F 		tst	r5, #2
 7967 007c 10D0     		beq	.L621
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7968              		.loc 1 3297 0 is_stmt 0 discriminator 1
 7969 007e 16F0020F 		tst	r6, #2
 7970 0082 0DD0     		beq	.L621
3300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
 7971              		.loc 1 3300 0 is_stmt 1
 7972 0084 636A     		ldr	r3, [r4, #36]
 7973 0086 5A1C     		adds	r2, r3, #1
 7974              	.LVL657:
 7975 0088 6262     		str	r2, [r4, #36]
 7976 008a 2268     		ldr	r2, [r4]
 7977 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7978 008e 9362     		str	r3, [r2, #40]
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
 7979              		.loc 1 3301 0
 7980 0090 238D     		ldrh	r3, [r4, #40]
 7981 0092 013B     		subs	r3, r3, #1
 7982 0094 2385     		strh	r3, [r4, #40]	@ movhi
ARM GAS  /tmp/cciXgPzD.s 			page 248


3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7983              		.loc 1 3302 0
 7984 0096 638D     		ldrh	r3, [r4, #42]
 7985 0098 013B     		subs	r3, r3, #1
 7986 009a 9BB2     		uxth	r3, r3
 7987 009c 6385     		strh	r3, [r4, #42]	@ movhi
 7988 009e D5E7     		b	.L619
 7989              	.LVL658:
 7990              	.L621:
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7991              		.loc 1 3304 0
 7992 00a0 15F0800F 		tst	r5, #128
 7993 00a4 3FD0     		beq	.L622
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7994              		.loc 1 3304 0 is_stmt 0 discriminator 1
 7995 00a6 16F0400F 		tst	r6, #64
 7996 00aa 3CD0     		beq	.L622
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7997              		.loc 1 3306 0 is_stmt 1
 7998 00ac 238D     		ldrh	r3, [r4, #40]
 7999 00ae 63BB     		cbnz	r3, .L623
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8000              		.loc 1 3306 0 is_stmt 0 discriminator 1
 8001 00b0 638D     		ldrh	r3, [r4, #42]
 8002 00b2 9BB2     		uxth	r3, r3
 8003 00b4 4BB3     		cbz	r3, .L623
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8004              		.loc 1 3308 0 is_stmt 1
 8005 00b6 2368     		ldr	r3, [r4]
 8006 00b8 5968     		ldr	r1, [r3, #4]
 8007              	.LVL659:
 8008 00ba C1F30901 		ubfx	r1, r1, #0, #10
 8009              	.LVL660:
3310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8010              		.loc 1 3310 0
 8011 00be 638D     		ldrh	r3, [r4, #42]
 8012 00c0 9BB2     		uxth	r3, r3
 8013 00c2 FF2B     		cmp	r3, #255
 8014 00c4 0ED8     		bhi	.L637
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 8015              		.loc 1 3317 0
 8016 00c6 628D     		ldrh	r2, [r4, #42]
 8017              	.LVL661:
 8018 00c8 92B2     		uxth	r2, r2
 8019 00ca 2285     		strh	r2, [r4, #40]	@ movhi
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 8020              		.loc 1 3318 0
 8021 00cc E36A     		ldr	r3, [r4, #44]
 8022 00ce 13F5803F 		cmn	r3, #65536
 8023 00d2 11D0     		beq	.L625
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 8024              		.loc 1 3320 0
 8025 00d4 E36A     		ldr	r3, [r4, #44]
 8026 00d6 0020     		movs	r0, #0
 8027              	.LVL662:
 8028 00d8 0090     		str	r0, [sp]
 8029 00da D2B2     		uxtb	r2, r2
ARM GAS  /tmp/cciXgPzD.s 			page 249


 8030 00dc 2046     		mov	r0, r4
 8031 00de FFF7FEFF 		bl	I2C_TransferConfig
 8032              	.LVL663:
 8033 00e2 B3E7     		b	.L619
 8034              	.LVL664:
 8035              	.L637:
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8036              		.loc 1 3312 0
 8037 00e4 FF22     		movs	r2, #255
 8038              	.LVL665:
 8039 00e6 2285     		strh	r2, [r4, #40]	@ movhi
3313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8040              		.loc 1 3313 0
 8041 00e8 0023     		movs	r3, #0
 8042 00ea 0093     		str	r3, [sp]
 8043 00ec 4FF08073 		mov	r3, #16777216
 8044 00f0 2046     		mov	r0, r4
 8045              	.LVL666:
 8046 00f2 FFF7FEFF 		bl	I2C_TransferConfig
 8047              	.LVL667:
 8048 00f6 A9E7     		b	.L619
 8049              	.LVL668:
 8050              	.L625:
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 8051              		.loc 1 3324 0
 8052 00f8 0023     		movs	r3, #0
 8053 00fa 0093     		str	r3, [sp]
 8054 00fc 4FF00073 		mov	r3, #33554432
 8055 0100 D2B2     		uxtb	r2, r2
 8056 0102 2046     		mov	r0, r4
 8057              	.LVL669:
 8058 0104 FFF7FEFF 		bl	I2C_TransferConfig
 8059              	.LVL670:
 8060 0108 A0E7     		b	.L619
 8061              	.LVL671:
 8062              	.L623:
3331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8063              		.loc 1 3331 0
 8064 010a 2368     		ldr	r3, [r4]
 8065 010c 5B68     		ldr	r3, [r3, #4]
 8066 010e 13F0007F 		tst	r3, #33554432
 8067 0112 03D1     		bne	.L626
3334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8068              		.loc 1 3334 0
 8069 0114 2046     		mov	r0, r4
 8070              	.LVL672:
 8071 0116 FFF7FEFF 		bl	I2C_ITMasterSequentialCplt
 8072              	.LVL673:
 8073 011a 97E7     		b	.L619
 8074              	.LVL674:
 8075              	.L626:
3340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8076              		.loc 1 3340 0
 8077 011c 4021     		movs	r1, #64
 8078              	.LVL675:
 8079 011e 2046     		mov	r0, r4
 8080              	.LVL676:
ARM GAS  /tmp/cciXgPzD.s 			page 250


 8081 0120 FFF7FEFF 		bl	I2C_ITError
 8082              	.LVL677:
 8083 0124 92E7     		b	.L619
 8084              	.LVL678:
 8085              	.L622:
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8086              		.loc 1 3344 0
 8087 0126 15F0400F 		tst	r5, #64
 8088 012a 8FD0     		beq	.L619
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8089              		.loc 1 3344 0 is_stmt 0 discriminator 1
 8090 012c 16F0400F 		tst	r6, #64
 8091 0130 8CD0     		beq	.L619
3346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8092              		.loc 1 3346 0 is_stmt 1
 8093 0132 638D     		ldrh	r3, [r4, #42]
 8094 0134 9BB2     		uxth	r3, r3
 8095 0136 8BB9     		cbnz	r3, .L627
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8096              		.loc 1 3348 0
 8097 0138 2368     		ldr	r3, [r4]
 8098 013a 5A68     		ldr	r2, [r3, #4]
 8099              	.LVL679:
 8100 013c 12F0007F 		tst	r2, #33554432
 8101 0140 84D1     		bne	.L619
3351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 8102              		.loc 1 3351 0
 8103 0142 E26A     		ldr	r2, [r4, #44]
 8104 0144 12F5803F 		cmn	r2, #65536
 8105 0148 04D1     		bne	.L628
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 8106              		.loc 1 3354 0
 8107 014a 5A68     		ldr	r2, [r3, #4]
 8108 014c 42F48042 		orr	r2, r2, #16384
 8109 0150 5A60     		str	r2, [r3, #4]
 8110 0152 7BE7     		b	.L619
 8111              	.L628:
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 8112              		.loc 1 3359 0
 8113 0154 2046     		mov	r0, r4
 8114              	.LVL680:
 8115 0156 FFF7FEFF 		bl	I2C_ITMasterSequentialCplt
 8116              	.LVL681:
 8117 015a 77E7     		b	.L619
 8118              	.LVL682:
 8119              	.L627:
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8120              		.loc 1 3367 0
 8121 015c 4021     		movs	r1, #64
 8122              	.LVL683:
 8123 015e 2046     		mov	r0, r4
 8124              	.LVL684:
 8125 0160 FFF7FEFF 		bl	I2C_ITError
 8126              	.LVL685:
 8127 0164 72E7     		b	.L619
 8128              	.LVL686:
 8129              	.L636:
ARM GAS  /tmp/cciXgPzD.s 			page 251


3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8130              		.loc 1 3374 0
 8131 0166 2946     		mov	r1, r5
 8132 0168 2046     		mov	r0, r4
 8133 016a FFF7FEFF 		bl	I2C_ITMasterCplt
 8134              	.LVL687:
 8135 016e 74E7     		b	.L629
 8136              	.LVL688:
 8137              	.L630:
 8138              	.LCFI120:
 8139              		.cfi_def_cfa_offset 0
 8140              		.cfi_restore 4
 8141              		.cfi_restore 5
 8142              		.cfi_restore 6
 8143              		.cfi_restore 14
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8144              		.loc 1 3275 0
 8145 0170 0220     		movs	r0, #2
 8146              	.LVL689:
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8147              		.loc 1 3381 0
 8148 0172 7047     		bx	lr
 8149              		.cfi_endproc
 8150              	.LFE183:
 8152              		.section	.text.I2C_Master_ISR_DMA,"ax",%progbits
 8153              		.align	1
 8154              		.syntax unified
 8155              		.thumb
 8156              		.thumb_func
 8157              		.fpu fpv5-d16
 8159              	I2C_Master_ISR_DMA:
 8160              	.LFB185:
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress = 0U;
 8161              		.loc 1 3505 0
 8162              		.cfi_startproc
 8163              		@ args = 0, pretend = 0, frame = 0
 8164              		@ frame_needed = 0, uses_anonymous_args = 0
 8165              	.LVL690:
3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8166              		.loc 1 3510 0
 8167 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 8168 0004 012B     		cmp	r3, #1
 8169 0006 6AD0     		beq	.L647
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress = 0U;
 8170              		.loc 1 3505 0 discriminator 2
 8171 0008 10B5     		push	{r4, lr}
 8172              	.LCFI121:
 8173              		.cfi_def_cfa_offset 8
 8174              		.cfi_offset 4, -8
 8175              		.cfi_offset 14, -4
 8176 000a 82B0     		sub	sp, sp, #8
 8177              	.LCFI122:
 8178              		.cfi_def_cfa_offset 16
 8179 000c 0446     		mov	r4, r0
3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8180              		.loc 1 3510 0 discriminator 2
 8181 000e 0123     		movs	r3, #1
ARM GAS  /tmp/cciXgPzD.s 			page 252


 8182 0010 80F84030 		strb	r3, [r0, #64]
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8183              		.loc 1 3512 0 discriminator 2
 8184 0014 11F0100F 		tst	r1, #16
 8185 0018 02D0     		beq	.L640
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8186              		.loc 1 3512 0 is_stmt 0 discriminator 1
 8187 001a 12F0100F 		tst	r2, #16
 8188 001e 31D1     		bne	.L652
 8189              	.L640:
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8190              		.loc 1 3528 0 is_stmt 1
 8191 0020 11F0800F 		tst	r1, #128
 8192 0024 4CD0     		beq	.L642
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8193              		.loc 1 3528 0 is_stmt 0 discriminator 1
 8194 0026 12F0400F 		tst	r2, #64
 8195 002a 49D0     		beq	.L642
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8196              		.loc 1 3531 0 is_stmt 1
 8197 002c 2268     		ldr	r2, [r4]
 8198              	.LVL691:
 8199 002e 1368     		ldr	r3, [r2]
 8200 0030 23F04003 		bic	r3, r3, #64
 8201 0034 1360     		str	r3, [r2]
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8202              		.loc 1 3533 0
 8203 0036 638D     		ldrh	r3, [r4, #42]
 8204 0038 9BB2     		uxth	r3, r3
 8205 003a 002B     		cmp	r3, #0
 8206 003c 3BD0     		beq	.L643
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8207              		.loc 1 3536 0
 8208 003e 2368     		ldr	r3, [r4]
 8209 0040 5968     		ldr	r1, [r3, #4]
 8210              	.LVL692:
 8211 0042 C1F30901 		ubfx	r1, r1, #0, #10
 8212              	.LVL693:
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8213              		.loc 1 3539 0
 8214 0046 638D     		ldrh	r3, [r4, #42]
 8215 0048 9BB2     		uxth	r3, r3
 8216 004a FF2B     		cmp	r3, #255
 8217 004c 28D9     		bls	.L644
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
 8218              		.loc 1 3541 0
 8219 004e FF23     		movs	r3, #255
 8220 0050 2385     		strh	r3, [r4, #40]	@ movhi
 8221              	.LVL694:
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8222              		.loc 1 3542 0
 8223 0052 4FF08073 		mov	r3, #16777216
 8224              	.LVL695:
 8225              	.L645:
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8226              		.loc 1 3551 0
 8227 0056 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
ARM GAS  /tmp/cciXgPzD.s 			page 253


 8228 005a 0020     		movs	r0, #0
 8229              	.LVL696:
 8230 005c 0090     		str	r0, [sp]
 8231 005e 2046     		mov	r0, r4
 8232 0060 FFF7FEFF 		bl	I2C_TransferConfig
 8233              	.LVL697:
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8234              		.loc 1 3554 0
 8235 0064 638D     		ldrh	r3, [r4, #42]
 8236 0066 228D     		ldrh	r2, [r4, #40]
 8237 0068 9B1A     		subs	r3, r3, r2
 8238 006a 9BB2     		uxth	r3, r3
 8239 006c 6385     		strh	r3, [r4, #42]	@ movhi
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8240              		.loc 1 3557 0
 8241 006e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8242 0072 DBB2     		uxtb	r3, r3
 8243 0074 222B     		cmp	r3, #34
 8244 0076 18D0     		beq	.L653
3563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8245              		.loc 1 3563 0
 8246 0078 2268     		ldr	r2, [r4]
 8247 007a 1368     		ldr	r3, [r2]
 8248 007c 43F48043 		orr	r3, r3, #16384
 8249 0080 1360     		str	r3, [r2]
 8250 0082 23E0     		b	.L641
 8251              	.LVL698:
 8252              	.L652:
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8253              		.loc 1 3515 0
 8254 0084 0368     		ldr	r3, [r0]
 8255 0086 1022     		movs	r2, #16
 8256              	.LVL699:
 8257 0088 DA61     		str	r2, [r3, #28]
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8258              		.loc 1 3518 0
 8259 008a 436C     		ldr	r3, [r0, #68]
 8260 008c 43F00403 		orr	r3, r3, #4
 8261 0090 4364     		str	r3, [r0, #68]
3523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8262              		.loc 1 3523 0
 8263 0092 1221     		movs	r1, #18
 8264              	.LVL700:
 8265 0094 FFF7FEFF 		bl	I2C_Enable_IRQ
 8266              	.LVL701:
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8267              		.loc 1 3526 0
 8268 0098 2046     		mov	r0, r4
 8269 009a FFF7FEFF 		bl	I2C_Flush_TXDR
 8270              	.LVL702:
 8271 009e 15E0     		b	.L641
 8272              	.LVL703:
 8273              	.L644:
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_AUTOEND_MODE;
 8274              		.loc 1 3546 0
 8275 00a0 638D     		ldrh	r3, [r4, #42]
 8276 00a2 2385     		strh	r3, [r4, #40]	@ movhi
ARM GAS  /tmp/cciXgPzD.s 			page 254


 8277              	.LVL704:
3547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8278              		.loc 1 3547 0
 8279 00a4 4FF00073 		mov	r3, #33554432
 8280 00a8 D5E7     		b	.L645
 8281              	.LVL705:
 8282              	.L653:
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8283              		.loc 1 3559 0
 8284 00aa 2268     		ldr	r2, [r4]
 8285 00ac 1368     		ldr	r3, [r2]
 8286 00ae 43F40043 		orr	r3, r3, #32768
 8287 00b2 1360     		str	r3, [r2]
 8288 00b4 0AE0     		b	.L641
 8289              	.LVL706:
 8290              	.L643:
3570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8291              		.loc 1 3570 0
 8292 00b6 4021     		movs	r1, #64
 8293              	.LVL707:
 8294 00b8 2046     		mov	r0, r4
 8295              	.LVL708:
 8296 00ba FFF7FEFF 		bl	I2C_ITError
 8297              	.LVL709:
 8298 00be 05E0     		b	.L641
 8299              	.LVL710:
 8300              	.L642:
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8301              		.loc 1 3573 0
 8302 00c0 11F0200F 		tst	r1, #32
 8303 00c4 02D0     		beq	.L641
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8304              		.loc 1 3573 0 is_stmt 0 discriminator 1
 8305 00c6 12F0200F 		tst	r2, #32
 8306 00ca 04D1     		bne	.L654
 8307              	.LVL711:
 8308              	.L641:
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8309              		.loc 1 3580 0 is_stmt 1
 8310 00cc 0020     		movs	r0, #0
 8311 00ce 84F84000 		strb	r0, [r4, #64]
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8312              		.loc 1 3583 0
 8313 00d2 02B0     		add	sp, sp, #8
 8314              	.LCFI123:
 8315              		.cfi_remember_state
 8316              		.cfi_def_cfa_offset 8
 8317              		@ sp needed
 8318 00d4 10BD     		pop	{r4, pc}
 8319              	.LVL712:
 8320              	.L654:
 8321              	.LCFI124:
 8322              		.cfi_restore_state
3576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8323              		.loc 1 3576 0
 8324 00d6 2046     		mov	r0, r4
 8325              	.LVL713:
ARM GAS  /tmp/cciXgPzD.s 			page 255


 8326 00d8 FFF7FEFF 		bl	I2C_ITMasterCplt
 8327              	.LVL714:
 8328 00dc F6E7     		b	.L641
 8329              	.LVL715:
 8330              	.L647:
 8331              	.LCFI125:
 8332              		.cfi_def_cfa_offset 0
 8333              		.cfi_restore 4
 8334              		.cfi_restore 14
3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8335              		.loc 1 3510 0
 8336 00de 0220     		movs	r0, #2
 8337              	.LVL716:
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8338              		.loc 1 3583 0
 8339 00e0 7047     		bx	lr
 8340              		.cfi_endproc
 8341              	.LFE185:
 8343              		.section	.text.I2C_DMAError,"ax",%progbits
 8344              		.align	1
 8345              		.syntax unified
 8346              		.thumb
 8347              		.thumb_func
 8348              		.fpu fpv5-d16
 8350              	I2C_DMAError:
 8351              	.LFB201:
4428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8352              		.loc 1 4428 0
 8353              		.cfi_startproc
 8354              		@ args = 0, pretend = 0, frame = 0
 8355              		@ frame_needed = 0, uses_anonymous_args = 0
 8356              	.LVL717:
 8357 0000 08B5     		push	{r3, lr}
 8358              	.LCFI126:
 8359              		.cfi_def_cfa_offset 8
 8360              		.cfi_offset 3, -8
 8361              		.cfi_offset 14, -4
4429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8362              		.loc 1 4429 0
 8363 0002 806B     		ldr	r0, [r0, #56]
 8364              	.LVL718:
4432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8365              		.loc 1 4432 0
 8366 0004 0268     		ldr	r2, [r0]
 8367 0006 5368     		ldr	r3, [r2, #4]
 8368 0008 43F40043 		orr	r3, r3, #32768
 8369 000c 5360     		str	r3, [r2, #4]
4435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 8370              		.loc 1 4435 0
 8371 000e 1021     		movs	r1, #16
 8372 0010 FFF7FEFF 		bl	I2C_ITError
 8373              	.LVL719:
4436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8374              		.loc 1 4436 0
 8375 0014 08BD     		pop	{r3, pc}
 8376              		.cfi_endproc
 8377              	.LFE201:
ARM GAS  /tmp/cciXgPzD.s 			page 256


 8379              		.section	.text.HAL_I2C_ER_IRQHandler,"ax",%progbits
 8380              		.align	1
 8381              		.global	HAL_I2C_ER_IRQHandler
 8382              		.syntax unified
 8383              		.thumb
 8384              		.thumb_func
 8385              		.fpu fpv5-d16
 8387              	HAL_I2C_ER_IRQHandler:
 8388              	.LFB169:
2996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 8389              		.loc 1 2996 0
 8390              		.cfi_startproc
 8391              		@ args = 0, pretend = 0, frame = 0
 8392              		@ frame_needed = 0, uses_anonymous_args = 0
 8393              	.LVL720:
 8394 0000 10B5     		push	{r4, lr}
 8395              	.LCFI127:
 8396              		.cfi_def_cfa_offset 8
 8397              		.cfi_offset 4, -8
 8398              		.cfi_offset 14, -4
2997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 8399              		.loc 1 2997 0
 8400 0002 0268     		ldr	r2, [r0]
 8401 0004 9369     		ldr	r3, [r2, #24]
 8402              	.LVL721:
2998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8403              		.loc 1 2998 0
 8404 0006 1168     		ldr	r1, [r2]
 8405              	.LVL722:
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8406              		.loc 1 3001 0
 8407 0008 13F4807F 		tst	r3, #256
 8408 000c 09D0     		beq	.L658
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8409              		.loc 1 3001 0 is_stmt 0 discriminator 1
 8410 000e 11F0800F 		tst	r1, #128
 8411 0012 06D0     		beq	.L658
3003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8412              		.loc 1 3003 0 is_stmt 1
 8413 0014 446C     		ldr	r4, [r0, #68]
 8414 0016 44F00104 		orr	r4, r4, #1
 8415 001a 4464     		str	r4, [r0, #68]
3006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8416              		.loc 1 3006 0
 8417 001c 4FF48074 		mov	r4, #256
 8418 0020 D461     		str	r4, [r2, #28]
 8419              	.L658:
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8420              		.loc 1 3010 0
 8421 0022 13F4806F 		tst	r3, #1024
 8422 0026 0AD0     		beq	.L659
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8423              		.loc 1 3010 0 is_stmt 0 discriminator 1
 8424 0028 11F0800F 		tst	r1, #128
 8425 002c 07D0     		beq	.L659
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8426              		.loc 1 3012 0 is_stmt 1
ARM GAS  /tmp/cciXgPzD.s 			page 257


 8427 002e 426C     		ldr	r2, [r0, #68]
 8428 0030 42F00802 		orr	r2, r2, #8
 8429 0034 4264     		str	r2, [r0, #68]
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8430              		.loc 1 3015 0
 8431 0036 0268     		ldr	r2, [r0]
 8432 0038 4FF48064 		mov	r4, #1024
 8433 003c D461     		str	r4, [r2, #28]
 8434              	.L659:
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8435              		.loc 1 3019 0
 8436 003e 13F4007F 		tst	r3, #512
 8437 0042 0AD0     		beq	.L660
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8438              		.loc 1 3019 0 is_stmt 0 discriminator 1
 8439 0044 11F0800F 		tst	r1, #128
 8440 0048 07D0     		beq	.L660
3021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8441              		.loc 1 3021 0 is_stmt 1
 8442 004a 436C     		ldr	r3, [r0, #68]
 8443              	.LVL723:
 8444 004c 43F00203 		orr	r3, r3, #2
 8445 0050 4364     		str	r3, [r0, #68]
3024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8446              		.loc 1 3024 0
 8447 0052 0368     		ldr	r3, [r0]
 8448 0054 4FF40072 		mov	r2, #512
 8449 0058 DA61     		str	r2, [r3, #28]
 8450              	.L660:
3028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8451              		.loc 1 3028 0
 8452 005a 436C     		ldr	r3, [r0, #68]
 8453 005c 13F00B0F 		tst	r3, #11
 8454 0060 00D1     		bne	.L663
 8455              	.LVL724:
 8456              	.L657:
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8457              		.loc 1 3032 0
 8458 0062 10BD     		pop	{r4, pc}
 8459              	.LVL725:
 8460              	.L663:
3030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8461              		.loc 1 3030 0
 8462 0064 416C     		ldr	r1, [r0, #68]
 8463              	.LVL726:
 8464 0066 FFF7FEFF 		bl	I2C_ITError
 8465              	.LVL727:
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8466              		.loc 1 3032 0
 8467 006a FAE7     		b	.L657
 8468              		.cfi_endproc
 8469              	.LFE169:
 8471              		.section	.text.I2C_DMAAbort,"ax",%progbits
 8472              		.align	1
 8473              		.syntax unified
 8474              		.thumb
 8475              		.thumb_func
ARM GAS  /tmp/cciXgPzD.s 			page 258


 8476              		.fpu fpv5-d16
 8478              	I2C_DMAAbort:
 8479              	.LFB202:
4445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8480              		.loc 1 4445 0
 8481              		.cfi_startproc
 8482              		@ args = 0, pretend = 0, frame = 0
 8483              		@ frame_needed = 0, uses_anonymous_args = 0
 8484              	.LVL728:
 8485 0000 08B5     		push	{r3, lr}
 8486              	.LCFI128:
 8487              		.cfi_def_cfa_offset 8
 8488              		.cfi_offset 3, -8
 8489              		.cfi_offset 14, -4
4446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8490              		.loc 1 4446 0
 8491 0002 806B     		ldr	r0, [r0, #56]
 8492              	.LVL729:
4449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8493              		.loc 1 4449 0
 8494 0004 0268     		ldr	r2, [r0]
 8495 0006 5368     		ldr	r3, [r2, #4]
 8496 0008 43F40043 		orr	r3, r3, #32768
 8497 000c 5360     		str	r3, [r2, #4]
4452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->hdmarx->XferAbortCallback = NULL;
 8498              		.loc 1 4452 0
 8499 000e 826B     		ldr	r2, [r0, #56]
 8500 0010 0023     		movs	r3, #0
 8501 0012 1365     		str	r3, [r2, #80]
4453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8502              		.loc 1 4453 0
 8503 0014 C26B     		ldr	r2, [r0, #60]
 8504 0016 1365     		str	r3, [r2, #80]
4456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8505              		.loc 1 4456 0
 8506 0018 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8507 001c DBB2     		uxtb	r3, r3
 8508 001e 602B     		cmp	r3, #96
 8509 0020 02D0     		beq	.L668
4466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8510              		.loc 1 4466 0
 8511 0022 FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 8512              	.LVL730:
 8513              	.L664:
4468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8514              		.loc 1 4468 0
 8515 0026 08BD     		pop	{r3, pc}
 8516              	.LVL731:
 8517              	.L668:
4458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8518              		.loc 1 4458 0
 8519 0028 2023     		movs	r3, #32
 8520 002a 80F84130 		strb	r3, [r0, #65]
4461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8521              		.loc 1 4461 0
 8522 002e FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 8523              	.LVL732:
ARM GAS  /tmp/cciXgPzD.s 			page 259


 8524 0032 F8E7     		b	.L664
 8525              		.cfi_endproc
 8526              	.LFE202:
 8528              		.section	.text.HAL_I2C_GetState,"ax",%progbits
 8529              		.align	1
 8530              		.global	HAL_I2C_GetState
 8531              		.syntax unified
 8532              		.thumb
 8533              		.thumb_func
 8534              		.fpu fpv5-d16
 8536              	HAL_I2C_GetState:
 8537              	.LFB180:
3223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Return I2C handle state */
 8538              		.loc 1 3223 0
 8539              		.cfi_startproc
 8540              		@ args = 0, pretend = 0, frame = 0
 8541              		@ frame_needed = 0, uses_anonymous_args = 0
 8542              		@ link register save eliminated.
 8543              	.LVL733:
3225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 8544              		.loc 1 3225 0
 8545 0000 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 8546              	.LVL734:
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8547              		.loc 1 3226 0
 8548 0004 7047     		bx	lr
 8549              		.cfi_endproc
 8550              	.LFE180:
 8552              		.section	.text.HAL_I2C_GetMode,"ax",%progbits
 8553              		.align	1
 8554              		.global	HAL_I2C_GetMode
 8555              		.syntax unified
 8556              		.thumb
 8557              		.thumb_func
 8558              		.fpu fpv5-d16
 8560              	HAL_I2C_GetMode:
 8561              	.LFB181:
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->Mode;
 8562              		.loc 1 3235 0
 8563              		.cfi_startproc
 8564              		@ args = 0, pretend = 0, frame = 0
 8565              		@ frame_needed = 0, uses_anonymous_args = 0
 8566              		@ link register save eliminated.
 8567              	.LVL735:
3236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 8568              		.loc 1 3236 0
 8569 0000 90F84200 		ldrb	r0, [r0, #66]	@ zero_extendqisi2
 8570              	.LVL736:
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8571              		.loc 1 3237 0
 8572 0004 7047     		bx	lr
 8573              		.cfi_endproc
 8574              	.LFE181:
 8576              		.section	.text.HAL_I2C_GetError,"ax",%progbits
 8577              		.align	1
 8578              		.global	HAL_I2C_GetError
 8579              		.syntax unified
ARM GAS  /tmp/cciXgPzD.s 			page 260


 8580              		.thumb
 8581              		.thumb_func
 8582              		.fpu fpv5-d16
 8584              	HAL_I2C_GetError:
 8585              	.LFB182:
3246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->ErrorCode;
 8586              		.loc 1 3246 0
 8587              		.cfi_startproc
 8588              		@ args = 0, pretend = 0, frame = 0
 8589              		@ frame_needed = 0, uses_anonymous_args = 0
 8590              		@ link register save eliminated.
 8591              	.LVL737:
3247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 8592              		.loc 1 3247 0
 8593 0000 406C     		ldr	r0, [r0, #68]
 8594              	.LVL738:
3248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8595              		.loc 1 3248 0
 8596 0002 7047     		bx	lr
 8597              		.cfi_endproc
 8598              	.LFE182:
 8600              		.text
 8601              	.Letext0:
 8602              		.file 2 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_d
 8603              		.file 3 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdin
 8604              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 8605              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 8606              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f765xx.h"
 8607              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 8608              		.file 8 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h
 8609              		.file 9 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types
 8610              		.file 10 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/inc
 8611              		.file 11 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent
 8612              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 8613              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 8614              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 8615              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/cciXgPzD.s 			page 261


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_i2c.c
     /tmp/cciXgPzD.s:17     .text.I2C_Flush_TXDR:0000000000000000 $t
     /tmp/cciXgPzD.s:23     .text.I2C_Flush_TXDR:0000000000000000 I2C_Flush_TXDR
     /tmp/cciXgPzD.s:57     .text.I2C_DMASlaveTransmitCplt:0000000000000000 $t
     /tmp/cciXgPzD.s:63     .text.I2C_DMASlaveTransmitCplt:0000000000000000 I2C_DMASlaveTransmitCplt
     /tmp/cciXgPzD.s:77     .text.I2C_DMASlaveReceiveCplt:0000000000000000 $t
     /tmp/cciXgPzD.s:83     .text.I2C_DMASlaveReceiveCplt:0000000000000000 I2C_DMASlaveReceiveCplt
     /tmp/cciXgPzD.s:97     .text.I2C_TransferConfig:0000000000000000 $t
     /tmp/cciXgPzD.s:103    .text.I2C_TransferConfig:0000000000000000 I2C_TransferConfig
     /tmp/cciXgPzD.s:149    .text.I2C_Enable_IRQ:0000000000000000 $t
     /tmp/cciXgPzD.s:155    .text.I2C_Enable_IRQ:0000000000000000 I2C_Enable_IRQ
     /tmp/cciXgPzD.s:266    .text.I2C_Enable_IRQ:000000000000007c $d
     /tmp/cciXgPzD.s:8159   .text.I2C_Master_ISR_DMA:0000000000000000 I2C_Master_ISR_DMA
     /tmp/cciXgPzD.s:7590   .text.I2C_Slave_ISR_DMA:0000000000000000 I2C_Slave_ISR_DMA
     /tmp/cciXgPzD.s:272    .text.I2C_Disable_IRQ:0000000000000000 $t
     /tmp/cciXgPzD.s:278    .text.I2C_Disable_IRQ:0000000000000000 I2C_Disable_IRQ
     /tmp/cciXgPzD.s:393    .text.I2C_IsAcknowledgeFailed:0000000000000000 $t
     /tmp/cciXgPzD.s:399    .text.I2C_IsAcknowledgeFailed:0000000000000000 I2C_IsAcknowledgeFailed
     /tmp/cciXgPzD.s:498    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 $t
     /tmp/cciXgPzD.s:504    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 I2C_WaitOnTXISFlagUntilTimeout
     /tmp/cciXgPzD.s:577    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cciXgPzD.s:583    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 I2C_WaitOnFlagUntilTimeout
     /tmp/cciXgPzD.s:648    .text.I2C_RequestMemoryWrite:0000000000000000 $t
     /tmp/cciXgPzD.s:654    .text.I2C_RequestMemoryWrite:0000000000000000 I2C_RequestMemoryWrite
     /tmp/cciXgPzD.s:768    .text.I2C_RequestMemoryWrite:0000000000000084 $d
     /tmp/cciXgPzD.s:773    .text.I2C_RequestMemoryRead:0000000000000000 $t
     /tmp/cciXgPzD.s:779    .text.I2C_RequestMemoryRead:0000000000000000 I2C_RequestMemoryRead
     /tmp/cciXgPzD.s:893    .text.I2C_RequestMemoryRead:0000000000000080 $d
     /tmp/cciXgPzD.s:898    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 $t
     /tmp/cciXgPzD.s:904    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 I2C_WaitOnSTOPFlagUntilTimeout
     /tmp/cciXgPzD.s:974    .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 $t
     /tmp/cciXgPzD.s:980    .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 I2C_WaitOnRXNEFlagUntilTimeout
     /tmp/cciXgPzD.s:1089   .text.I2C_DMAMasterTransmitCplt:0000000000000000 $t
     /tmp/cciXgPzD.s:1095   .text.I2C_DMAMasterTransmitCplt:0000000000000000 I2C_DMAMasterTransmitCplt
     /tmp/cciXgPzD.s:1168   .text.I2C_DMAMasterReceiveCplt:0000000000000000 $t
     /tmp/cciXgPzD.s:1174   .text.I2C_DMAMasterReceiveCplt:0000000000000000 I2C_DMAMasterReceiveCplt
     /tmp/cciXgPzD.s:1247   .text.HAL_I2C_MspInit:0000000000000000 $t
     /tmp/cciXgPzD.s:1254   .text.HAL_I2C_MspInit:0000000000000000 HAL_I2C_MspInit
     /tmp/cciXgPzD.s:1268   .text.HAL_I2C_Init:0000000000000000 $t
     /tmp/cciXgPzD.s:1275   .text.HAL_I2C_Init:0000000000000000 HAL_I2C_Init
     /tmp/cciXgPzD.s:1408   .text.HAL_I2C_Init:00000000000000b8 $d
     /tmp/cciXgPzD.s:1413   .text.HAL_I2C_MspDeInit:0000000000000000 $t
     /tmp/cciXgPzD.s:1420   .text.HAL_I2C_MspDeInit:0000000000000000 HAL_I2C_MspDeInit
     /tmp/cciXgPzD.s:1434   .text.HAL_I2C_DeInit:0000000000000000 $t
     /tmp/cciXgPzD.s:1441   .text.HAL_I2C_DeInit:0000000000000000 HAL_I2C_DeInit
     /tmp/cciXgPzD.s:1496   .text.HAL_I2C_Master_Transmit:0000000000000000 $t
     /tmp/cciXgPzD.s:1503   .text.HAL_I2C_Master_Transmit:0000000000000000 HAL_I2C_Master_Transmit
     /tmp/cciXgPzD.s:1771   .text.HAL_I2C_Master_Transmit:000000000000018c $d
     /tmp/cciXgPzD.s:1776   .text.HAL_I2C_Master_Receive:0000000000000000 $t
     /tmp/cciXgPzD.s:1783   .text.HAL_I2C_Master_Receive:0000000000000000 HAL_I2C_Master_Receive
     /tmp/cciXgPzD.s:2051   .text.HAL_I2C_Master_Receive:000000000000018c $d
     /tmp/cciXgPzD.s:2056   .text.HAL_I2C_Slave_Transmit:0000000000000000 $t
     /tmp/cciXgPzD.s:2063   .text.HAL_I2C_Slave_Transmit:0000000000000000 HAL_I2C_Slave_Transmit
     /tmp/cciXgPzD.s:2339   .text.HAL_I2C_Slave_Receive:0000000000000000 $t
     /tmp/cciXgPzD.s:2346   .text.HAL_I2C_Slave_Receive:0000000000000000 HAL_I2C_Slave_Receive
     /tmp/cciXgPzD.s:2612   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 $t
ARM GAS  /tmp/cciXgPzD.s 			page 262


     /tmp/cciXgPzD.s:2619   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 HAL_I2C_Master_Transmit_IT
     /tmp/cciXgPzD.s:2749   .text.HAL_I2C_Master_Transmit_IT:000000000000008c $d
     /tmp/cciXgPzD.s:7868   .text.I2C_Master_ISR_IT:0000000000000000 I2C_Master_ISR_IT
     /tmp/cciXgPzD.s:2756   .text.HAL_I2C_Master_Receive_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:2763   .text.HAL_I2C_Master_Receive_IT:0000000000000000 HAL_I2C_Master_Receive_IT
     /tmp/cciXgPzD.s:2893   .text.HAL_I2C_Master_Receive_IT:000000000000008c $d
     /tmp/cciXgPzD.s:2900   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:2907   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 HAL_I2C_Slave_Transmit_IT
     /tmp/cciXgPzD.s:2987   .text.HAL_I2C_Slave_Transmit_IT:000000000000005c $d
     /tmp/cciXgPzD.s:7330   .text.I2C_Slave_ISR_IT:0000000000000000 I2C_Slave_ISR_IT
     /tmp/cciXgPzD.s:2993   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:3000   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 HAL_I2C_Slave_Receive_IT
     /tmp/cciXgPzD.s:3080   .text.HAL_I2C_Slave_Receive_IT:000000000000005c $d
     /tmp/cciXgPzD.s:3086   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 $t
     /tmp/cciXgPzD.s:3093   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 HAL_I2C_Master_Transmit_DMA
     /tmp/cciXgPzD.s:3289   .text.HAL_I2C_Master_Transmit_DMA:00000000000000f4 $d
     /tmp/cciXgPzD.s:8350   .text.I2C_DMAError:0000000000000000 I2C_DMAError
     /tmp/cciXgPzD.s:3299   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 $t
     /tmp/cciXgPzD.s:3306   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 HAL_I2C_Master_Receive_DMA
     /tmp/cciXgPzD.s:3500   .text.HAL_I2C_Master_Receive_DMA:00000000000000f0 $d
     /tmp/cciXgPzD.s:3510   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 $t
     /tmp/cciXgPzD.s:3517   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Transmit_DMA
     /tmp/cciXgPzD.s:3640   .text.HAL_I2C_Slave_Transmit_DMA:000000000000009c $d
     /tmp/cciXgPzD.s:3648   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 $t
     /tmp/cciXgPzD.s:3655   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 HAL_I2C_Slave_Receive_DMA
     /tmp/cciXgPzD.s:3781   .text.HAL_I2C_Slave_Receive_DMA:00000000000000a0 $d
     /tmp/cciXgPzD.s:3789   .text.HAL_I2C_Mem_Write:0000000000000000 $t
     /tmp/cciXgPzD.s:3796   .text.HAL_I2C_Mem_Write:0000000000000000 HAL_I2C_Mem_Write
     /tmp/cciXgPzD.s:4113   .text.HAL_I2C_Mem_Read:0000000000000000 $t
     /tmp/cciXgPzD.s:4120   .text.HAL_I2C_Mem_Read:0000000000000000 HAL_I2C_Mem_Read
     /tmp/cciXgPzD.s:4430   .text.HAL_I2C_Mem_Read:00000000000001d0 $d
     /tmp/cciXgPzD.s:4435   .text.HAL_I2C_Mem_Write_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:4442   .text.HAL_I2C_Mem_Write_IT:0000000000000000 HAL_I2C_Mem_Write_IT
     /tmp/cciXgPzD.s:4621   .text.HAL_I2C_Mem_Write_IT:00000000000000e8 $d
     /tmp/cciXgPzD.s:4627   .text.HAL_I2C_Mem_Read_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:4634   .text.HAL_I2C_Mem_Read_IT:0000000000000000 HAL_I2C_Mem_Read_IT
     /tmp/cciXgPzD.s:4814   .text.HAL_I2C_Mem_Read_IT:00000000000000ec $d
     /tmp/cciXgPzD.s:4821   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 $t
     /tmp/cciXgPzD.s:4828   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 HAL_I2C_Mem_Write_DMA
     /tmp/cciXgPzD.s:5041   .text.HAL_I2C_Mem_Write_DMA:0000000000000120 $d
     /tmp/cciXgPzD.s:5049   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 $t
     /tmp/cciXgPzD.s:5056   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 HAL_I2C_Mem_Read_DMA
     /tmp/cciXgPzD.s:5270   .text.HAL_I2C_Mem_Read_DMA:0000000000000120 $d
     /tmp/cciXgPzD.s:5279   .text.HAL_I2C_IsDeviceReady:0000000000000000 $t
     /tmp/cciXgPzD.s:5286   .text.HAL_I2C_IsDeviceReady:0000000000000000 HAL_I2C_IsDeviceReady
     /tmp/cciXgPzD.s:5532   .text.HAL_I2C_IsDeviceReady:0000000000000158 $d
     /tmp/cciXgPzD.s:5537   .text.HAL_I2C_Master_Sequential_Transmit_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:5544   .text.HAL_I2C_Master_Sequential_Transmit_IT:0000000000000000 HAL_I2C_Master_Sequential_Transmit_IT
     /tmp/cciXgPzD.s:5673   .text.HAL_I2C_Master_Sequential_Transmit_IT:0000000000000084 $d
     /tmp/cciXgPzD.s:5679   .text.HAL_I2C_Master_Sequential_Receive_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:5686   .text.HAL_I2C_Master_Sequential_Receive_IT:0000000000000000 HAL_I2C_Master_Sequential_Receive_IT
     /tmp/cciXgPzD.s:5815   .text.HAL_I2C_Master_Sequential_Receive_IT:0000000000000084 $d
     /tmp/cciXgPzD.s:5821   .text.HAL_I2C_Slave_Sequential_Transmit_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:5828   .text.HAL_I2C_Slave_Sequential_Transmit_IT:0000000000000000 HAL_I2C_Slave_Sequential_Transmit_IT
     /tmp/cciXgPzD.s:5954   .text.HAL_I2C_Slave_Sequential_Transmit_IT:00000000000000a0 $d
     /tmp/cciXgPzD.s:5959   .text.HAL_I2C_Slave_Sequential_Receive_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:5966   .text.HAL_I2C_Slave_Sequential_Receive_IT:0000000000000000 HAL_I2C_Slave_Sequential_Receive_IT
ARM GAS  /tmp/cciXgPzD.s 			page 263


     /tmp/cciXgPzD.s:6092   .text.HAL_I2C_Slave_Sequential_Receive_IT:00000000000000a0 $d
     /tmp/cciXgPzD.s:6097   .text.HAL_I2C_EnableListen_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:6104   .text.HAL_I2C_EnableListen_IT:0000000000000000 HAL_I2C_EnableListen_IT
     /tmp/cciXgPzD.s:6145   .text.HAL_I2C_EnableListen_IT:0000000000000024 $d
     /tmp/cciXgPzD.s:6150   .text.HAL_I2C_DisableListen_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:6157   .text.HAL_I2C_DisableListen_IT:0000000000000000 HAL_I2C_DisableListen_IT
     /tmp/cciXgPzD.s:6211   .text.HAL_I2C_Master_Abort_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:6218   .text.HAL_I2C_Master_Abort_IT:0000000000000000 HAL_I2C_Master_Abort_IT
     /tmp/cciXgPzD.s:6310   .text.HAL_I2C_Master_Abort_IT:0000000000000064 $d
     /tmp/cciXgPzD.s:6315   .text.HAL_I2C_EV_IRQHandler:0000000000000000 $t
     /tmp/cciXgPzD.s:6322   .text.HAL_I2C_EV_IRQHandler:0000000000000000 HAL_I2C_EV_IRQHandler
     /tmp/cciXgPzD.s:6354   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 $t
     /tmp/cciXgPzD.s:6361   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 HAL_I2C_MasterTxCpltCallback
     /tmp/cciXgPzD.s:6375   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/cciXgPzD.s:6382   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
     /tmp/cciXgPzD.s:6396   .text.I2C_ITMasterSequentialCplt:0000000000000000 $t
     /tmp/cciXgPzD.s:6402   .text.I2C_ITMasterSequentialCplt:0000000000000000 I2C_ITMasterSequentialCplt
     /tmp/cciXgPzD.s:6473   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 $t
     /tmp/cciXgPzD.s:6480   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 HAL_I2C_SlaveTxCpltCallback
     /tmp/cciXgPzD.s:6494   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 $t
     /tmp/cciXgPzD.s:6501   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 HAL_I2C_SlaveRxCpltCallback
     /tmp/cciXgPzD.s:6515   .text.I2C_ITSlaveSequentialCplt:0000000000000000 $t
     /tmp/cciXgPzD.s:6521   .text.I2C_ITSlaveSequentialCplt:0000000000000000 I2C_ITSlaveSequentialCplt
     /tmp/cciXgPzD.s:6596   .text.HAL_I2C_AddrCallback:0000000000000000 $t
     /tmp/cciXgPzD.s:6603   .text.HAL_I2C_AddrCallback:0000000000000000 HAL_I2C_AddrCallback
     /tmp/cciXgPzD.s:6617   .text.I2C_ITAddrCplt:0000000000000000 $t
     /tmp/cciXgPzD.s:6623   .text.I2C_ITAddrCplt:0000000000000000 I2C_ITAddrCplt
     /tmp/cciXgPzD.s:6747   .text.HAL_I2C_ListenCpltCallback:0000000000000000 $t
     /tmp/cciXgPzD.s:6754   .text.HAL_I2C_ListenCpltCallback:0000000000000000 HAL_I2C_ListenCpltCallback
     /tmp/cciXgPzD.s:6768   .text.I2C_ITListenCplt:0000000000000000 $t
     /tmp/cciXgPzD.s:6774   .text.I2C_ITListenCplt:0000000000000000 I2C_ITListenCplt
     /tmp/cciXgPzD.s:6850   .text.I2C_ITListenCplt:0000000000000060 $d
     /tmp/cciXgPzD.s:6855   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 $t
     /tmp/cciXgPzD.s:6862   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 HAL_I2C_MemTxCpltCallback
     /tmp/cciXgPzD.s:6876   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 $t
     /tmp/cciXgPzD.s:6883   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 HAL_I2C_MemRxCpltCallback
     /tmp/cciXgPzD.s:6897   .text.HAL_I2C_ErrorCallback:0000000000000000 $t
     /tmp/cciXgPzD.s:6904   .text.HAL_I2C_ErrorCallback:0000000000000000 HAL_I2C_ErrorCallback
     /tmp/cciXgPzD.s:6918   .text.HAL_I2C_AbortCpltCallback:0000000000000000 $t
     /tmp/cciXgPzD.s:6925   .text.HAL_I2C_AbortCpltCallback:0000000000000000 HAL_I2C_AbortCpltCallback
     /tmp/cciXgPzD.s:6939   .text.I2C_ITError:0000000000000000 $t
     /tmp/cciXgPzD.s:6945   .text.I2C_ITError:0000000000000000 I2C_ITError
     /tmp/cciXgPzD.s:7113   .text.I2C_ITError:00000000000000f4 $d
     /tmp/cciXgPzD.s:8478   .text.I2C_DMAAbort:0000000000000000 I2C_DMAAbort
     /tmp/cciXgPzD.s:7120   .text.I2C_ITSlaveCplt:0000000000000000 $t
     /tmp/cciXgPzD.s:7126   .text.I2C_ITSlaveCplt:0000000000000000 I2C_ITSlaveCplt
     /tmp/cciXgPzD.s:7319   .text.I2C_ITSlaveCplt:0000000000000120 $d
     /tmp/cciXgPzD.s:7324   .text.I2C_Slave_ISR_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:7584   .text.I2C_Slave_ISR_DMA:0000000000000000 $t
     /tmp/cciXgPzD.s:7709   .text.I2C_ITMasterCplt:0000000000000000 $t
     /tmp/cciXgPzD.s:7715   .text.I2C_ITMasterCplt:0000000000000000 I2C_ITMasterCplt
     /tmp/cciXgPzD.s:7862   .text.I2C_Master_ISR_IT:0000000000000000 $t
     /tmp/cciXgPzD.s:8153   .text.I2C_Master_ISR_DMA:0000000000000000 $t
     /tmp/cciXgPzD.s:8344   .text.I2C_DMAError:0000000000000000 $t
     /tmp/cciXgPzD.s:8380   .text.HAL_I2C_ER_IRQHandler:0000000000000000 $t
     /tmp/cciXgPzD.s:8387   .text.HAL_I2C_ER_IRQHandler:0000000000000000 HAL_I2C_ER_IRQHandler
     /tmp/cciXgPzD.s:8472   .text.I2C_DMAAbort:0000000000000000 $t
ARM GAS  /tmp/cciXgPzD.s 			page 264


     /tmp/cciXgPzD.s:8529   .text.HAL_I2C_GetState:0000000000000000 $t
     /tmp/cciXgPzD.s:8536   .text.HAL_I2C_GetState:0000000000000000 HAL_I2C_GetState
     /tmp/cciXgPzD.s:8553   .text.HAL_I2C_GetMode:0000000000000000 $t
     /tmp/cciXgPzD.s:8560   .text.HAL_I2C_GetMode:0000000000000000 HAL_I2C_GetMode
     /tmp/cciXgPzD.s:8577   .text.HAL_I2C_GetError:0000000000000000 $t
     /tmp/cciXgPzD.s:8584   .text.HAL_I2C_GetError:0000000000000000 HAL_I2C_GetError

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort_IT

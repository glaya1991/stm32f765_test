ARM GAS  /tmp/cc0Ep11B.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_uart.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.UART_Transmit_IT,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	UART_Transmit_IT:
  24              	.LFB168:
  25              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @file    stm32f7xx_hal_uart.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) UART pins configuration:
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
ARM GAS  /tmp/cc0Ep11B.s 			page 2


  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   Tx/Rx parameters.
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         Three operation modes are available within this driver :
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =================================
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** DMA mode IO operation ***
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ==============================
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
ARM GAS  /tmp/cc0Ep11B.s 			page 3


  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =============================================
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_IT : Clears the specified UART ISR flag
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @endverbatim
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @attention
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      without specific prior written permission.
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/cc0Ep11B.s 			page 4


 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #include "stm32f7xx_hal.h"
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup STM32F7xx_HAL_Driver
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART UART
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief HAL UART module driver
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8))
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc0Ep11B.s 			page 5


 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** ===============================================================================
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in asynchronous mode.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Baud Rate
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Word Length
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Stop Bit
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Hardware flow control
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Over Sampling Method
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the UART mode according to the specified
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  /tmp/cc0Ep11B.s 			page 6


 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the half-duplex mode according to the specified
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
ARM GAS  /tmp/cc0Ep11B.s 			page 7


 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_LIN_WORD_LENGTH(huart->Init.WordLength));
ARM GAS  /tmp/cc0Ep11B.s 			page 8


 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
ARM GAS  /tmp/cc0Ep11B.s 			page 9


 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the wake up method parameter */
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
ARM GAS  /tmp/cc0Ep11B.s 			page 10


 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Polarity select the driver enable polarity.
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AssertionTime Driver Enable assertion time:
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the activation of the DE (Driver 
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         signal and the beginning of the start bit. It is expressed in sample ti
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         units (1/8 or 1/16 bit time, depending on the oversampling rate)
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param DeassertionTime Driver Enable deassertion time:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the end of the last stop bit, in 
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         transmitted message, and the de-activation of the DE (Driver Enable) si
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         It is expressed in sample time units (1/8 or 1/16 bit time, depending o
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         oversampling rate).
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable UART instance */
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable polarity */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable assertion time */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable deassertion time */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cc0Ep11B.s 			page 11


 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable polarity */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable assertion and deassertion times */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT|USART_CR1_DEAT), temp);
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DeInitializes the UART peripheral
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
ARM GAS  /tmp/cc0Ep11B.s 			page 12


 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DeInit the low level hardware */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlock */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP Init
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP DeInit
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### IO operation functions #####
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and Half duplex data transfers.
ARM GAS  /tmp/cc0Ep11B.s 			page 13


 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) There are two mode of transfer:
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            after finishing transfer.
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The end of the data processing will be indicated through the
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            using DMA mode.
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Blocking mode API's are :
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive()
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Transmit_IT()
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Receive_IT()
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
ARM GAS  /tmp/cc0Ep11B.s 			page 14


 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData += 2;
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
ARM GAS  /tmp/cc0Ep11B.s 			page 15


 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* as long as data have to be received */
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxXferCount--;
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData +=2U;
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
ARM GAS  /tmp/cc0Ep11B.s 			page 16


 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
ARM GAS  /tmp/cc0Ep11B.s 			page 17


 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
ARM GAS  /tmp/cc0Ep11B.s 			page 18


 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->TDR, Size);
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_FLAG_TC);
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/cc0Ep11B.s 			page 19


1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the parity bit (MSB position).
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA channel */
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, *(uint32_t*)tmp, Size);
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
ARM GAS  /tmp/cc0Ep11B.s 			page 20


1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  /tmp/cc0Ep11B.s 			page 21


1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If the UART peripheral is still not enabled, enable it */
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_UE) == 0U)
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable UART peripheral */
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_ENABLE(huart);
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
ARM GAS  /tmp/cc0Ep11B.s 			page 22


1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief This function handles UART interrupt request.
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t errorflags;
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If no error occurs */
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (errorflags == RESET)
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       UART_Receive_IT(huart);
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If some errors occur */
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(   (errorflags != RESET)
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc0Ep11B.s 			page 23


1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_Receive_IT(huart);
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          consider error as blocking */
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Abort DMA RX */
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             {
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           else
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
ARM GAS  /tmp/cc0Ep11B.s 			page 24


1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Call user error callback */
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         else
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Call user error callback */
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Error is notified to user through user error callback */
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   } /* End if some error occurs */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_Transmit_IT(huart);
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Tickstart Tick start value
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Timeout Timeout duration
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Wait until flag is set */
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check for the Timeout */
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick()-Tickstart) >=  Timeout))
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
ARM GAS  /tmp/cc0Ep11B.s 			page 25


1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Process Unlocked */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode*/
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = 0U;
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Circular mode */
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
ARM GAS  /tmp/cc0Ep11B.s 			page 26


1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode */
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = 0U;
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	/* At end of Rx process, restore huart->RxState to Ready */
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication error callback
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
ARM GAS  /tmp/cc0Ep11B.s 			page 27


1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->ErrorCode, HAL_UART_ERROR_DMA);
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication abort callback, when call by HAL services on Error
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        (To be called at end of DMA Abort procedure following error occurrence).
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle.
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Tx Transfer completed callbacks
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Rx Transfer completed callbacks
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
ARM GAS  /tmp/cc0Ep11B.s 			page 28


1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART error callbacks
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT()
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
  26              		.loc 1 1566 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
ARM GAS  /tmp/cc0Ep11B.s 			page 29


1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  32              		.loc 1 1570 0
  33 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
  34 0004 DBB2     		uxtb	r3, r3
  35 0006 212B     		cmp	r3, #33
  36 0008 2ED1     		bne	.L6
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
  37              		.loc 1 1573 0
  38 000a B0F85230 		ldrh	r3, [r0, #82]
  39 000e 9BB2     		uxth	r3, r3
  40 0010 8BB1     		cbz	r3, .L7
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
  41              		.loc 1 1585 0
  42 0012 8368     		ldr	r3, [r0, #8]
  43 0014 B3F5805F 		cmp	r3, #4096
  44 0018 19D0     		beq	.L8
  45              	.L4:
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
  46              		.loc 1 1593 0
  47 001a C36C     		ldr	r3, [r0, #76]
  48 001c 5A1C     		adds	r2, r3, #1
  49 001e C264     		str	r2, [r0, #76]
  50 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  51 0022 0368     		ldr	r3, [r0]
  52 0024 9A62     		str	r2, [r3, #40]
  53              	.L5:
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
  54              		.loc 1 1596 0
  55 0026 B0F85230 		ldrh	r3, [r0, #82]
  56 002a 013B     		subs	r3, r3, #1
  57 002c 9BB2     		uxth	r3, r3
  58 002e A0F85230 		strh	r3, [r0, #82]	@ movhi
ARM GAS  /tmp/cc0Ep11B.s 			page 30


1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
  59              		.loc 1 1598 0
  60 0032 0020     		movs	r0, #0
  61              	.LVL1:
  62 0034 7047     		bx	lr
  63              	.LVL2:
  64              	.L7:
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  65              		.loc 1 1576 0
  66 0036 0268     		ldr	r2, [r0]
  67 0038 1368     		ldr	r3, [r2]
  68 003a 23F08003 		bic	r3, r3, #128
  69 003e 1360     		str	r3, [r2]
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  70              		.loc 1 1579 0
  71 0040 0268     		ldr	r2, [r0]
  72 0042 1368     		ldr	r3, [r2]
  73 0044 43F04003 		orr	r3, r3, #64
  74 0048 1360     		str	r3, [r2]
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
  75              		.loc 1 1581 0
  76 004a 0020     		movs	r0, #0
  77              	.LVL3:
  78 004c 7047     		bx	lr
  79              	.LVL4:
  80              	.L8:
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
  81              		.loc 1 1585 0 discriminator 1
  82 004e 0369     		ldr	r3, [r0, #16]
  83 0050 002B     		cmp	r3, #0
  84 0052 E2D1     		bne	.L4
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
  85              		.loc 1 1587 0
  86 0054 C36C     		ldr	r3, [r0, #76]
  87              	.LVL5:
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
  88              		.loc 1 1588 0
  89 0056 1B88     		ldrh	r3, [r3]
  90              	.LVL6:
  91 0058 0268     		ldr	r2, [r0]
  92 005a C3F30803 		ubfx	r3, r3, #0, #9
  93 005e 9362     		str	r3, [r2, #40]
  94              	.LVL7:
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
  95              		.loc 1 1589 0
  96 0060 C36C     		ldr	r3, [r0, #76]
  97 0062 0233     		adds	r3, r3, #2
  98 0064 C364     		str	r3, [r0, #76]
  99 0066 DEE7     		b	.L5
 100              	.L6:
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 101              		.loc 1 1603 0
ARM GAS  /tmp/cc0Ep11B.s 			page 31


 102 0068 0220     		movs	r0, #2
 103              	.LVL8:
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 104              		.loc 1 1605 0
 105 006a 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE168:
 109              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 110              		.align	1
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-d16
 116              	UART_EndTxTransfer:
 117              	.LFB171:
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
ARM GAS  /tmp/cc0Ep11B.s 			page 32


1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 118              		.loc 1 1686 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL9:
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 124              		.loc 1 1688 0
 125 0000 0268     		ldr	r2, [r0]
 126 0002 1368     		ldr	r3, [r2]
 127 0004 23F0C003 		bic	r3, r3, #192
 128 0008 1360     		str	r3, [r2]
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 129              		.loc 1 1691 0
ARM GAS  /tmp/cc0Ep11B.s 			page 33


 130 000a 2023     		movs	r3, #32
 131 000c 80F86930 		strb	r3, [r0, #105]
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 132              		.loc 1 1692 0
 133 0010 7047     		bx	lr
 134              		.cfi_endproc
 135              	.LFE171:
 137              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 138              		.align	1
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 142              		.fpu fpv5-d16
 144              	UART_EndRxTransfer:
 145              	.LFB172:
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 146              		.loc 1 1701 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              	.LVL10:
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 152              		.loc 1 1703 0
 153 0000 0268     		ldr	r2, [r0]
 154 0002 1368     		ldr	r3, [r2]
 155 0004 23F49073 		bic	r3, r3, #288
 156 0008 1360     		str	r3, [r2]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 157              		.loc 1 1704 0
 158 000a 0268     		ldr	r2, [r0]
 159 000c 9368     		ldr	r3, [r2, #8]
 160 000e 23F00103 		bic	r3, r3, #1
 161 0012 9360     		str	r3, [r2, #8]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 162              		.loc 1 1707 0
 163 0014 2023     		movs	r3, #32
 164 0016 80F86A30 		strb	r3, [r0, #106]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 165              		.loc 1 1708 0
 166 001a 7047     		bx	lr
 167              		.cfi_endproc
 168              	.LFE172:
 170              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 171              		.align	1
 172              		.weak	HAL_UART_MspInit
ARM GAS  /tmp/cc0Ep11B.s 			page 34


 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv5-d16
 178              	HAL_UART_MspInit:
 179              	.LFB144:
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 180              		.loc 1 624 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185              	.LVL11:
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 186              		.loc 1 631 0
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE144:
 191              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 192              		.align	1
 193              		.weak	HAL_UART_MspDeInit
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv5-d16
 199              	HAL_UART_MspDeInit:
 200              	.LFB145:
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 201              		.loc 1 639 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL12:
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 207              		.loc 1 646 0
 208 0000 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE145:
 212              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 213              		.align	1
 214              		.global	HAL_UART_DeInit
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv5-d16
 220              	HAL_UART_DeInit:
 221              	.LFB143:
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 222              		.loc 1 586 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              	.LVL13:
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 227              		.loc 1 588 0
 228 0000 D8B1     		cbz	r0, .L15
ARM GAS  /tmp/cc0Ep11B.s 			page 35


 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 229              		.loc 1 586 0
 230 0002 38B5     		push	{r3, r4, r5, lr}
 231              	.LCFI0:
 232              		.cfi_def_cfa_offset 16
 233              		.cfi_offset 3, -16
 234              		.cfi_offset 4, -12
 235              		.cfi_offset 5, -8
 236              		.cfi_offset 14, -4
 237 0004 0446     		mov	r4, r0
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 238              		.loc 1 596 0
 239 0006 2423     		movs	r3, #36
 240 0008 80F86930 		strb	r3, [r0, #105]
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 241              		.loc 1 599 0
 242 000c 0268     		ldr	r2, [r0]
 243 000e 1368     		ldr	r3, [r2]
 244 0010 23F00103 		bic	r3, r3, #1
 245 0014 1360     		str	r3, [r2]
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 246              		.loc 1 601 0
 247 0016 0368     		ldr	r3, [r0]
 248 0018 0025     		movs	r5, #0
 249 001a 1D60     		str	r5, [r3]
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 250              		.loc 1 602 0
 251 001c 0368     		ldr	r3, [r0]
 252 001e 5D60     		str	r5, [r3, #4]
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 253              		.loc 1 603 0
 254 0020 0368     		ldr	r3, [r0]
 255 0022 9D60     		str	r5, [r3, #8]
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 256              		.loc 1 606 0
 257 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 258              	.LVL14:
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 259              		.loc 1 608 0
 260 0028 E566     		str	r5, [r4, #108]
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 261              		.loc 1 609 0
 262 002a 84F86950 		strb	r5, [r4, #105]
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 263              		.loc 1 610 0
 264 002e 84F86A50 		strb	r5, [r4, #106]
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 265              		.loc 1 613 0
 266 0032 84F86850 		strb	r5, [r4, #104]
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 267              		.loc 1 615 0
 268 0036 2846     		mov	r0, r5
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 269              		.loc 1 616 0
 270 0038 38BD     		pop	{r3, r4, r5, pc}
 271              	.LVL15:
 272              	.L15:
ARM GAS  /tmp/cc0Ep11B.s 			page 36


 273              	.LCFI1:
 274              		.cfi_def_cfa_offset 0
 275              		.cfi_restore 3
 276              		.cfi_restore 4
 277              		.cfi_restore 5
 278              		.cfi_restore 14
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 279              		.loc 1 590 0
 280 003a 0120     		movs	r0, #1
 281              	.LVL16:
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 282              		.loc 1 616 0
 283 003c 7047     		bx	lr
 284              		.cfi_endproc
 285              	.LFE143:
 287              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 288              		.align	1
 289              		.global	HAL_UART_Transmit_IT
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv5-d16
 295              	HAL_UART_Transmit_IT:
 296              	.LFB148:
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 297              		.loc 1 857 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302              	.LVL17:
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 303              		.loc 1 859 0
 304 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 305 0004 DBB2     		uxtb	r3, r3
 306 0006 202B     		cmp	r3, #32
 307 0008 1DD1     		bne	.L22
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 308              		.loc 1 861 0
 309 000a B2FA82F3 		clz	r3, r2
 310 000e 5B09     		lsrs	r3, r3, #5
 311 0010 0029     		cmp	r1, #0
 312 0012 08BF     		it	eq
 313 0014 0123     		moveq	r3, #1
 314 0016 C3B9     		cbnz	r3, .L23
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 315              		.loc 1 867 0
 316 0018 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 317 001c 012B     		cmp	r3, #1
 318 001e 16D0     		beq	.L24
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 319              		.loc 1 869 0 discriminator 2
 320 0020 C164     		str	r1, [r0, #76]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 321              		.loc 1 870 0 discriminator 2
 322 0022 A0F85020 		strh	r2, [r0, #80]	@ movhi
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc0Ep11B.s 			page 37


 323              		.loc 1 871 0 discriminator 2
 324 0026 A0F85220 		strh	r2, [r0, #82]	@ movhi
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 325              		.loc 1 873 0 discriminator 2
 326 002a 0023     		movs	r3, #0
 327 002c C366     		str	r3, [r0, #108]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 328              		.loc 1 874 0 discriminator 2
 329 002e 2122     		movs	r2, #33
 330              	.LVL18:
 331 0030 80F86920 		strb	r2, [r0, #105]
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 332              		.loc 1 877 0 discriminator 2
 333 0034 80F86830 		strb	r3, [r0, #104]
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 334              		.loc 1 880 0 discriminator 2
 335 0038 0168     		ldr	r1, [r0]
 336              	.LVL19:
 337 003a 0A68     		ldr	r2, [r1]
 338 003c 42F08002 		orr	r2, r2, #128
 339 0040 0A60     		str	r2, [r1]
 340              	.LVL20:
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 341              		.loc 1 882 0 discriminator 2
 342 0042 1846     		mov	r0, r3
 343              	.LVL21:
 344 0044 7047     		bx	lr
 345              	.LVL22:
 346              	.L22:
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 347              		.loc 1 886 0
 348 0046 0220     		movs	r0, #2
 349              	.LVL23:
 350 0048 7047     		bx	lr
 351              	.LVL24:
 352              	.L23:
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 353              		.loc 1 863 0
 354 004a 0120     		movs	r0, #1
 355              	.LVL25:
 356 004c 7047     		bx	lr
 357              	.LVL26:
 358              	.L24:
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 359              		.loc 1 867 0
 360 004e 0220     		movs	r0, #2
 361              	.LVL27:
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 362              		.loc 1 888 0
 363 0050 7047     		bx	lr
 364              		.cfi_endproc
 365              	.LFE148:
 367              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 368              		.align	1
 369              		.global	HAL_UART_Receive_IT
 370              		.syntax unified
 371              		.thumb
ARM GAS  /tmp/cc0Ep11B.s 			page 38


 372              		.thumb_func
 373              		.fpu fpv5-d16
 375              	HAL_UART_Receive_IT:
 376              	.LFB149:
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 377              		.loc 1 898 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382              	.LVL28:
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 383              		.loc 1 900 0
 384 0000 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 385 0004 DBB2     		uxtb	r3, r3
 386 0006 202B     		cmp	r3, #32
 387 0008 4DD1     		bne	.L33
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 388              		.loc 1 902 0
 389 000a B2FA82F3 		clz	r3, r2
 390 000e 5B09     		lsrs	r3, r3, #5
 391 0010 0029     		cmp	r1, #0
 392 0012 08BF     		it	eq
 393 0014 0123     		moveq	r3, #1
 394 0016 002B     		cmp	r3, #0
 395 0018 47D1     		bne	.L34
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 396              		.loc 1 908 0
 397 001a 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 398 001e 012B     		cmp	r3, #1
 399 0020 45D0     		beq	.L35
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 400              		.loc 1 908 0 is_stmt 0 discriminator 2
 401 0022 0123     		movs	r3, #1
 402 0024 80F86830 		strb	r3, [r0, #104]
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 403              		.loc 1 910 0 is_stmt 1 discriminator 2
 404 0028 4165     		str	r1, [r0, #84]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 405              		.loc 1 911 0 discriminator 2
 406 002a A0F85820 		strh	r2, [r0, #88]	@ movhi
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 407              		.loc 1 912 0 discriminator 2
 408 002e A0F85A20 		strh	r2, [r0, #90]	@ movhi
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 409              		.loc 1 915 0 discriminator 2
 410 0032 8368     		ldr	r3, [r0, #8]
 411 0034 B3F5805F 		cmp	r3, #4096
 412 0038 06D0     		beq	.L36
 413 003a A3B9     		cbnz	r3, .L30
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 414              		.loc 1 915 0 is_stmt 0 discriminator 5
 415 003c 0369     		ldr	r3, [r0, #16]
 416 003e 73B9     		cbnz	r3, .L31
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 417              		.loc 1 915 0 discriminator 7
 418 0040 FF23     		movs	r3, #255
ARM GAS  /tmp/cc0Ep11B.s 			page 39


 419 0042 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 420 0046 11E0     		b	.L29
 421              	.L36:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 422              		.loc 1 915 0 discriminator 1
 423 0048 0369     		ldr	r3, [r0, #16]
 424 004a 23B9     		cbnz	r3, .L28
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 425              		.loc 1 915 0 discriminator 3
 426 004c 40F2FF13 		movw	r3, #511
 427 0050 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 428 0054 0AE0     		b	.L29
 429              	.L28:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 430              		.loc 1 915 0 discriminator 4
 431 0056 FF23     		movs	r3, #255
 432 0058 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 433 005c 06E0     		b	.L29
 434              	.L31:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 435              		.loc 1 915 0 discriminator 8
 436 005e 7F23     		movs	r3, #127
 437 0060 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 438 0064 02E0     		b	.L29
 439              	.L30:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 440              		.loc 1 915 0 discriminator 6
 441 0066 B3F1805F 		cmp	r3, #268435456
 442 006a 12D0     		beq	.L37
 443              	.L29:
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 444              		.loc 1 917 0 is_stmt 1
 445 006c 0023     		movs	r3, #0
 446 006e C366     		str	r3, [r0, #108]
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 447              		.loc 1 918 0
 448 0070 2222     		movs	r2, #34
 449              	.LVL29:
 450 0072 80F86A20 		strb	r2, [r0, #106]
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 451              		.loc 1 921 0
 452 0076 80F86830 		strb	r3, [r0, #104]
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 453              		.loc 1 924 0
 454 007a 0168     		ldr	r1, [r0]
 455              	.LVL30:
 456 007c 8A68     		ldr	r2, [r1, #8]
 457 007e 42F00102 		orr	r2, r2, #1
 458 0082 8A60     		str	r2, [r1, #8]
 459              	.LVL31:
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 460              		.loc 1 927 0
 461 0084 0168     		ldr	r1, [r0]
 462 0086 0A68     		ldr	r2, [r1]
 463 0088 42F49072 		orr	r2, r2, #288
 464 008c 0A60     		str	r2, [r1]
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
ARM GAS  /tmp/cc0Ep11B.s 			page 40


 465              		.loc 1 929 0
 466 008e 1846     		mov	r0, r3
 467              	.LVL32:
 468 0090 7047     		bx	lr
 469              	.LVL33:
 470              	.L37:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 471              		.loc 1 915 0 discriminator 9
 472 0092 0369     		ldr	r3, [r0, #16]
 473 0094 1BB9     		cbnz	r3, .L32
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 474              		.loc 1 915 0 is_stmt 0 discriminator 10
 475 0096 7F23     		movs	r3, #127
 476 0098 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 477 009c E6E7     		b	.L29
 478              	.L32:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 479              		.loc 1 915 0 discriminator 11
 480 009e 3F23     		movs	r3, #63
 481 00a0 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 482 00a4 E2E7     		b	.L29
 483              	.L33:
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 484              		.loc 1 933 0 is_stmt 1
 485 00a6 0220     		movs	r0, #2
 486              	.LVL34:
 487 00a8 7047     		bx	lr
 488              	.LVL35:
 489              	.L34:
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 490              		.loc 1 904 0
 491 00aa 0120     		movs	r0, #1
 492              	.LVL36:
 493 00ac 7047     		bx	lr
 494              	.LVL37:
 495              	.L35:
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 496              		.loc 1 908 0
 497 00ae 0220     		movs	r0, #2
 498              	.LVL38:
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 499              		.loc 1 935 0
 500 00b0 7047     		bx	lr
 501              		.cfi_endproc
 502              	.LFE149:
 504              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 505              		.align	1
 506              		.global	HAL_UART_Transmit_DMA
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 510              		.fpu fpv5-d16
 512              	HAL_UART_Transmit_DMA:
 513              	.LFB150:
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 514              		.loc 1 945 0
 515              		.cfi_startproc
ARM GAS  /tmp/cc0Ep11B.s 			page 41


 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              	.LVL39:
 519 0000 38B5     		push	{r3, r4, r5, lr}
 520              	.LCFI2:
 521              		.cfi_def_cfa_offset 16
 522              		.cfi_offset 3, -16
 523              		.cfi_offset 4, -12
 524              		.cfi_offset 5, -8
 525              		.cfi_offset 14, -4
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 526              		.loc 1 949 0
 527 0002 90F86950 		ldrb	r5, [r0, #105]	@ zero_extendqisi2
 528 0006 EDB2     		uxtb	r5, r5
 529 0008 202D     		cmp	r5, #32
 530 000a 35D1     		bne	.L40
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 531              		.loc 1 951 0
 532 000c B2FA82F5 		clz	r5, r2
 533 0010 6D09     		lsrs	r5, r5, #5
 534 0012 0029     		cmp	r1, #0
 535 0014 08BF     		it	eq
 536 0016 0125     		moveq	r5, #1
 537 0018 002D     		cmp	r5, #0
 538 001a 2FD1     		bne	.L41
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 539              		.loc 1 957 0
 540 001c 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 541 0020 012B     		cmp	r3, #1
 542 0022 2DD0     		beq	.L42
 543 0024 1346     		mov	r3, r2
 544 0026 0446     		mov	r4, r0
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 545              		.loc 1 957 0 is_stmt 0 discriminator 2
 546 0028 0122     		movs	r2, #1
 547              	.LVL40:
 548 002a 80F86820 		strb	r2, [r0, #104]
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 549              		.loc 1 959 0 is_stmt 1 discriminator 2
 550 002e C164     		str	r1, [r0, #76]
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 551              		.loc 1 960 0 discriminator 2
 552 0030 A0F85030 		strh	r3, [r0, #80]	@ movhi
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 553              		.loc 1 961 0 discriminator 2
 554 0034 A0F85230 		strh	r3, [r0, #82]	@ movhi
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 555              		.loc 1 963 0 discriminator 2
 556 0038 C566     		str	r5, [r0, #108]
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 557              		.loc 1 964 0 discriminator 2
 558 003a 2122     		movs	r2, #33
 559 003c 80F86920 		strb	r2, [r0, #105]
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 560              		.loc 1 967 0 discriminator 2
 561 0040 026E     		ldr	r2, [r0, #96]
 562 0042 1048     		ldr	r0, .L44
ARM GAS  /tmp/cc0Ep11B.s 			page 42


 563              	.LVL41:
 564 0044 D063     		str	r0, [r2, #60]
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 565              		.loc 1 970 0 discriminator 2
 566 0046 226E     		ldr	r2, [r4, #96]
 567 0048 0F48     		ldr	r0, .L44+4
 568 004a 1064     		str	r0, [r2, #64]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 569              		.loc 1 973 0 discriminator 2
 570 004c 226E     		ldr	r2, [r4, #96]
 571 004e 0F48     		ldr	r0, .L44+8
 572 0050 D064     		str	r0, [r2, #76]
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 573              		.loc 1 976 0 discriminator 2
 574 0052 226E     		ldr	r2, [r4, #96]
 575 0054 1565     		str	r5, [r2, #80]
 576              	.LVL42:
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 577              		.loc 1 980 0 discriminator 2
 578 0056 2268     		ldr	r2, [r4]
 579 0058 2832     		adds	r2, r2, #40
 580 005a 206E     		ldr	r0, [r4, #96]
 581 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 582              	.LVL43:
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 583              		.loc 1 983 0 discriminator 2
 584 0060 2368     		ldr	r3, [r4]
 585 0062 4022     		movs	r2, #64
 586 0064 1A62     		str	r2, [r3, #32]
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 587              		.loc 1 986 0 discriminator 2
 588 0066 84F86850 		strb	r5, [r4, #104]
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 589              		.loc 1 990 0 discriminator 2
 590 006a 2268     		ldr	r2, [r4]
 591 006c 9368     		ldr	r3, [r2, #8]
 592 006e 43F08003 		orr	r3, r3, #128
 593 0072 9360     		str	r3, [r2, #8]
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 594              		.loc 1 992 0 discriminator 2
 595 0074 2846     		mov	r0, r5
 596 0076 00E0     		b	.L39
 597              	.LVL44:
 598              	.L40:
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 599              		.loc 1 996 0
 600 0078 0220     		movs	r0, #2
 601              	.LVL45:
 602              	.L39:
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 603              		.loc 1 998 0
 604 007a 38BD     		pop	{r3, r4, r5, pc}
 605              	.LVL46:
 606              	.L41:
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 607              		.loc 1 953 0
 608 007c 0120     		movs	r0, #1
ARM GAS  /tmp/cc0Ep11B.s 			page 43


 609              	.LVL47:
 610 007e FCE7     		b	.L39
 611              	.LVL48:
 612              	.L42:
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 613              		.loc 1 957 0
 614 0080 0220     		movs	r0, #2
 615              	.LVL49:
 616 0082 FAE7     		b	.L39
 617              	.L45:
 618              		.align	2
 619              	.L44:
 620 0084 00000000 		.word	UART_DMATransmitCplt
 621 0088 00000000 		.word	UART_DMATxHalfCplt
 622 008c 00000000 		.word	UART_DMAError
 623              		.cfi_endproc
 624              	.LFE150:
 626              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 627              		.align	1
 628              		.global	HAL_UART_Receive_DMA
 629              		.syntax unified
 630              		.thumb
 631              		.thumb_func
 632              		.fpu fpv5-d16
 634              	HAL_UART_Receive_DMA:
 635              	.LFB151:
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 636              		.loc 1 1010 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640              	.LVL50:
 641 0000 38B5     		push	{r3, r4, r5, lr}
 642              	.LCFI3:
 643              		.cfi_def_cfa_offset 16
 644              		.cfi_offset 3, -16
 645              		.cfi_offset 4, -12
 646              		.cfi_offset 5, -8
 647              		.cfi_offset 14, -4
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 648              		.loc 1 1014 0
 649 0002 90F86A50 		ldrb	r5, [r0, #106]	@ zero_extendqisi2
 650 0006 EDB2     		uxtb	r5, r5
 651 0008 202D     		cmp	r5, #32
 652 000a 3BD1     		bne	.L48
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 653              		.loc 1 1016 0
 654 000c B2FA82F5 		clz	r5, r2
 655 0010 6D09     		lsrs	r5, r5, #5
 656 0012 0029     		cmp	r1, #0
 657 0014 08BF     		it	eq
 658 0016 0125     		moveq	r5, #1
 659 0018 002D     		cmp	r5, #0
 660 001a 35D1     		bne	.L49
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 661              		.loc 1 1022 0
 662 001c 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
ARM GAS  /tmp/cc0Ep11B.s 			page 44


 663 0020 012B     		cmp	r3, #1
 664 0022 33D0     		beq	.L50
 665 0024 1346     		mov	r3, r2
 666 0026 0A46     		mov	r2, r1
 667              	.LVL51:
 668 0028 0446     		mov	r4, r0
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 669              		.loc 1 1022 0 is_stmt 0 discriminator 2
 670 002a 0121     		movs	r1, #1
 671              	.LVL52:
 672 002c 80F86810 		strb	r1, [r0, #104]
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 673              		.loc 1 1024 0 is_stmt 1 discriminator 2
 674 0030 4265     		str	r2, [r0, #84]
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 675              		.loc 1 1025 0 discriminator 2
 676 0032 A0F85830 		strh	r3, [r0, #88]	@ movhi
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 677              		.loc 1 1027 0 discriminator 2
 678 0036 C566     		str	r5, [r0, #108]
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 679              		.loc 1 1028 0 discriminator 2
 680 0038 2221     		movs	r1, #34
 681 003a 80F86A10 		strb	r1, [r0, #106]
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 682              		.loc 1 1031 0 discriminator 2
 683 003e 416E     		ldr	r1, [r0, #100]
 684 0040 1348     		ldr	r0, .L52
 685              	.LVL53:
 686 0042 C863     		str	r0, [r1, #60]
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 687              		.loc 1 1034 0 discriminator 2
 688 0044 616E     		ldr	r1, [r4, #100]
 689 0046 1348     		ldr	r0, .L52+4
 690 0048 0864     		str	r0, [r1, #64]
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 691              		.loc 1 1037 0 discriminator 2
 692 004a 616E     		ldr	r1, [r4, #100]
 693 004c 1248     		ldr	r0, .L52+8
 694 004e C864     		str	r0, [r1, #76]
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 695              		.loc 1 1040 0 discriminator 2
 696 0050 616E     		ldr	r1, [r4, #100]
 697 0052 0D65     		str	r5, [r1, #80]
 698              	.LVL54:
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 699              		.loc 1 1044 0 discriminator 2
 700 0054 2168     		ldr	r1, [r4]
 701 0056 2431     		adds	r1, r1, #36
 702 0058 606E     		ldr	r0, [r4, #100]
 703 005a FFF7FEFF 		bl	HAL_DMA_Start_IT
 704              	.LVL55:
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 705              		.loc 1 1047 0 discriminator 2
 706 005e 84F86850 		strb	r5, [r4, #104]
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 707              		.loc 1 1050 0 discriminator 2
ARM GAS  /tmp/cc0Ep11B.s 			page 45


 708 0062 2268     		ldr	r2, [r4]
 709 0064 1368     		ldr	r3, [r2]
 710 0066 43F48073 		orr	r3, r3, #256
 711 006a 1360     		str	r3, [r2]
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 712              		.loc 1 1053 0 discriminator 2
 713 006c 2268     		ldr	r2, [r4]
 714 006e 9368     		ldr	r3, [r2, #8]
 715 0070 43F00103 		orr	r3, r3, #1
 716 0074 9360     		str	r3, [r2, #8]
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 717              		.loc 1 1057 0 discriminator 2
 718 0076 2268     		ldr	r2, [r4]
 719 0078 9368     		ldr	r3, [r2, #8]
 720 007a 43F04003 		orr	r3, r3, #64
 721 007e 9360     		str	r3, [r2, #8]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 722              		.loc 1 1059 0 discriminator 2
 723 0080 2846     		mov	r0, r5
 724 0082 00E0     		b	.L47
 725              	.LVL56:
 726              	.L48:
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 727              		.loc 1 1063 0
 728 0084 0220     		movs	r0, #2
 729              	.LVL57:
 730              	.L47:
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 731              		.loc 1 1065 0
 732 0086 38BD     		pop	{r3, r4, r5, pc}
 733              	.LVL58:
 734              	.L49:
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 735              		.loc 1 1018 0
 736 0088 0120     		movs	r0, #1
 737              	.LVL59:
 738 008a FCE7     		b	.L47
 739              	.LVL60:
 740              	.L50:
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 741              		.loc 1 1022 0
 742 008c 0220     		movs	r0, #2
 743              	.LVL61:
 744 008e FAE7     		b	.L47
 745              	.L53:
 746              		.align	2
 747              	.L52:
 748 0090 00000000 		.word	UART_DMAReceiveCplt
 749 0094 00000000 		.word	UART_DMARxHalfCplt
 750 0098 00000000 		.word	UART_DMAError
 751              		.cfi_endproc
 752              	.LFE151:
 754              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 755              		.align	1
 756              		.global	HAL_UART_DMAPause
 757              		.syntax unified
 758              		.thumb
ARM GAS  /tmp/cc0Ep11B.s 			page 46


 759              		.thumb_func
 760              		.fpu fpv5-d16
 762              	HAL_UART_DMAPause:
 763              	.LFB152:
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 764              		.loc 1 1073 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 769              	.LVL62:
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 770              		.loc 1 1075 0
 771 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 772 0004 012B     		cmp	r3, #1
 773 0006 2FD0     		beq	.L58
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 774              		.loc 1 1075 0 is_stmt 0 discriminator 2
 775 0008 0123     		movs	r3, #1
 776 000a 80F86830 		strb	r3, [r0, #104]
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 777              		.loc 1 1077 0 is_stmt 1 discriminator 2
 778 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 779 0012 DBB2     		uxtb	r3, r3
 780 0014 212B     		cmp	r3, #33
 781 0016 09D0     		beq	.L59
 782              	.L56:
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 783              		.loc 1 1083 0
 784 0018 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 785 001c DBB2     		uxtb	r3, r3
 786 001e 222B     		cmp	r3, #34
 787 0020 0ED0     		beq	.L60
 788              	.L57:
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 789              		.loc 1 1095 0
 790 0022 0023     		movs	r3, #0
 791 0024 80F86830 		strb	r3, [r0, #104]
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 792              		.loc 1 1097 0
 793 0028 1846     		mov	r0, r3
 794              	.LVL63:
 795 002a 7047     		bx	lr
 796              	.LVL64:
 797              	.L59:
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 798              		.loc 1 1078 0 discriminator 1
 799 002c 0368     		ldr	r3, [r0]
 800 002e 9A68     		ldr	r2, [r3, #8]
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 801              		.loc 1 1077 0 discriminator 1
 802 0030 12F0800F 		tst	r2, #128
 803 0034 F0D0     		beq	.L56
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 804              		.loc 1 1081 0
 805 0036 9A68     		ldr	r2, [r3, #8]
 806 0038 22F08002 		bic	r2, r2, #128
ARM GAS  /tmp/cc0Ep11B.s 			page 47


 807 003c 9A60     		str	r2, [r3, #8]
 808 003e EBE7     		b	.L56
 809              	.L60:
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 810              		.loc 1 1084 0 discriminator 1
 811 0040 0368     		ldr	r3, [r0]
 812 0042 9A68     		ldr	r2, [r3, #8]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 813              		.loc 1 1083 0 discriminator 1
 814 0044 12F0400F 		tst	r2, #64
 815 0048 EBD0     		beq	.L57
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 816              		.loc 1 1087 0
 817 004a 1A68     		ldr	r2, [r3]
 818 004c 22F48072 		bic	r2, r2, #256
 819 0050 1A60     		str	r2, [r3]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 820              		.loc 1 1088 0
 821 0052 0268     		ldr	r2, [r0]
 822 0054 9368     		ldr	r3, [r2, #8]
 823 0056 23F00103 		bic	r3, r3, #1
 824 005a 9360     		str	r3, [r2, #8]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 825              		.loc 1 1091 0
 826 005c 0268     		ldr	r2, [r0]
 827 005e 9368     		ldr	r3, [r2, #8]
 828 0060 23F04003 		bic	r3, r3, #64
 829 0064 9360     		str	r3, [r2, #8]
 830 0066 DCE7     		b	.L57
 831              	.L58:
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 832              		.loc 1 1075 0
 833 0068 0220     		movs	r0, #2
 834              	.LVL65:
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 835              		.loc 1 1098 0
 836 006a 7047     		bx	lr
 837              		.cfi_endproc
 838              	.LFE152:
 840              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 841              		.align	1
 842              		.global	HAL_UART_DMAResume
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu fpv5-d16
 848              	HAL_UART_DMAResume:
 849              	.LFB153:
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 850              		.loc 1 1106 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855              	.LVL66:
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 856              		.loc 1 1108 0
ARM GAS  /tmp/cc0Ep11B.s 			page 48


 857 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 858 0004 012B     		cmp	r3, #1
 859 0006 30D0     		beq	.L65
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 860              		.loc 1 1108 0 is_stmt 0 discriminator 2
 861 0008 0123     		movs	r3, #1
 862 000a 80F86830 		strb	r3, [r0, #104]
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 863              		.loc 1 1110 0 is_stmt 1 discriminator 2
 864 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 865 0012 DBB2     		uxtb	r3, r3
 866 0014 212B     		cmp	r3, #33
 867 0016 0FD0     		beq	.L67
 868              	.L63:
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 869              		.loc 1 1115 0
 870 0018 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 871 001c DBB2     		uxtb	r3, r3
 872 001e 222B     		cmp	r3, #34
 873 0020 10D0     		beq	.L68
 874              	.L64:
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 875              		.loc 1 1129 0
 876 0022 0368     		ldr	r3, [r0]
 877 0024 1A68     		ldr	r2, [r3]
 878 0026 12F0010F 		tst	r2, #1
 879 002a 20D1     		bne	.L66
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 880              		.loc 1 1132 0
 881 002c 1A68     		ldr	r2, [r3]
 882 002e 42F00102 		orr	r2, r2, #1
 883 0032 1A60     		str	r2, [r3]
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 884              		.loc 1 1135 0
 885 0034 0020     		movs	r0, #0
 886              	.LVL67:
 887 0036 7047     		bx	lr
 888              	.LVL68:
 889              	.L67:
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 890              		.loc 1 1113 0
 891 0038 0268     		ldr	r2, [r0]
 892 003a 9368     		ldr	r3, [r2, #8]
 893 003c 43F08003 		orr	r3, r3, #128
 894 0040 9360     		str	r3, [r2, #8]
 895 0042 E9E7     		b	.L63
 896              	.L68:
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 897              		.loc 1 1118 0
 898 0044 0368     		ldr	r3, [r0]
 899 0046 0822     		movs	r2, #8
 900 0048 1A62     		str	r2, [r3, #32]
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 901              		.loc 1 1121 0
 902 004a 0268     		ldr	r2, [r0]
 903 004c 1368     		ldr	r3, [r2]
 904 004e 43F48073 		orr	r3, r3, #256
ARM GAS  /tmp/cc0Ep11B.s 			page 49


 905 0052 1360     		str	r3, [r2]
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 906              		.loc 1 1122 0
 907 0054 0268     		ldr	r2, [r0]
 908 0056 9368     		ldr	r3, [r2, #8]
 909 0058 43F00103 		orr	r3, r3, #1
 910 005c 9360     		str	r3, [r2, #8]
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 911              		.loc 1 1125 0
 912 005e 0268     		ldr	r2, [r0]
 913 0060 9368     		ldr	r3, [r2, #8]
 914 0062 43F04003 		orr	r3, r3, #64
 915 0066 9360     		str	r3, [r2, #8]
 916 0068 DBE7     		b	.L64
 917              	.L65:
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 918              		.loc 1 1108 0
 919 006a 0220     		movs	r0, #2
 920              	.LVL69:
 921 006c 7047     		bx	lr
 922              	.LVL70:
 923              	.L66:
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 924              		.loc 1 1135 0
 925 006e 0020     		movs	r0, #0
 926              	.LVL71:
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 927              		.loc 1 1136 0
 928 0070 7047     		bx	lr
 929              		.cfi_endproc
 930              	.LFE153:
 932              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 933              		.align	1
 934              		.global	HAL_UART_DMAStop
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 938              		.fpu fpv5-d16
 940              	HAL_UART_DMAStop:
 941              	.LFB154:
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 942              		.loc 1 1144 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              	.LVL72:
 947 0000 10B5     		push	{r4, lr}
 948              	.LCFI4:
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 4, -8
 951              		.cfi_offset 14, -4
 952 0002 0446     		mov	r4, r0
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 953              		.loc 1 1153 0
 954 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 955 0008 DBB2     		uxtb	r3, r3
 956 000a 212B     		cmp	r3, #33
ARM GAS  /tmp/cc0Ep11B.s 			page 50


 957 000c 06D0     		beq	.L75
 958              	.LVL73:
 959              	.L70:
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 960              		.loc 1 1168 0
 961 000e 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 962 0012 DBB2     		uxtb	r3, r3
 963 0014 222B     		cmp	r3, #34
 964 0016 12D0     		beq	.L76
 965              	.L72:
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 966              		.loc 1 1183 0
 967 0018 0020     		movs	r0, #0
 968 001a 10BD     		pop	{r4, pc}
 969              	.LVL74:
 970              	.L75:
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 971              		.loc 1 1154 0 discriminator 1
 972 001c 0368     		ldr	r3, [r0]
 973 001e 9A68     		ldr	r2, [r3, #8]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 974              		.loc 1 1153 0 discriminator 1
 975 0020 12F0800F 		tst	r2, #128
 976 0024 F3D0     		beq	.L70
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 977              		.loc 1 1156 0
 978 0026 9A68     		ldr	r2, [r3, #8]
 979 0028 22F08002 		bic	r2, r2, #128
 980 002c 9A60     		str	r2, [r3, #8]
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 981              		.loc 1 1159 0
 982 002e 006E     		ldr	r0, [r0, #96]
 983              	.LVL75:
 984 0030 08B1     		cbz	r0, .L71
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 985              		.loc 1 1161 0
 986 0032 FFF7FEFF 		bl	HAL_DMA_Abort
 987              	.LVL76:
 988              	.L71:
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 989              		.loc 1 1164 0
 990 0036 2046     		mov	r0, r4
 991 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 992              	.LVL77:
 993 003c E7E7     		b	.L70
 994              	.L76:
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 995              		.loc 1 1169 0 discriminator 1
 996 003e 2368     		ldr	r3, [r4]
 997 0040 9A68     		ldr	r2, [r3, #8]
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 998              		.loc 1 1168 0 discriminator 1
 999 0042 12F0400F 		tst	r2, #64
 1000 0046 E7D0     		beq	.L72
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1001              		.loc 1 1171 0
 1002 0048 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/cc0Ep11B.s 			page 51


 1003 004a 22F04002 		bic	r2, r2, #64
 1004 004e 9A60     		str	r2, [r3, #8]
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1005              		.loc 1 1174 0
 1006 0050 606E     		ldr	r0, [r4, #100]
 1007 0052 08B1     		cbz	r0, .L73
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1008              		.loc 1 1176 0
 1009 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1010              	.LVL78:
 1011              	.L73:
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1012              		.loc 1 1179 0
 1013 0058 2046     		mov	r0, r4
 1014 005a FFF7FEFF 		bl	UART_EndRxTransfer
 1015              	.LVL79:
 1016 005e DBE7     		b	.L72
 1017              		.cfi_endproc
 1018              	.LFE154:
 1020              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 1021              		.align	1
 1022              		.global	UART_WaitOnFlagUntilTimeout
 1023              		.syntax unified
 1024              		.thumb
 1025              		.thumb_func
 1026              		.fpu fpv5-d16
 1028              	UART_WaitOnFlagUntilTimeout:
 1029              	.LFB156:
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Wait until flag is set */
 1030              		.loc 1 1336 0
 1031              		.cfi_startproc
 1032              		@ args = 4, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034              	.LVL80:
 1035 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1036              	.LCFI5:
 1037              		.cfi_def_cfa_offset 24
 1038              		.cfi_offset 4, -24
 1039              		.cfi_offset 5, -20
 1040              		.cfi_offset 6, -16
 1041              		.cfi_offset 7, -12
 1042              		.cfi_offset 8, -8
 1043              		.cfi_offset 14, -4
 1044 0004 0546     		mov	r5, r0
 1045 0006 0F46     		mov	r7, r1
 1046 0008 1646     		mov	r6, r2
 1047 000a 9846     		mov	r8, r3
 1048 000c 069C     		ldr	r4, [sp, #24]
 1049              	.LVL81:
 1050              	.L79:
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1051              		.loc 1 1338 0
 1052 000e 2B68     		ldr	r3, [r5]
 1053 0010 DB69     		ldr	r3, [r3, #28]
 1054 0012 37EA0303 		bics	r3, r7, r3
 1055 0016 0CBF     		ite	eq
 1056 0018 0123     		moveq	r3, #1
ARM GAS  /tmp/cc0Ep11B.s 			page 52


 1057 001a 0023     		movne	r3, #0
 1058 001c B342     		cmp	r3, r6
 1059 001e 1DD1     		bne	.L84
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1060              		.loc 1 1341 0
 1061 0020 B4F1FF3F 		cmp	r4, #-1
 1062 0024 F3D0     		beq	.L79
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1063              		.loc 1 1343 0
 1064 0026 2CB1     		cbz	r4, .L80
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1065              		.loc 1 1343 0 is_stmt 0 discriminator 1
 1066 0028 FFF7FEFF 		bl	HAL_GetTick
 1067              	.LVL82:
 1068 002c A0EB0800 		sub	r0, r0, r8
 1069 0030 A042     		cmp	r0, r4
 1070 0032 ECD3     		bcc	.L79
 1071              	.L80:
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1072              		.loc 1 1346 0 is_stmt 1
 1073 0034 2A68     		ldr	r2, [r5]
 1074 0036 1368     		ldr	r3, [r2]
 1075 0038 23F4D073 		bic	r3, r3, #416
 1076 003c 1360     		str	r3, [r2]
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1077              		.loc 1 1347 0
 1078 003e 2A68     		ldr	r2, [r5]
 1079 0040 9368     		ldr	r3, [r2, #8]
 1080 0042 23F00103 		bic	r3, r3, #1
 1081 0046 9360     		str	r3, [r2, #8]
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1082              		.loc 1 1349 0
 1083 0048 2023     		movs	r3, #32
 1084 004a 85F86930 		strb	r3, [r5, #105]
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1085              		.loc 1 1350 0
 1086 004e 85F86A30 		strb	r3, [r5, #106]
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1087              		.loc 1 1353 0
 1088 0052 0023     		movs	r3, #0
 1089 0054 85F86830 		strb	r3, [r5, #104]
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1090              		.loc 1 1354 0
 1091 0058 0320     		movs	r0, #3
 1092 005a 00E0     		b	.L81
 1093              	.L84:
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1094              		.loc 1 1358 0
 1095 005c 0020     		movs	r0, #0
 1096              	.L81:
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1097              		.loc 1 1359 0
 1098 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1099              		.cfi_endproc
 1100              	.LFE156:
 1102              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1103              		.align	1
ARM GAS  /tmp/cc0Ep11B.s 			page 53


 1104              		.global	HAL_UART_Transmit
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu fpv5-d16
 1110              	HAL_UART_Transmit:
 1111              	.LFB146:
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 1112              		.loc 1 717 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              	.LVL83:
 1117 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1118              	.LCFI6:
 1119              		.cfi_def_cfa_offset 24
 1120              		.cfi_offset 4, -24
 1121              		.cfi_offset 5, -20
 1122              		.cfi_offset 6, -16
 1123              		.cfi_offset 7, -12
 1124              		.cfi_offset 8, -8
 1125              		.cfi_offset 14, -4
 1126 0004 82B0     		sub	sp, sp, #8
 1127              	.LCFI7:
 1128              		.cfi_def_cfa_offset 32
 1129 0006 1E46     		mov	r6, r3
 1130              	.LVL84:
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1131              		.loc 1 722 0
 1132 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 1133              	.LVL85:
 1134 000c DBB2     		uxtb	r3, r3
 1135 000e 202B     		cmp	r3, #32
 1136 0010 52D1     		bne	.L91
 1137 0012 0446     		mov	r4, r0
 1138 0014 0D46     		mov	r5, r1
 1139 0016 9046     		mov	r8, r2
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1140              		.loc 1 724 0
 1141 0018 B2FA82F3 		clz	r3, r2
 1142 001c 5B09     		lsrs	r3, r3, #5
 1143 001e 0029     		cmp	r1, #0
 1144 0020 08BF     		it	eq
 1145 0022 0123     		moveq	r3, #1
 1146 0024 002B     		cmp	r3, #0
 1147 0026 4CD1     		bne	.L92
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1148              		.loc 1 730 0
 1149 0028 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 1150 002c 012B     		cmp	r3, #1
 1151 002e 4AD0     		beq	.L93
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1152              		.loc 1 730 0 is_stmt 0 discriminator 2
 1153 0030 0123     		movs	r3, #1
 1154 0032 80F86830 		strb	r3, [r0, #104]
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1155              		.loc 1 732 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/cc0Ep11B.s 			page 54


 1156 0036 0023     		movs	r3, #0
 1157 0038 C366     		str	r3, [r0, #108]
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1158              		.loc 1 733 0 discriminator 2
 1159 003a 2123     		movs	r3, #33
 1160 003c 80F86930 		strb	r3, [r0, #105]
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1161              		.loc 1 736 0 discriminator 2
 1162 0040 FFF7FEFF 		bl	HAL_GetTick
 1163              	.LVL86:
 1164 0044 0746     		mov	r7, r0
 1165              	.LVL87:
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1166              		.loc 1 738 0 discriminator 2
 1167 0046 A4F85080 		strh	r8, [r4, #80]	@ movhi
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 1168              		.loc 1 739 0 discriminator 2
 1169 004a A4F85280 		strh	r8, [r4, #82]	@ movhi
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1170              		.loc 1 740 0 discriminator 2
 1171 004e 03E0     		b	.L87
 1172              	.LVL88:
 1173              	.L88:
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1174              		.loc 1 755 0
 1175 0050 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1176 0052 2368     		ldr	r3, [r4]
 1177 0054 9A62     		str	r2, [r3, #40]
 1178 0056 0135     		adds	r5, r5, #1
 1179              	.LVL89:
 1180              	.L87:
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1181              		.loc 1 740 0
 1182 0058 B4F85230 		ldrh	r3, [r4, #82]
 1183 005c 9BB2     		uxth	r3, r3
 1184 005e DBB1     		cbz	r3, .L97
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 1185              		.loc 1 742 0
 1186 0060 B4F85230 		ldrh	r3, [r4, #82]
 1187 0064 013B     		subs	r3, r3, #1
 1188 0066 9BB2     		uxth	r3, r3
 1189 0068 A4F85230 		strh	r3, [r4, #82]	@ movhi
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1190              		.loc 1 743 0
 1191 006c 0096     		str	r6, [sp]
 1192 006e 3B46     		mov	r3, r7
 1193 0070 0022     		movs	r2, #0
 1194 0072 8021     		movs	r1, #128
 1195 0074 2046     		mov	r0, r4
 1196 0076 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1197              	.LVL90:
 1198 007a 30BB     		cbnz	r0, .L94
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1199              		.loc 1 747 0
 1200 007c A368     		ldr	r3, [r4, #8]
 1201 007e B3F5805F 		cmp	r3, #4096
 1202 0082 E5D1     		bne	.L88
ARM GAS  /tmp/cc0Ep11B.s 			page 55


 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1203              		.loc 1 747 0 is_stmt 0 discriminator 1
 1204 0084 2369     		ldr	r3, [r4, #16]
 1205 0086 002B     		cmp	r3, #0
 1206 0088 E2D1     		bne	.L88
 1207              	.LVL91:
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData += 2;
 1208              		.loc 1 750 0 is_stmt 1
 1209 008a 35F8023B 		ldrh	r3, [r5], #2
 1210              	.LVL92:
 1211 008e 2268     		ldr	r2, [r4]
 1212 0090 C3F30803 		ubfx	r3, r3, #0, #9
 1213 0094 9362     		str	r3, [r2, #40]
 1214              	.LVL93:
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1215              		.loc 1 751 0
 1216 0096 DFE7     		b	.L87
 1217              	.LVL94:
 1218              	.L97:
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1219              		.loc 1 758 0
 1220 0098 0096     		str	r6, [sp]
 1221 009a 3B46     		mov	r3, r7
 1222 009c 0022     		movs	r2, #0
 1223 009e 4021     		movs	r1, #64
 1224 00a0 2046     		mov	r0, r4
 1225 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1226              	.LVL95:
 1227 00a6 0346     		mov	r3, r0
 1228 00a8 88B9     		cbnz	r0, .L95
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1229              		.loc 1 764 0
 1230 00aa 2022     		movs	r2, #32
 1231 00ac 84F86920 		strb	r2, [r4, #105]
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1232              		.loc 1 767 0
 1233 00b0 0022     		movs	r2, #0
 1234 00b2 84F86820 		strb	r2, [r4, #104]
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1235              		.loc 1 769 0
 1236 00b6 00E0     		b	.L86
 1237              	.LVL96:
 1238              	.L91:
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1239              		.loc 1 773 0
 1240 00b8 0223     		movs	r3, #2
 1241              	.LVL97:
 1242              	.L86:
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1243              		.loc 1 775 0
 1244 00ba 1846     		mov	r0, r3
 1245 00bc 02B0     		add	sp, sp, #8
 1246              	.LCFI8:
 1247              		.cfi_remember_state
 1248              		.cfi_def_cfa_offset 24
 1249              		@ sp needed
 1250 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/cc0Ep11B.s 			page 56


 1251              	.LVL98:
 1252              	.L92:
 1253              	.LCFI9:
 1254              		.cfi_restore_state
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1255              		.loc 1 726 0
 1256 00c2 0123     		movs	r3, #1
 1257 00c4 F9E7     		b	.L86
 1258              	.L93:
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1259              		.loc 1 730 0
 1260 00c6 0223     		movs	r3, #2
 1261 00c8 F7E7     		b	.L86
 1262              	.LVL99:
 1263              	.L94:
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1264              		.loc 1 745 0
 1265 00ca 0323     		movs	r3, #3
 1266 00cc F5E7     		b	.L86
 1267              	.L95:
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1268              		.loc 1 760 0
 1269 00ce 0323     		movs	r3, #3
 1270 00d0 F3E7     		b	.L86
 1271              		.cfi_endproc
 1272              	.LFE146:
 1274              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1275              		.align	1
 1276              		.global	HAL_UART_Receive
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1280              		.fpu fpv5-d16
 1282              	HAL_UART_Receive:
 1283              	.LFB147:
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 1284              		.loc 1 786 0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288              	.LVL100:
 1289 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1290              	.LCFI10:
 1291              		.cfi_def_cfa_offset 24
 1292              		.cfi_offset 4, -24
 1293              		.cfi_offset 5, -20
 1294              		.cfi_offset 6, -16
 1295              		.cfi_offset 7, -12
 1296              		.cfi_offset 8, -8
 1297              		.cfi_offset 14, -4
 1298 0004 82B0     		sub	sp, sp, #8
 1299              	.LCFI11:
 1300              		.cfi_def_cfa_offset 32
 1301 0006 1E46     		mov	r6, r3
 1302              	.LVL101:
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1303              		.loc 1 792 0
ARM GAS  /tmp/cc0Ep11B.s 			page 57


 1304 0008 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 1305              	.LVL102:
 1306 000c DBB2     		uxtb	r3, r3
 1307 000e 202B     		cmp	r3, #32
 1308 0010 75D1     		bne	.L110
 1309 0012 0446     		mov	r4, r0
 1310 0014 0D46     		mov	r5, r1
 1311 0016 9046     		mov	r8, r2
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1312              		.loc 1 794 0
 1313 0018 B2FA82F3 		clz	r3, r2
 1314 001c 5B09     		lsrs	r3, r3, #5
 1315 001e 0029     		cmp	r1, #0
 1316 0020 08BF     		it	eq
 1317 0022 0123     		moveq	r3, #1
 1318 0024 002B     		cmp	r3, #0
 1319 0026 6ED1     		bne	.L111
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1320              		.loc 1 800 0
 1321 0028 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 1322 002c 012B     		cmp	r3, #1
 1323 002e 6CD0     		beq	.L112
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1324              		.loc 1 800 0 is_stmt 0 discriminator 2
 1325 0030 0123     		movs	r3, #1
 1326 0032 80F86830 		strb	r3, [r0, #104]
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1327              		.loc 1 802 0 is_stmt 1 discriminator 2
 1328 0036 0023     		movs	r3, #0
 1329 0038 C366     		str	r3, [r0, #108]
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1330              		.loc 1 803 0 discriminator 2
 1331 003a 2223     		movs	r3, #34
 1332 003c 80F86A30 		strb	r3, [r0, #106]
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1333              		.loc 1 806 0 discriminator 2
 1334 0040 FFF7FEFF 		bl	HAL_GetTick
 1335              	.LVL103:
 1336 0044 0746     		mov	r7, r0
 1337              	.LVL104:
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1338              		.loc 1 808 0 discriminator 2
 1339 0046 A4F85880 		strh	r8, [r4, #88]	@ movhi
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1340              		.loc 1 809 0 discriminator 2
 1341 004a A4F85A80 		strh	r8, [r4, #90]	@ movhi
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1342              		.loc 1 812 0 discriminator 2
 1343 004e A368     		ldr	r3, [r4, #8]
 1344 0050 B3F5805F 		cmp	r3, #4096
 1345 0054 06D0     		beq	.L115
 1346 0056 A3B9     		cbnz	r3, .L103
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1347              		.loc 1 812 0 is_stmt 0 discriminator 5
 1348 0058 2369     		ldr	r3, [r4, #16]
 1349 005a 73B9     		cbnz	r3, .L104
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
ARM GAS  /tmp/cc0Ep11B.s 			page 58


 1350              		.loc 1 812 0 discriminator 7
 1351 005c FF23     		movs	r3, #255
 1352 005e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1353 0062 11E0     		b	.L102
 1354              	.L115:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1355              		.loc 1 812 0 discriminator 1
 1356 0064 2369     		ldr	r3, [r4, #16]
 1357 0066 23B9     		cbnz	r3, .L101
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1358              		.loc 1 812 0 discriminator 3
 1359 0068 40F2FF13 		movw	r3, #511
 1360 006c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1361 0070 0AE0     		b	.L102
 1362              	.L101:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1363              		.loc 1 812 0 discriminator 4
 1364 0072 FF23     		movs	r3, #255
 1365 0074 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1366 0078 06E0     		b	.L102
 1367              	.L104:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1368              		.loc 1 812 0 discriminator 8
 1369 007a 7F23     		movs	r3, #127
 1370 007c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1371 0080 02E0     		b	.L102
 1372              	.L103:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1373              		.loc 1 812 0 discriminator 6
 1374 0082 B3F1805F 		cmp	r3, #268435456
 1375 0086 02D0     		beq	.L116
 1376              	.L102:
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1377              		.loc 1 813 0 is_stmt 1
 1378 0088 B4F85C80 		ldrh	r8, [r4, #92]
 1379              	.LVL105:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1380              		.loc 1 816 0
 1381 008c 10E0     		b	.L106
 1382              	.LVL106:
 1383              	.L116:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1384              		.loc 1 812 0 discriminator 9
 1385 008e 2369     		ldr	r3, [r4, #16]
 1386 0090 1BB9     		cbnz	r3, .L105
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1387              		.loc 1 812 0 is_stmt 0 discriminator 10
 1388 0092 7F23     		movs	r3, #127
 1389 0094 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1390 0098 F6E7     		b	.L102
 1391              	.L105:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1392              		.loc 1 812 0 discriminator 11
 1393 009a 3F23     		movs	r3, #63
 1394 009c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 1395 00a0 F2E7     		b	.L102
 1396              	.LVL107:
ARM GAS  /tmp/cc0Ep11B.s 			page 59


 1397              	.L107:
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1398              		.loc 1 831 0 is_stmt 1
 1399 00a2 2368     		ldr	r3, [r4]
 1400 00a4 5A6A     		ldr	r2, [r3, #36]
 1401 00a6 5FFA88F3 		uxtb	r3, r8
 1402              	.LVL108:
 1403 00aa 1340     		ands	r3, r3, r2
 1404 00ac 2B70     		strb	r3, [r5]
 1405 00ae 0135     		adds	r5, r5, #1
 1406              	.LVL109:
 1407              	.L106:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1408              		.loc 1 816 0
 1409 00b0 B4F85A30 		ldrh	r3, [r4, #90]
 1410 00b4 9BB2     		uxth	r3, r3
 1411 00b6 DBB1     		cbz	r3, .L117
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1412              		.loc 1 818 0
 1413 00b8 B4F85A30 		ldrh	r3, [r4, #90]
 1414 00bc 013B     		subs	r3, r3, #1
 1415 00be 9BB2     		uxth	r3, r3
 1416 00c0 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1417              		.loc 1 819 0
 1418 00c4 0096     		str	r6, [sp]
 1419 00c6 3B46     		mov	r3, r7
 1420 00c8 0022     		movs	r2, #0
 1421 00ca 2021     		movs	r1, #32
 1422 00cc 2046     		mov	r0, r4
 1423 00ce FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1424              	.LVL110:
 1425 00d2 E0B9     		cbnz	r0, .L113
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1426              		.loc 1 823 0
 1427 00d4 A368     		ldr	r3, [r4, #8]
 1428 00d6 B3F5805F 		cmp	r3, #4096
 1429 00da E2D1     		bne	.L107
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 1430              		.loc 1 823 0 is_stmt 0 discriminator 1
 1431 00dc 2369     		ldr	r3, [r4, #16]
 1432 00de 002B     		cmp	r3, #0
 1433 00e0 DFD1     		bne	.L107
 1434              	.LVL111:
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData +=2U;
 1435              		.loc 1 826 0 is_stmt 1
 1436 00e2 2368     		ldr	r3, [r4]
 1437 00e4 5B6A     		ldr	r3, [r3, #36]
 1438 00e6 08EA0303 		and	r3, r8, r3
 1439 00ea 25F8023B 		strh	r3, [r5], #2	@ movhi
 1440              	.LVL112:
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1441              		.loc 1 827 0
 1442 00ee DFE7     		b	.L106
 1443              	.LVL113:
 1444              	.L117:
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc0Ep11B.s 			page 60


 1445              		.loc 1 836 0
 1446 00f0 2023     		movs	r3, #32
 1447 00f2 84F86A30 		strb	r3, [r4, #106]
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1448              		.loc 1 839 0
 1449 00f6 0020     		movs	r0, #0
 1450 00f8 84F86800 		strb	r0, [r4, #104]
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1451              		.loc 1 841 0
 1452 00fc 00E0     		b	.L99
 1453              	.LVL114:
 1454              	.L110:
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1455              		.loc 1 845 0
 1456 00fe 0220     		movs	r0, #2
 1457              	.LVL115:
 1458              	.L99:
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1459              		.loc 1 847 0
 1460 0100 02B0     		add	sp, sp, #8
 1461              	.LCFI12:
 1462              		.cfi_remember_state
 1463              		.cfi_def_cfa_offset 24
 1464              		@ sp needed
 1465 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1466              	.LVL116:
 1467              	.L111:
 1468              	.LCFI13:
 1469              		.cfi_restore_state
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1470              		.loc 1 796 0
 1471 0106 0120     		movs	r0, #1
 1472              	.LVL117:
 1473 0108 FAE7     		b	.L99
 1474              	.LVL118:
 1475              	.L112:
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1476              		.loc 1 800 0
 1477 010a 0220     		movs	r0, #2
 1478              	.LVL119:
 1479 010c F8E7     		b	.L99
 1480              	.LVL120:
 1481              	.L113:
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 1482              		.loc 1 821 0
 1483 010e 0320     		movs	r0, #3
 1484 0110 F6E7     		b	.L99
 1485              		.cfi_endproc
 1486              	.LFE147:
 1488              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1489              		.align	1
 1490              		.weak	HAL_UART_TxCpltCallback
 1491              		.syntax unified
 1492              		.thumb
 1493              		.thumb_func
 1494              		.fpu fpv5-d16
 1496              	HAL_UART_TxCpltCallback:
ARM GAS  /tmp/cc0Ep11B.s 			page 61


 1497              	.LFB163:
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1498              		.loc 1 1489 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 0, uses_anonymous_args = 0
 1502              		@ link register save eliminated.
 1503              	.LVL121:
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1504              		.loc 1 1496 0
 1505 0000 7047     		bx	lr
 1506              		.cfi_endproc
 1507              	.LFE163:
 1509              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1510              		.align	1
 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1514              		.fpu fpv5-d16
 1516              	UART_DMATransmitCplt:
 1517              	.LFB157:
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1518              		.loc 1 1367 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              	.LVL122:
 1523 0000 08B5     		push	{r3, lr}
 1524              	.LCFI14:
 1525              		.cfi_def_cfa_offset 8
 1526              		.cfi_offset 3, -8
 1527              		.cfi_offset 14, -4
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1528              		.loc 1 1368 0
 1529 0002 836B     		ldr	r3, [r0, #56]
 1530              	.LVL123:
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1531              		.loc 1 1371 0
 1532 0004 0268     		ldr	r2, [r0]
 1533 0006 1268     		ldr	r2, [r2]
 1534 0008 12F4807F 		tst	r2, #256
 1535 000c 0DD1     		bne	.L120
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1536              		.loc 1 1373 0
 1537 000e 0022     		movs	r2, #0
 1538 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1539              		.loc 1 1377 0
 1540 0014 1968     		ldr	r1, [r3]
 1541 0016 8A68     		ldr	r2, [r1, #8]
 1542 0018 22F08002 		bic	r2, r2, #128
 1543 001c 8A60     		str	r2, [r1, #8]
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1544              		.loc 1 1380 0
 1545 001e 1A68     		ldr	r2, [r3]
 1546 0020 1368     		ldr	r3, [r2]
 1547              	.LVL124:
ARM GAS  /tmp/cc0Ep11B.s 			page 62


 1548 0022 43F04003 		orr	r3, r3, #64
 1549 0026 1360     		str	r3, [r2]
 1550              	.LVL125:
 1551              	.L119:
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1552              		.loc 1 1387 0
 1553 0028 08BD     		pop	{r3, pc}
 1554              	.LVL126:
 1555              	.L120:
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1556              		.loc 1 1385 0
 1557 002a 1846     		mov	r0, r3
 1558              	.LVL127:
 1559 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1560              	.LVL128:
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1561              		.loc 1 1387 0
 1562 0030 FAE7     		b	.L119
 1563              		.cfi_endproc
 1564              	.LFE157:
 1566              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1567              		.align	1
 1568              		.syntax unified
 1569              		.thumb
 1570              		.thumb_func
 1571              		.fpu fpv5-d16
 1573              	UART_EndTransmit_IT:
 1574              	.LFB169:
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
 1575              		.loc 1 1614 0
 1576              		.cfi_startproc
 1577              		@ args = 0, pretend = 0, frame = 0
 1578              		@ frame_needed = 0, uses_anonymous_args = 0
 1579              	.LVL129:
 1580 0000 08B5     		push	{r3, lr}
 1581              	.LCFI15:
 1582              		.cfi_def_cfa_offset 8
 1583              		.cfi_offset 3, -8
 1584              		.cfi_offset 14, -4
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1585              		.loc 1 1616 0
 1586 0002 0168     		ldr	r1, [r0]
 1587 0004 0B68     		ldr	r3, [r1]
 1588 0006 23F04003 		bic	r3, r3, #64
 1589 000a 0B60     		str	r3, [r1]
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1590              		.loc 1 1619 0
 1591 000c 2023     		movs	r3, #32
 1592 000e 80F86930 		strb	r3, [r0, #105]
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1593              		.loc 1 1621 0
 1594 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1595              	.LVL130:
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1596              		.loc 1 1624 0
 1597 0016 0020     		movs	r0, #0
 1598 0018 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cc0Ep11B.s 			page 63


 1599              		.cfi_endproc
 1600              	.LFE169:
 1602              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1603              		.align	1
 1604              		.weak	HAL_UART_TxHalfCpltCallback
 1605              		.syntax unified
 1606              		.thumb
 1607              		.thumb_func
 1608              		.fpu fpv5-d16
 1610              	HAL_UART_TxHalfCpltCallback:
 1611              	.LFB164:
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1612              		.loc 1 1504 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              		@ link register save eliminated.
 1617              	.LVL131:
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1618              		.loc 1 1511 0
 1619 0000 7047     		bx	lr
 1620              		.cfi_endproc
 1621              	.LFE164:
 1623              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1624              		.align	1
 1625              		.syntax unified
 1626              		.thumb
 1627              		.thumb_func
 1628              		.fpu fpv5-d16
 1630              	UART_DMATxHalfCplt:
 1631              	.LFB158:
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1632              		.loc 1 1395 0
 1633              		.cfi_startproc
 1634              		@ args = 0, pretend = 0, frame = 0
 1635              		@ frame_needed = 0, uses_anonymous_args = 0
 1636              	.LVL132:
 1637 0000 08B5     		push	{r3, lr}
 1638              	.LCFI16:
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 3, -8
 1641              		.cfi_offset 14, -4
 1642              	.LVL133:
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1643              		.loc 1 1398 0
 1644 0002 806B     		ldr	r0, [r0, #56]
 1645              	.LVL134:
 1646 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1647              	.LVL135:
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1648              		.loc 1 1399 0
 1649 0008 08BD     		pop	{r3, pc}
 1650              		.cfi_endproc
 1651              	.LFE158:
 1653              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1654              		.align	1
 1655              		.weak	HAL_UART_RxCpltCallback
ARM GAS  /tmp/cc0Ep11B.s 			page 64


 1656              		.syntax unified
 1657              		.thumb
 1658              		.thumb_func
 1659              		.fpu fpv5-d16
 1661              	HAL_UART_RxCpltCallback:
 1662              	.LFB165:
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1663              		.loc 1 1519 0
 1664              		.cfi_startproc
 1665              		@ args = 0, pretend = 0, frame = 0
 1666              		@ frame_needed = 0, uses_anonymous_args = 0
 1667              		@ link register save eliminated.
 1668              	.LVL136:
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1669              		.loc 1 1526 0
 1670 0000 7047     		bx	lr
 1671              		.cfi_endproc
 1672              	.LFE165:
 1674              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1675              		.align	1
 1676              		.syntax unified
 1677              		.thumb
 1678              		.thumb_func
 1679              		.fpu fpv5-d16
 1681              	UART_DMAReceiveCplt:
 1682              	.LFB159:
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1683              		.loc 1 1407 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 0
 1686              		@ frame_needed = 0, uses_anonymous_args = 0
 1687              	.LVL137:
 1688 0000 08B5     		push	{r3, lr}
 1689              	.LCFI17:
 1690              		.cfi_def_cfa_offset 8
 1691              		.cfi_offset 3, -8
 1692              		.cfi_offset 14, -4
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1693              		.loc 1 1408 0
 1694 0002 836B     		ldr	r3, [r0, #56]
 1695              	.LVL138:
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1696              		.loc 1 1411 0
 1697 0004 0268     		ldr	r2, [r0]
 1698 0006 1268     		ldr	r2, [r2]
 1699 0008 12F4807F 		tst	r2, #256
 1700 000c 14D1     		bne	.L130
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1701              		.loc 1 1413 0
 1702 000e 0022     		movs	r2, #0
 1703 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1704              		.loc 1 1416 0
 1705 0014 1968     		ldr	r1, [r3]
 1706 0016 0A68     		ldr	r2, [r1]
 1707 0018 22F48072 		bic	r2, r2, #256
 1708 001c 0A60     		str	r2, [r1]
ARM GAS  /tmp/cc0Ep11B.s 			page 65


1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1709              		.loc 1 1417 0
 1710 001e 1968     		ldr	r1, [r3]
 1711 0020 8A68     		ldr	r2, [r1, #8]
 1712 0022 22F00102 		bic	r2, r2, #1
 1713 0026 8A60     		str	r2, [r1, #8]
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1714              		.loc 1 1421 0
 1715 0028 1968     		ldr	r1, [r3]
 1716 002a 8A68     		ldr	r2, [r1, #8]
 1717 002c 22F04002 		bic	r2, r2, #64
 1718 0030 8A60     		str	r2, [r1, #8]
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1719              		.loc 1 1424 0
 1720 0032 2022     		movs	r2, #32
 1721 0034 83F86A20 		strb	r2, [r3, #106]
 1722              	.L130:
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1723              		.loc 1 1426 0
 1724 0038 1846     		mov	r0, r3
 1725              	.LVL139:
 1726 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1727              	.LVL140:
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1728              		.loc 1 1427 0
 1729 003e 08BD     		pop	{r3, pc}
 1730              		.cfi_endproc
 1731              	.LFE159:
 1733              		.section	.text.UART_Receive_IT,"ax",%progbits
 1734              		.align	1
 1735              		.syntax unified
 1736              		.thumb
 1737              		.thumb_func
 1738              		.fpu fpv5-d16
 1740              	UART_Receive_IT:
 1741              	.LFB170:
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 1742              		.loc 1 1634 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 0
 1745              		@ frame_needed = 0, uses_anonymous_args = 0
 1746              	.LVL141:
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1747              		.loc 1 1636 0
 1748 0000 B0F85C20 		ldrh	r2, [r0, #92]
 1749              	.LVL142:
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1750              		.loc 1 1639 0
 1751 0004 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 1752 0008 DBB2     		uxtb	r3, r3
 1753 000a 222B     		cmp	r3, #34
 1754 000c 32D1     		bne	.L133
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 1755              		.loc 1 1634 0
 1756 000e 10B5     		push	{r4, lr}
 1757              	.LCFI18:
 1758              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc0Ep11B.s 			page 66


 1759              		.cfi_offset 4, -8
 1760              		.cfi_offset 14, -4
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1761              		.loc 1 1642 0
 1762 0010 8368     		ldr	r3, [r0, #8]
 1763 0012 B3F5805F 		cmp	r3, #4096
 1764 0016 10D0     		beq	.L142
 1765              	.L134:
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1766              		.loc 1 1650 0
 1767 0018 0368     		ldr	r3, [r0]
 1768 001a 596A     		ldr	r1, [r3, #36]
 1769 001c D2B2     		uxtb	r2, r2
 1770              	.LVL143:
 1771 001e 436D     		ldr	r3, [r0, #84]
 1772 0020 5C1C     		adds	r4, r3, #1
 1773 0022 4465     		str	r4, [r0, #84]
 1774 0024 0A40     		ands	r2, r2, r1
 1775 0026 1A70     		strb	r2, [r3]
 1776              	.LVL144:
 1777              	.L135:
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1778              		.loc 1 1653 0
 1779 0028 B0F85A30 		ldrh	r3, [r0, #90]
 1780 002c 013B     		subs	r3, r3, #1
 1781 002e 9BB2     		uxth	r3, r3
 1782 0030 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 1783 0034 6BB1     		cbz	r3, .L143
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1784              		.loc 1 1669 0
 1785 0036 0020     		movs	r0, #0
 1786              	.LVL145:
 1787              	.L136:
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1788              		.loc 1 1678 0
 1789 0038 10BD     		pop	{r4, pc}
 1790              	.LVL146:
 1791              	.L142:
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1792              		.loc 1 1642 0 discriminator 1
 1793 003a 0369     		ldr	r3, [r0, #16]
 1794 003c 002B     		cmp	r3, #0
 1795 003e EBD1     		bne	.L134
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 1796              		.loc 1 1644 0
 1797 0040 436D     		ldr	r3, [r0, #84]
 1798              	.LVL147:
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
 1799              		.loc 1 1645 0
 1800 0042 0168     		ldr	r1, [r0]
 1801 0044 496A     		ldr	r1, [r1, #36]
 1802 0046 0A40     		ands	r2, r2, r1
 1803              	.LVL148:
 1804 0048 1A80     		strh	r2, [r3]	@ movhi
 1805              	.LVL149:
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1806              		.loc 1 1646 0
ARM GAS  /tmp/cc0Ep11B.s 			page 67


 1807 004a 436D     		ldr	r3, [r0, #84]
 1808              	.LVL150:
 1809 004c 0233     		adds	r3, r3, #2
 1810 004e 4365     		str	r3, [r0, #84]
 1811 0050 EAE7     		b	.L135
 1812              	.L143:
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1813              		.loc 1 1656 0
 1814 0052 0268     		ldr	r2, [r0]
 1815 0054 1368     		ldr	r3, [r2]
 1816 0056 23F49073 		bic	r3, r3, #288
 1817 005a 1360     		str	r3, [r2]
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1818              		.loc 1 1659 0
 1819 005c 0268     		ldr	r2, [r0]
 1820 005e 9368     		ldr	r3, [r2, #8]
 1821 0060 23F00103 		bic	r3, r3, #1
 1822 0064 9360     		str	r3, [r2, #8]
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1823              		.loc 1 1662 0
 1824 0066 2023     		movs	r3, #32
 1825 0068 80F86A30 		strb	r3, [r0, #106]
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1826              		.loc 1 1664 0
 1827 006c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1828              	.LVL151:
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 1829              		.loc 1 1666 0
 1830 0070 0020     		movs	r0, #0
 1831 0072 E1E7     		b	.L136
 1832              	.LVL152:
 1833              	.L133:
 1834              	.LCFI19:
 1835              		.cfi_def_cfa_offset 0
 1836              		.cfi_restore 4
 1837              		.cfi_restore 14
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1838              		.loc 1 1674 0
 1839 0074 0268     		ldr	r2, [r0]
 1840              	.LVL153:
 1841 0076 9369     		ldr	r3, [r2, #24]
 1842 0078 43F00803 		orr	r3, r3, #8
 1843 007c 9361     		str	r3, [r2, #24]
 1844              	.LVL154:
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1845              		.loc 1 1676 0
 1846 007e 0220     		movs	r0, #2
 1847              	.LVL155:
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1848              		.loc 1 1678 0
 1849 0080 7047     		bx	lr
 1850              		.cfi_endproc
 1851              	.LFE170:
 1853              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1854              		.align	1
 1855              		.weak	HAL_UART_RxHalfCpltCallback
 1856              		.syntax unified
ARM GAS  /tmp/cc0Ep11B.s 			page 68


 1857              		.thumb
 1858              		.thumb_func
 1859              		.fpu fpv5-d16
 1861              	HAL_UART_RxHalfCpltCallback:
 1862              	.LFB166:
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1863              		.loc 1 1534 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 0
 1866              		@ frame_needed = 0, uses_anonymous_args = 0
 1867              		@ link register save eliminated.
 1868              	.LVL156:
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1869              		.loc 1 1541 0
 1870 0000 7047     		bx	lr
 1871              		.cfi_endproc
 1872              	.LFE166:
 1874              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1875              		.align	1
 1876              		.syntax unified
 1877              		.thumb
 1878              		.thumb_func
 1879              		.fpu fpv5-d16
 1881              	UART_DMARxHalfCplt:
 1882              	.LFB160:
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1883              		.loc 1 1435 0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 0
 1886              		@ frame_needed = 0, uses_anonymous_args = 0
 1887              	.LVL157:
 1888 0000 08B5     		push	{r3, lr}
 1889              	.LCFI20:
 1890              		.cfi_def_cfa_offset 8
 1891              		.cfi_offset 3, -8
 1892              		.cfi_offset 14, -4
 1893              	.LVL158:
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1894              		.loc 1 1438 0
 1895 0002 806B     		ldr	r0, [r0, #56]
 1896              	.LVL159:
 1897 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1898              	.LVL160:
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1899              		.loc 1 1439 0
 1900 0008 08BD     		pop	{r3, pc}
 1901              		.cfi_endproc
 1902              	.LFE160:
 1904              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1905              		.align	1
 1906              		.weak	HAL_UART_ErrorCallback
 1907              		.syntax unified
 1908              		.thumb
 1909              		.thumb_func
 1910              		.fpu fpv5-d16
 1912              	HAL_UART_ErrorCallback:
 1913              	.LFB167:
ARM GAS  /tmp/cc0Ep11B.s 			page 69


1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1914              		.loc 1 1549 0
 1915              		.cfi_startproc
 1916              		@ args = 0, pretend = 0, frame = 0
 1917              		@ frame_needed = 0, uses_anonymous_args = 0
 1918              		@ link register save eliminated.
 1919              	.LVL161:
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1920              		.loc 1 1556 0
 1921 0000 7047     		bx	lr
 1922              		.cfi_endproc
 1923              	.LFE167:
 1925              		.section	.text.UART_DMAError,"ax",%progbits
 1926              		.align	1
 1927              		.syntax unified
 1928              		.thumb
 1929              		.thumb_func
 1930              		.fpu fpv5-d16
 1932              	UART_DMAError:
 1933              	.LFB161:
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1934              		.loc 1 1447 0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 0
 1937              		@ frame_needed = 0, uses_anonymous_args = 0
 1938              	.LVL162:
 1939 0000 10B5     		push	{r4, lr}
 1940              	.LCFI21:
 1941              		.cfi_def_cfa_offset 8
 1942              		.cfi_offset 4, -8
 1943              		.cfi_offset 14, -4
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1944              		.loc 1 1448 0
 1945 0002 846B     		ldr	r4, [r0, #56]
 1946              	.LVL163:
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1947              		.loc 1 1449 0
 1948 0004 0023     		movs	r3, #0
 1949 0006 A4F85A30 		strh	r3, [r4, #90]	@ movhi
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
 1950              		.loc 1 1450 0
 1951 000a A4F85230 		strh	r3, [r4, #82]	@ movhi
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 1952              		.loc 1 1452 0
 1953 000e 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 1954 0012 DBB2     		uxtb	r3, r3
 1955 0014 212B     		cmp	r3, #33
 1956 0016 0CD0     		beq	.L152
 1957              	.LVL164:
 1958              	.L149:
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1959              		.loc 1 1459 0
 1960 0018 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 1961 001c DBB2     		uxtb	r3, r3
 1962 001e 222B     		cmp	r3, #34
 1963 0020 10D0     		beq	.L153
 1964              	.L150:
ARM GAS  /tmp/cc0Ep11B.s 			page 70


1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1965              		.loc 1 1464 0
 1966 0022 E36E     		ldr	r3, [r4, #108]
 1967 0024 43F01003 		orr	r3, r3, #16
 1968 0028 E366     		str	r3, [r4, #108]
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1969              		.loc 1 1465 0
 1970 002a 2046     		mov	r0, r4
 1971 002c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1972              	.LVL165:
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 1973              		.loc 1 1466 0
 1974 0030 10BD     		pop	{r4, pc}
 1975              	.LVL166:
 1976              	.L152:
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1977              		.loc 1 1453 0
 1978 0032 2368     		ldr	r3, [r4]
 1979 0034 9B68     		ldr	r3, [r3, #8]
 1980 0036 13F0800F 		tst	r3, #128
 1981 003a EDD0     		beq	.L149
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1982              		.loc 1 1455 0
 1983 003c 2046     		mov	r0, r4
 1984              	.LVL167:
 1985 003e FFF7FEFF 		bl	UART_EndTxTransfer
 1986              	.LVL168:
 1987 0042 E9E7     		b	.L149
 1988              	.L153:
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 1989              		.loc 1 1460 0
 1990 0044 2368     		ldr	r3, [r4]
 1991 0046 9B68     		ldr	r3, [r3, #8]
 1992 0048 13F0400F 		tst	r3, #64
 1993 004c E9D0     		beq	.L150
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 1994              		.loc 1 1462 0
 1995 004e 2046     		mov	r0, r4
 1996 0050 FFF7FEFF 		bl	UART_EndRxTransfer
 1997              	.LVL169:
 1998 0054 E5E7     		b	.L150
 1999              		.cfi_endproc
 2000              	.LFE161:
 2002              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2003              		.align	1
 2004              		.global	HAL_UART_IRQHandler
 2005              		.syntax unified
 2006              		.thumb
 2007              		.thumb_func
 2008              		.fpu fpv5-d16
 2010              	HAL_UART_IRQHandler:
 2011              	.LFB155:
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2012              		.loc 1 1191 0
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc0Ep11B.s 			page 71


 2016              	.LVL170:
 2017 0000 38B5     		push	{r3, r4, r5, lr}
 2018              	.LCFI22:
 2019              		.cfi_def_cfa_offset 16
 2020              		.cfi_offset 3, -16
 2021              		.cfi_offset 4, -12
 2022              		.cfi_offset 5, -8
 2023              		.cfi_offset 14, -4
 2024 0002 0446     		mov	r4, r0
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2025              		.loc 1 1192 0
 2026 0004 0268     		ldr	r2, [r0]
 2027 0006 D369     		ldr	r3, [r2, #28]
 2028              	.LVL171:
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2029              		.loc 1 1193 0
 2030 0008 1068     		ldr	r0, [r2]
 2031              	.LVL172:
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t errorflags;
 2032              		.loc 1 1194 0
 2033 000a 9168     		ldr	r1, [r2, #8]
 2034              	.LVL173:
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2035              		.loc 1 1199 0
 2036 000c 13F00F05 		ands	r5, r3, #15
 2037              	.LVL174:
 2038 0010 05D1     		bne	.L155
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2039              		.loc 1 1202 0
 2040 0012 13F0200F 		tst	r3, #32
 2041 0016 02D0     		beq	.L155
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2042              		.loc 1 1202 0 is_stmt 0 discriminator 1
 2043 0018 10F0200F 		tst	r0, #32
 2044 001c 5FD1     		bne	.L171
 2045              	.L155:
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 2046              		.loc 1 1210 0 is_stmt 1
 2047 001e 002D     		cmp	r5, #0
 2048 0020 73D0     		beq	.L157
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 2049              		.loc 1 1211 0
 2050 0022 11F00101 		ands	r1, r1, #1
 2051              	.LVL175:
 2052 0026 02D1     		bne	.L158
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2053              		.loc 1 1212 0
 2054 0028 10F4907F 		tst	r0, #288
 2055 002c 6DD0     		beq	.L157
 2056              	.L158:
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2057              		.loc 1 1216 0
 2058 002e 13F0010F 		tst	r3, #1
 2059 0032 07D0     		beq	.L159
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2060              		.loc 1 1216 0 is_stmt 0 discriminator 1
 2061 0034 10F4807F 		tst	r0, #256
ARM GAS  /tmp/cc0Ep11B.s 			page 72


 2062 0038 04D0     		beq	.L159
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2063              		.loc 1 1218 0 is_stmt 1
 2064 003a 0125     		movs	r5, #1
 2065              	.LVL176:
 2066 003c 1562     		str	r5, [r2, #32]
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 2067              		.loc 1 1220 0
 2068 003e E26E     		ldr	r2, [r4, #108]
 2069 0040 2A43     		orrs	r2, r2, r5
 2070 0042 E266     		str	r2, [r4, #108]
 2071              	.L159:
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2072              		.loc 1 1224 0
 2073 0044 13F0020F 		tst	r3, #2
 2074 0048 07D0     		beq	.L160
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2075              		.loc 1 1224 0 is_stmt 0 discriminator 1
 2076 004a 31B1     		cbz	r1, .L160
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2077              		.loc 1 1226 0 is_stmt 1
 2078 004c 2268     		ldr	r2, [r4]
 2079 004e 0225     		movs	r5, #2
 2080 0050 1562     		str	r5, [r2, #32]
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 2081              		.loc 1 1228 0
 2082 0052 E26E     		ldr	r2, [r4, #108]
 2083 0054 42F00402 		orr	r2, r2, #4
 2084 0058 E266     		str	r2, [r4, #108]
 2085              	.L160:
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2086              		.loc 1 1232 0
 2087 005a 13F0040F 		tst	r3, #4
 2088 005e 07D0     		beq	.L161
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2089              		.loc 1 1232 0 is_stmt 0 discriminator 1
 2090 0060 31B1     		cbz	r1, .L161
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2091              		.loc 1 1234 0 is_stmt 1
 2092 0062 2268     		ldr	r2, [r4]
 2093 0064 0425     		movs	r5, #4
 2094 0066 1562     		str	r5, [r2, #32]
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 2095              		.loc 1 1236 0
 2096 0068 E26E     		ldr	r2, [r4, #108]
 2097 006a 42F00202 		orr	r2, r2, #2
 2098 006e E266     		str	r2, [r4, #108]
 2099              	.L161:
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2100              		.loc 1 1240 0
 2101 0070 13F0080F 		tst	r3, #8
 2102 0074 09D0     		beq	.L162
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2103              		.loc 1 1240 0 is_stmt 0 discriminator 1
 2104 0076 10F0200F 		tst	r0, #32
 2105 007a 00D1     		bne	.L163
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
ARM GAS  /tmp/cc0Ep11B.s 			page 73


 2106              		.loc 1 1241 0 is_stmt 1
 2107 007c 29B1     		cbz	r1, .L162
 2108              	.L163:
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2109              		.loc 1 1243 0
 2110 007e 2268     		ldr	r2, [r4]
 2111 0080 0821     		movs	r1, #8
 2112 0082 1162     		str	r1, [r2, #32]
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 2113              		.loc 1 1245 0
 2114 0084 E26E     		ldr	r2, [r4, #108]
 2115 0086 0A43     		orrs	r2, r2, r1
 2116 0088 E266     		str	r2, [r4, #108]
 2117              	.L162:
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2118              		.loc 1 1249 0
 2119 008a E26E     		ldr	r2, [r4, #108]
 2120 008c 002A     		cmp	r2, #0
 2121 008e 48D0     		beq	.L154
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 2122              		.loc 1 1252 0
 2123 0090 13F0200F 		tst	r3, #32
 2124 0094 02D0     		beq	.L164
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 2125              		.loc 1 1252 0 is_stmt 0 discriminator 1
 2126 0096 10F0200F 		tst	r0, #32
 2127 009a 24D1     		bne	.L172
 2128              	.LVL177:
 2129              	.L164:
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2130              		.loc 1 1259 0 is_stmt 1
 2131 009c E36E     		ldr	r3, [r4, #108]
 2132 009e 13F0080F 		tst	r3, #8
 2133 00a2 04D1     		bne	.L165
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 2134              		.loc 1 1260 0 discriminator 1
 2135 00a4 2368     		ldr	r3, [r4]
 2136 00a6 9B68     		ldr	r3, [r3, #8]
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2137              		.loc 1 1259 0 discriminator 1
 2138 00a8 13F0400F 		tst	r3, #64
 2139 00ac 27D0     		beq	.L166
 2140              	.L165:
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2141              		.loc 1 1265 0
 2142 00ae 2046     		mov	r0, r4
 2143 00b0 FFF7FEFF 		bl	UART_EndRxTransfer
 2144              	.LVL178:
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2145              		.loc 1 1268 0
 2146 00b4 2368     		ldr	r3, [r4]
 2147 00b6 9A68     		ldr	r2, [r3, #8]
 2148 00b8 12F0400F 		tst	r2, #64
 2149 00bc 1BD0     		beq	.L167
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2150              		.loc 1 1270 0
 2151 00be 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/cc0Ep11B.s 			page 74


 2152 00c0 22F04002 		bic	r2, r2, #64
 2153 00c4 9A60     		str	r2, [r3, #8]
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
 2154              		.loc 1 1273 0
 2155 00c6 636E     		ldr	r3, [r4, #100]
 2156 00c8 8BB1     		cbz	r3, .L168
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2157              		.loc 1 1277 0
 2158 00ca 1A4A     		ldr	r2, .L175
 2159 00cc 1A65     		str	r2, [r3, #80]
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             {
 2160              		.loc 1 1280 0
 2161 00ce 606E     		ldr	r0, [r4, #100]
 2162 00d0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2163              	.LVL179:
 2164 00d4 28B3     		cbz	r0, .L154
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             }
 2165              		.loc 1 1283 0
 2166 00d6 606E     		ldr	r0, [r4, #100]
 2167 00d8 036D     		ldr	r3, [r0, #80]
 2168 00da 9847     		blx	r3
 2169              	.LVL180:
 2170 00dc 21E0     		b	.L154
 2171              	.LVL181:
 2172              	.L171:
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
 2173              		.loc 1 1204 0
 2174 00de 2046     		mov	r0, r4
 2175              	.LVL182:
 2176 00e0 FFF7FEFF 		bl	UART_Receive_IT
 2177              	.LVL183:
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 2178              		.loc 1 1205 0
 2179 00e4 1DE0     		b	.L154
 2180              	.LVL184:
 2181              	.L172:
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 2182              		.loc 1 1254 0
 2183 00e6 2046     		mov	r0, r4
 2184              	.LVL185:
 2185 00e8 FFF7FEFF 		bl	UART_Receive_IT
 2186              	.LVL186:
 2187 00ec D6E7     		b	.L164
 2188              	.L168:
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
 2189              		.loc 1 1289 0
 2190 00ee 2046     		mov	r0, r4
 2191 00f0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2192              	.LVL187:
 2193 00f4 15E0     		b	.L154
 2194              	.L167:
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
 2195              		.loc 1 1295 0
 2196 00f6 2046     		mov	r0, r4
 2197 00f8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2198              	.LVL188:
 2199 00fc 11E0     		b	.L154
ARM GAS  /tmp/cc0Ep11B.s 			page 75


 2200              	.L166:
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2201              		.loc 1 1302 0
 2202 00fe 2046     		mov	r0, r4
 2203 0100 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2204              	.LVL189:
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 2205              		.loc 1 1303 0
 2206 0104 0023     		movs	r3, #0
 2207 0106 E366     		str	r3, [r4, #108]
 2208 0108 0BE0     		b	.L154
 2209              	.LVL190:
 2210              	.L157:
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2211              		.loc 1 1311 0
 2212 010a 13F0800F 		tst	r3, #128
 2213 010e 02D0     		beq	.L169
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2214              		.loc 1 1311 0 is_stmt 0 discriminator 1
 2215 0110 10F0800F 		tst	r0, #128
 2216 0114 06D1     		bne	.L173
 2217              	.L169:
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2218              		.loc 1 1318 0 is_stmt 1
 2219 0116 13F0400F 		tst	r3, #64
 2220 011a 02D0     		beq	.L154
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2221              		.loc 1 1318 0 is_stmt 0 discriminator 1
 2222 011c 10F0400F 		tst	r0, #64
 2223 0120 04D1     		bne	.L174
 2224              	.LVL191:
 2225              	.L154:
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2226              		.loc 1 1324 0 is_stmt 1
 2227 0122 38BD     		pop	{r3, r4, r5, pc}
 2228              	.LVL192:
 2229              	.L173:
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2230              		.loc 1 1313 0
 2231 0124 2046     		mov	r0, r4
 2232              	.LVL193:
 2233 0126 FFF7FEFF 		bl	UART_Transmit_IT
 2234              	.LVL194:
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 2235              		.loc 1 1314 0
 2236 012a FAE7     		b	.L154
 2237              	.LVL195:
 2238              	.L174:
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2239              		.loc 1 1320 0
 2240 012c 2046     		mov	r0, r4
 2241              	.LVL196:
 2242 012e FFF7FEFF 		bl	UART_EndTransmit_IT
 2243              	.LVL197:
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 2244              		.loc 1 1321 0
 2245 0132 F6E7     		b	.L154
ARM GAS  /tmp/cc0Ep11B.s 			page 76


 2246              	.L176:
 2247              		.align	2
 2248              	.L175:
 2249 0134 00000000 		.word	UART_DMAAbortOnError
 2250              		.cfi_endproc
 2251              	.LFE155:
 2253              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2254              		.align	1
 2255              		.syntax unified
 2256              		.thumb
 2257              		.thumb_func
 2258              		.fpu fpv5-d16
 2260              	UART_DMAAbortOnError:
 2261              	.LFB162:
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2262              		.loc 1 1475 0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 0
 2265              		@ frame_needed = 0, uses_anonymous_args = 0
 2266              	.LVL198:
 2267 0000 08B5     		push	{r3, lr}
 2268              	.LCFI23:
 2269              		.cfi_def_cfa_offset 8
 2270              		.cfi_offset 3, -8
 2271              		.cfi_offset 14, -4
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2272              		.loc 1 1476 0
 2273 0002 806B     		ldr	r0, [r0, #56]
 2274              	.LVL199:
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2275              		.loc 1 1477 0
 2276 0004 0023     		movs	r3, #0
 2277 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2278              		.loc 1 1478 0
 2279 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2280              		.loc 1 1480 0
 2281 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2282              	.LVL200:
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2283              		.loc 1 1481 0
 2284 0012 08BD     		pop	{r3, pc}
 2285              		.cfi_endproc
 2286              	.LFE162:
 2288              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2289              		.align	1
 2290              		.global	HAL_MultiProcessor_EnterMuteMode
 2291              		.syntax unified
 2292              		.thumb
 2293              		.thumb_func
 2294              		.fpu fpv5-d16
 2296              	HAL_MultiProcessor_EnterMuteMode:
 2297              	.LFB175:
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
ARM GAS  /tmp/cc0Ep11B.s 			page 77


1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief   UART control functions
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_UART_GetState() API is helpful to check in run-time the state of the UART peripheral.
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	 (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enable UART in mute mode (doesn't mean UART enters mute mode;
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called)
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Disable UART mute mode (doesn't mean it actually wakes up the software,
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
ARM GAS  /tmp/cc0Ep11B.s 			page 78


1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2298              		.loc 1 1789 0
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 0
 2301              		@ frame_needed = 0, uses_anonymous_args = 0
 2302              		@ link register save eliminated.
 2303              	.LVL201:
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2304              		.loc 1 1790 0
 2305 0000 0268     		ldr	r2, [r0]
 2306 0002 9369     		ldr	r3, [r2, #24]
 2307 0004 43F00403 		orr	r3, r3, #4
 2308 0008 9361     		str	r3, [r2, #24]
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2309              		.loc 1 1791 0
 2310 000a 7047     		bx	lr
 2311              		.cfi_endproc
 2312              	.LFE175:
 2314              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2315              		.align	1
 2316              		.global	HAL_UART_GetState
 2317              		.syntax unified
 2318              		.thumb
 2319              		.thumb_func
 2320              		.fpu fpv5-d16
 2322              	HAL_UART_GetState:
 2323              	.LFB176:
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief return the UART state
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL state
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
ARM GAS  /tmp/cc0Ep11B.s 			page 79


 2324              		.loc 1 1801 0
 2325              		.cfi_startproc
 2326              		@ args = 0, pretend = 0, frame = 0
 2327              		@ frame_needed = 0, uses_anonymous_args = 0
 2328              		@ link register save eliminated.
 2329              	.LVL202:
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp1 = huart->gState;
 2330              		.loc 1 1803 0
 2331 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 2332              	.LVL203:
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp2 = huart->RxState;
 2333              		.loc 1 1804 0
 2334 0004 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 2335              	.LVL204:
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2336              		.loc 1 1807 0
 2337 0008 1843     		orrs	r0, r0, r3
 2338              	.LVL205:
 2339 000a 7047     		bx	lr
 2340              		.cfi_endproc
 2341              	.LFE176:
 2343              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2344              		.align	1
 2345              		.global	HAL_UART_GetError
 2346              		.syntax unified
 2347              		.thumb
 2348              		.thumb_func
 2349              		.fpu fpv5-d16
 2351              	HAL_UART_GetError:
 2352              	.LFB177:
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @brief  Return the UART error code
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @param  huart  pointer to a UART_HandleTypeDef structure that contains
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *              the configuration information for the specified UART.
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @retval UART Error Code
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** */
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2353              		.loc 1 1816 0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 0
 2356              		@ frame_needed = 0, uses_anonymous_args = 0
 2357              		@ link register save eliminated.
 2358              	.LVL206:
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return huart->ErrorCode;
 2359              		.loc 1 1817 0
 2360 0000 C06E     		ldr	r0, [r0, #108]
 2361              	.LVL207:
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2362              		.loc 1 1818 0
 2363 0002 7047     		bx	lr
 2364              		.cfi_endproc
 2365              	.LFE177:
ARM GAS  /tmp/cc0Ep11B.s 			page 80


 2367              		.section	.text.UART_SetConfig,"ax",%progbits
 2368              		.align	1
 2369              		.global	UART_SetConfig
 2370              		.syntax unified
 2371              		.thumb
 2372              		.thumb_func
 2373              		.fpu fpv5-d16
 2375              	UART_SetConfig:
 2376              	.LFB178:
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2377              		.loc 1 1826 0
 2378              		.cfi_startproc
 2379              		@ args = 0, pretend = 0, frame = 0
 2380              		@ frame_needed = 0, uses_anonymous_args = 0
 2381              	.LVL208:
 2382 0000 10B5     		push	{r4, lr}
 2383              	.LCFI24:
 2384              		.cfi_def_cfa_offset 8
 2385              		.cfi_offset 4, -8
 2386              		.cfi_offset 14, -4
 2387 0002 0446     		mov	r4, r0
 2388              	.LVL209:
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 2389              		.loc 1 1850 0
 2390 0004 8368     		ldr	r3, [r0, #8]
 2391 0006 0269     		ldr	r2, [r0, #16]
 2392 0008 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/cc0Ep11B.s 			page 81


 2393 000a 4269     		ldr	r2, [r0, #20]
 2394 000c 1343     		orrs	r3, r3, r2
 2395 000e C269     		ldr	r2, [r0, #28]
 2396 0010 1343     		orrs	r3, r3, r2
 2397              	.LVL210:
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2398              		.loc 1 1851 0
 2399 0012 0168     		ldr	r1, [r0]
 2400 0014 0868     		ldr	r0, [r1]
 2401              	.LVL211:
 2402 0016 9D4A     		ldr	r2, .L273
 2403 0018 0240     		ands	r2, r2, r0
 2404 001a 1343     		orrs	r3, r3, r2
 2405              	.LVL212:
 2406 001c 0B60     		str	r3, [r1]
 2407              	.LVL213:
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * to huart->Init.StopBits value */
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 2408              		.loc 1 1856 0
 2409 001e 2268     		ldr	r2, [r4]
 2410 0020 5368     		ldr	r3, [r2, #4]
 2411 0022 23F44053 		bic	r3, r3, #12288
 2412 0026 E168     		ldr	r1, [r4, #12]
 2413 0028 0B43     		orrs	r3, r3, r1
 2414 002a 5360     		str	r3, [r2, #4]
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 2415              		.loc 1 1864 0
 2416 002c A369     		ldr	r3, [r4, #24]
 2417 002e 226A     		ldr	r2, [r4, #32]
 2418 0030 1A43     		orrs	r2, r2, r3
 2419              	.LVL214:
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2420              		.loc 1 1865 0
 2421 0032 2168     		ldr	r1, [r4]
 2422 0034 8B68     		ldr	r3, [r1, #8]
 2423 0036 23F43063 		bic	r3, r3, #2816
 2424 003a 1343     		orrs	r3, r3, r2
 2425 003c 8B60     		str	r3, [r1, #8]
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 2426              		.loc 1 1868 0
 2427 003e 2368     		ldr	r3, [r4]
 2428 0040 934A     		ldr	r2, .L273+4
 2429              	.LVL215:
 2430 0042 9342     		cmp	r3, r2
 2431 0044 19D0     		beq	.L258
ARM GAS  /tmp/cc0Ep11B.s 			page 82


 2432              		.loc 1 1868 0 is_stmt 0 discriminator 2
 2433 0046 934A     		ldr	r2, .L273+8
 2434 0048 9342     		cmp	r3, r2
 2435 004a 2AD0     		beq	.L259
 2436              		.loc 1 1868 0 discriminator 14
 2437 004c 924A     		ldr	r2, .L273+12
 2438 004e 9342     		cmp	r3, r2
 2439 0050 40D0     		beq	.L260
 2440              		.loc 1 1868 0 discriminator 26
 2441 0052 924A     		ldr	r2, .L273+16
 2442 0054 9342     		cmp	r3, r2
 2443 0056 55D0     		beq	.L261
 2444              		.loc 1 1868 0 discriminator 38
 2445 0058 914A     		ldr	r2, .L273+20
 2446 005a 9342     		cmp	r3, r2
 2447 005c 6AD0     		beq	.L262
 2448              		.loc 1 1868 0 discriminator 50
 2449 005e 914A     		ldr	r2, .L273+24
 2450 0060 9342     		cmp	r3, r2
 2451 0062 00F08280 		beq	.L263
 2452              		.loc 1 1868 0 discriminator 62
 2453 0066 904A     		ldr	r2, .L273+28
 2454 0068 9342     		cmp	r3, r2
 2455 006a 00F09980 		beq	.L264
 2456              		.loc 1 1868 0 discriminator 74
 2457 006e 8F4A     		ldr	r2, .L273+32
 2458 0070 9342     		cmp	r3, r2
 2459 0072 00F0B080 		beq	.L265
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2460              		.loc 1 1828 0 is_stmt 1
 2461 0076 1022     		movs	r2, #16
 2462 0078 C9E0     		b	.L185
 2463              	.L258:
 2464              		.loc 1 1868 0 discriminator 1
 2465 007a 02F59432 		add	r2, r2, #75776
 2466 007e D2F89020 		ldr	r2, [r2, #144]
 2467 0082 02F00302 		and	r2, r2, #3
 2468 0086 032A     		cmp	r2, #3
 2469 0088 03D8     		bhi	.L184
 2470 008a DFE802F0 		tbb	[pc, r2]
 2471              	.L186:
 2472 008e BF       		.byte	(.L246-.L186)/2
 2473 008f 06       		.byte	(.L187-.L186)/2
 2474 0090 04       		.byte	(.L188-.L186)/2
 2475 0091 08       		.byte	(.L189-.L186)/2
 2476              		.p2align 1
 2477              	.L184:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2478              		.loc 1 1828 0
 2479 0092 1022     		movs	r2, #16
 2480 0094 BBE0     		b	.L185
 2481              	.L188:
 2482              	.LVL216:
 2483              		.loc 1 1868 0 discriminator 6
 2484 0096 0222     		movs	r2, #2
 2485 0098 B9E0     		b	.L185
 2486              	.LVL217:
ARM GAS  /tmp/cc0Ep11B.s 			page 83


 2487              	.L187:
 2488              		.loc 1 1868 0 is_stmt 0 discriminator 5
 2489 009a 0422     		movs	r2, #4
 2490 009c B7E0     		b	.L185
 2491              	.LVL218:
 2492              	.L189:
 2493              		.loc 1 1868 0 discriminator 7
 2494 009e 0822     		movs	r2, #8
 2495 00a0 B5E0     		b	.L185
 2496              	.LVL219:
 2497              	.L259:
 2498              		.loc 1 1868 0 discriminator 13
 2499 00a2 02F5FA32 		add	r2, r2, #128000
 2500 00a6 D2F89020 		ldr	r2, [r2, #144]
 2501 00aa 02F00C02 		and	r2, r2, #12
 2502 00ae 0C2A     		cmp	r2, #12
 2503 00b0 08D8     		bhi	.L191
 2504 00b2 DFE802F0 		tbb	[pc, r2]
 2505              	.L192:
 2506 00b6 BA       		.byte	(.L247-.L192)/2
 2507 00b7 07       		.byte	(.L191-.L192)/2
 2508 00b8 07       		.byte	(.L191-.L192)/2
 2509 00b9 07       		.byte	(.L191-.L192)/2
 2510 00ba 0B       		.byte	(.L193-.L192)/2
 2511 00bb 07       		.byte	(.L191-.L192)/2
 2512 00bc 07       		.byte	(.L191-.L192)/2
 2513 00bd 07       		.byte	(.L191-.L192)/2
 2514 00be 09       		.byte	(.L194-.L192)/2
 2515 00bf 07       		.byte	(.L191-.L192)/2
 2516 00c0 07       		.byte	(.L191-.L192)/2
 2517 00c1 07       		.byte	(.L191-.L192)/2
 2518 00c2 0D       		.byte	(.L195-.L192)/2
 2519 00c3 00       		.p2align 1
 2520              	.L191:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2521              		.loc 1 1828 0 is_stmt 1
 2522 00c4 1022     		movs	r2, #16
 2523 00c6 A2E0     		b	.L185
 2524              	.L194:
 2525              	.LVL220:
 2526              		.loc 1 1868 0 discriminator 18
 2527 00c8 0222     		movs	r2, #2
 2528 00ca A0E0     		b	.L185
 2529              	.LVL221:
 2530              	.L193:
 2531              		.loc 1 1868 0 is_stmt 0 discriminator 17
 2532 00cc 0422     		movs	r2, #4
 2533 00ce 9EE0     		b	.L185
 2534              	.LVL222:
 2535              	.L195:
 2536              		.loc 1 1868 0 discriminator 19
 2537 00d0 0822     		movs	r2, #8
 2538 00d2 9CE0     		b	.L185
 2539              	.LVL223:
 2540              	.L260:
 2541              		.loc 1 1868 0 discriminator 25
 2542 00d4 02F5F832 		add	r2, r2, #126976
ARM GAS  /tmp/cc0Ep11B.s 			page 84


 2543 00d8 D2F89020 		ldr	r2, [r2, #144]
 2544 00dc 02F03002 		and	r2, r2, #48
 2545 00e0 102A     		cmp	r2, #16
 2546 00e2 0DD0     		beq	.L198
 2547 00e4 05D9     		bls	.L266
 2548 00e6 202A     		cmp	r2, #32
 2549 00e8 08D0     		beq	.L200
 2550 00ea 302A     		cmp	r2, #48
 2551 00ec 04D1     		bne	.L197
 2552              	.LVL224:
 2553              		.loc 1 1868 0 discriminator 31
 2554 00ee 0822     		movs	r2, #8
 2555 00f0 8DE0     		b	.L185
 2556              	.LVL225:
 2557              	.L266:
 2558              		.loc 1 1868 0 discriminator 25
 2559 00f2 0AB9     		cbnz	r2, .L197
 2560              		.loc 1 1868 0
 2561 00f4 0022     		movs	r2, #0
 2562 00f6 8AE0     		b	.L185
 2563              	.L197:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2564              		.loc 1 1828 0 is_stmt 1
 2565 00f8 1022     		movs	r2, #16
 2566 00fa 88E0     		b	.L185
 2567              	.L200:
 2568              	.LVL226:
 2569              		.loc 1 1868 0 discriminator 30
 2570 00fc 0222     		movs	r2, #2
 2571 00fe 86E0     		b	.L185
 2572              	.LVL227:
 2573              	.L198:
 2574              		.loc 1 1868 0 is_stmt 0 discriminator 29
 2575 0100 0422     		movs	r2, #4
 2576 0102 84E0     		b	.L185
 2577              	.LVL228:
 2578              	.L261:
 2579              		.loc 1 1868 0 discriminator 37
 2580 0104 02F5F632 		add	r2, r2, #125952
 2581 0108 D2F89020 		ldr	r2, [r2, #144]
 2582 010c 02F0C002 		and	r2, r2, #192
 2583 0110 402A     		cmp	r2, #64
 2584 0112 0DD0     		beq	.L204
 2585 0114 05D9     		bls	.L267
 2586 0116 802A     		cmp	r2, #128
 2587 0118 08D0     		beq	.L206
 2588 011a C02A     		cmp	r2, #192
 2589 011c 04D1     		bne	.L203
 2590              	.LVL229:
 2591              		.loc 1 1868 0 discriminator 43
 2592 011e 0822     		movs	r2, #8
 2593 0120 75E0     		b	.L185
 2594              	.LVL230:
 2595              	.L267:
 2596              		.loc 1 1868 0 discriminator 37
 2597 0122 0AB9     		cbnz	r2, .L203
 2598              		.loc 1 1868 0
ARM GAS  /tmp/cc0Ep11B.s 			page 85


 2599 0124 0022     		movs	r2, #0
 2600 0126 72E0     		b	.L185
 2601              	.L203:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2602              		.loc 1 1828 0 is_stmt 1
 2603 0128 1022     		movs	r2, #16
 2604 012a 70E0     		b	.L185
 2605              	.L206:
 2606              	.LVL231:
 2607              		.loc 1 1868 0 discriminator 42
 2608 012c 0222     		movs	r2, #2
 2609 012e 6EE0     		b	.L185
 2610              	.LVL232:
 2611              	.L204:
 2612              		.loc 1 1868 0 is_stmt 0 discriminator 41
 2613 0130 0422     		movs	r2, #4
 2614 0132 6CE0     		b	.L185
 2615              	.LVL233:
 2616              	.L262:
 2617              		.loc 1 1868 0 discriminator 49
 2618 0134 02F5F432 		add	r2, r2, #124928
 2619 0138 D2F89020 		ldr	r2, [r2, #144]
 2620 013c 02F44072 		and	r2, r2, #768
 2621 0140 B2F5807F 		cmp	r2, #256
 2622 0144 0FD0     		beq	.L210
 2623 0146 07D9     		bls	.L268
 2624 0148 B2F5007F 		cmp	r2, #512
 2625 014c 09D0     		beq	.L212
 2626 014e B2F5407F 		cmp	r2, #768
 2627 0152 04D1     		bne	.L209
 2628              	.LVL234:
 2629              		.loc 1 1868 0 discriminator 55
 2630 0154 0822     		movs	r2, #8
 2631 0156 5AE0     		b	.L185
 2632              	.LVL235:
 2633              	.L268:
 2634              		.loc 1 1868 0 discriminator 49
 2635 0158 0AB9     		cbnz	r2, .L209
 2636              		.loc 1 1868 0
 2637 015a 0022     		movs	r2, #0
 2638 015c 57E0     		b	.L185
 2639              	.L209:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2640              		.loc 1 1828 0 is_stmt 1
 2641 015e 1022     		movs	r2, #16
 2642 0160 55E0     		b	.L185
 2643              	.L212:
 2644              	.LVL236:
 2645              		.loc 1 1868 0 discriminator 54
 2646 0162 0222     		movs	r2, #2
 2647 0164 53E0     		b	.L185
 2648              	.LVL237:
 2649              	.L210:
 2650              		.loc 1 1868 0 is_stmt 0 discriminator 53
 2651 0166 0422     		movs	r2, #4
 2652 0168 51E0     		b	.L185
 2653              	.LVL238:
ARM GAS  /tmp/cc0Ep11B.s 			page 86


 2654              	.L263:
 2655              		.loc 1 1868 0 discriminator 61
 2656 016a 02F59232 		add	r2, r2, #74752
 2657 016e D2F89020 		ldr	r2, [r2, #144]
 2658 0172 02F44062 		and	r2, r2, #3072
 2659 0176 B2F5806F 		cmp	r2, #1024
 2660 017a 0FD0     		beq	.L216
 2661 017c 07D9     		bls	.L269
 2662 017e B2F5006F 		cmp	r2, #2048
 2663 0182 09D0     		beq	.L218
 2664 0184 B2F5406F 		cmp	r2, #3072
 2665 0188 04D1     		bne	.L215
 2666              	.LVL239:
 2667              		.loc 1 1868 0 discriminator 67
 2668 018a 0822     		movs	r2, #8
 2669 018c 3FE0     		b	.L185
 2670              	.LVL240:
 2671              	.L269:
 2672              		.loc 1 1868 0 discriminator 61
 2673 018e 0AB9     		cbnz	r2, .L215
 2674              		.loc 1 1868 0
 2675 0190 0122     		movs	r2, #1
 2676 0192 3CE0     		b	.L185
 2677              	.L215:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2678              		.loc 1 1828 0 is_stmt 1
 2679 0194 1022     		movs	r2, #16
 2680 0196 3AE0     		b	.L185
 2681              	.L218:
 2682              	.LVL241:
 2683              		.loc 1 1868 0 discriminator 66
 2684 0198 0222     		movs	r2, #2
 2685 019a 38E0     		b	.L185
 2686              	.LVL242:
 2687              	.L216:
 2688              		.loc 1 1868 0 is_stmt 0 discriminator 65
 2689 019c 0422     		movs	r2, #4
 2690 019e 36E0     		b	.L185
 2691              	.LVL243:
 2692              	.L264:
 2693              		.loc 1 1868 0 discriminator 73
 2694 01a0 02F5E032 		add	r2, r2, #114688
 2695 01a4 D2F89020 		ldr	r2, [r2, #144]
 2696 01a8 02F44052 		and	r2, r2, #12288
 2697 01ac B2F5805F 		cmp	r2, #4096
 2698 01b0 0FD0     		beq	.L222
 2699 01b2 07D9     		bls	.L270
 2700 01b4 B2F5005F 		cmp	r2, #8192
 2701 01b8 09D0     		beq	.L224
 2702 01ba B2F5405F 		cmp	r2, #12288
 2703 01be 04D1     		bne	.L221
 2704              	.LVL244:
 2705              		.loc 1 1868 0 discriminator 79
 2706 01c0 0822     		movs	r2, #8
 2707 01c2 24E0     		b	.L185
 2708              	.LVL245:
 2709              	.L270:
ARM GAS  /tmp/cc0Ep11B.s 			page 87


 2710              		.loc 1 1868 0 discriminator 73
 2711 01c4 0AB9     		cbnz	r2, .L221
 2712              		.loc 1 1868 0
 2713 01c6 0022     		movs	r2, #0
 2714 01c8 21E0     		b	.L185
 2715              	.L221:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2716              		.loc 1 1828 0 is_stmt 1
 2717 01ca 1022     		movs	r2, #16
 2718 01cc 1FE0     		b	.L185
 2719              	.L224:
 2720              	.LVL246:
 2721              		.loc 1 1868 0 discriminator 78
 2722 01ce 0222     		movs	r2, #2
 2723 01d0 1DE0     		b	.L185
 2724              	.LVL247:
 2725              	.L222:
 2726              		.loc 1 1868 0 is_stmt 0 discriminator 77
 2727 01d2 0422     		movs	r2, #4
 2728 01d4 1BE0     		b	.L185
 2729              	.LVL248:
 2730              	.L265:
 2731              		.loc 1 1868 0 discriminator 85
 2732 01d6 02F5DE32 		add	r2, r2, #113664
 2733 01da D2F89020 		ldr	r2, [r2, #144]
 2734 01de 02F44042 		and	r2, r2, #49152
 2735 01e2 B2F5804F 		cmp	r2, #16384
 2736 01e6 0FD0     		beq	.L227
 2737 01e8 07D9     		bls	.L271
 2738 01ea B2F5004F 		cmp	r2, #32768
 2739 01ee 09D0     		beq	.L229
 2740 01f0 B2F5404F 		cmp	r2, #49152
 2741 01f4 04D1     		bne	.L226
 2742              	.LVL249:
 2743              		.loc 1 1868 0 discriminator 90
 2744 01f6 0822     		movs	r2, #8
 2745 01f8 09E0     		b	.L185
 2746              	.LVL250:
 2747              	.L271:
 2748              		.loc 1 1868 0 discriminator 85
 2749 01fa 0AB9     		cbnz	r2, .L226
 2750              		.loc 1 1868 0
 2751 01fc 0022     		movs	r2, #0
 2752 01fe 06E0     		b	.L185
 2753              	.L226:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 2754              		.loc 1 1828 0 is_stmt 1
 2755 0200 1022     		movs	r2, #16
 2756 0202 04E0     		b	.L185
 2757              	.L229:
 2758              	.LVL251:
 2759              		.loc 1 1868 0 discriminator 89
 2760 0204 0222     		movs	r2, #2
 2761 0206 02E0     		b	.L185
 2762              	.LVL252:
 2763              	.L227:
 2764              		.loc 1 1868 0 is_stmt 0 discriminator 88
ARM GAS  /tmp/cc0Ep11B.s 			page 88


 2765 0208 0422     		movs	r2, #4
 2766 020a 00E0     		b	.L185
 2767              	.LVL253:
 2768              	.L246:
 2769              		.loc 1 1868 0
 2770 020c 0122     		movs	r2, #1
 2771              	.LVL254:
 2772              	.L185:
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 2773              		.loc 1 1871 0 is_stmt 1
 2774 020e E169     		ldr	r1, [r4, #28]
 2775 0210 B1F5004F 		cmp	r1, #32768
 2776 0214 0BD0     		beq	.L272
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
 2777              		.loc 1 1902 0
 2778 0216 082A     		cmp	r2, #8
 2779 0218 00F29B80 		bhi	.L256
 2780 021c DFE802F0 		tbb	[pc, r2]
 2781              	.L241:
 2782 0220 61       		.byte	(.L240-.L241)/2
 2783 0221 6D       		.byte	(.L242-.L241)/2
 2784 0222 79       		.byte	(.L243-.L241)/2
 2785 0223 99       		.byte	(.L256-.L241)/2
 2786 0224 83       		.byte	(.L244-.L241)/2
 2787 0225 99       		.byte	(.L256-.L241)/2
ARM GAS  /tmp/cc0Ep11B.s 			page 89


 2788 0226 99       		.byte	(.L256-.L241)/2
 2789 0227 99       		.byte	(.L256-.L241)/2
 2790 0228 8F       		.byte	(.L245-.L241)/2
 2791              	.LVL255:
 2792 0229 00       		.p2align 1
 2793              	.L247:
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2794              		.loc 1 1868 0
 2795 022a 0022     		movs	r2, #0
 2796 022c EFE7     		b	.L185
 2797              	.LVL256:
 2798              	.L272:
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 2799              		.loc 1 1873 0
 2800 022e 082A     		cmp	r2, #8
 2801 0230 54D8     		bhi	.L255
 2802 0232 DFE802F0 		tbb	[pc, r2]
 2803              	.L234:
 2804 0236 05       		.byte	(.L233-.L234)/2
 2805 0237 17       		.byte	(.L235-.L234)/2
 2806 0238 22       		.byte	(.L236-.L234)/2
 2807 0239 53       		.byte	(.L255-.L234)/2
 2808 023a 3F       		.byte	(.L237-.L234)/2
 2809 023b 53       		.byte	(.L255-.L234)/2
 2810 023c 53       		.byte	(.L255-.L234)/2
 2811 023d 53       		.byte	(.L255-.L234)/2
 2812 023e 4A       		.byte	(.L238-.L234)/2
 2813 023f 00       		.p2align 1
 2814              	.L233:
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2815              		.loc 1 1876 0
 2816 0240 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2817              	.LVL257:
 2818 0244 6268     		ldr	r2, [r4, #4]
 2819 0246 5308     		lsrs	r3, r2, #1
 2820 0248 03EB4003 		add	r3, r3, r0, lsl #1
 2821 024c B3FBF2F3 		udiv	r3, r3, r2
 2822 0250 9BB2     		uxth	r3, r3
 2823              	.LVL258:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2824              		.loc 1 1831 0
 2825 0252 0020     		movs	r0, #0
 2826              	.LVL259:
 2827              	.L232:
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2828              		.loc 1 1896 0
 2829 0254 23F00F02 		bic	r2, r3, #15
 2830              	.LVL260:
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2831              		.loc 1 1897 0
 2832 0258 C3F34203 		ubfx	r3, r3, #1, #3
 2833              	.LVL261:
 2834 025c 1343     		orrs	r3, r3, r2
 2835              	.LVL262:
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 2836              		.loc 1 1898 0
 2837 025e 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc0Ep11B.s 			page 90


 2838 0260 D360     		str	r3, [r2, #12]
 2839              	.LVL263:
 2840              	.L239:
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return ret;
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2841              		.loc 1 1928 0
 2842 0262 10BD     		pop	{r4, pc}
 2843              	.LVL264:
 2844              	.L235:
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2845              		.loc 1 1879 0
 2846 0264 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2847              	.LVL265:
 2848 0268 6268     		ldr	r2, [r4, #4]
 2849 026a 5308     		lsrs	r3, r2, #1
 2850 026c 03EB4003 		add	r3, r3, r0, lsl #1
 2851 0270 B3FBF2F3 		udiv	r3, r3, r2
 2852 0274 9BB2     		uxth	r3, r3
 2853              	.LVL266:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2854              		.loc 1 1831 0
 2855 0276 0020     		movs	r0, #0
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 2856              		.loc 1 1880 0
 2857 0278 ECE7     		b	.L232
 2858              	.LVL267:
 2859              	.L236:
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2860              		.loc 1 1882 0
 2861 027a 6268     		ldr	r2, [r4, #4]
 2862              	.LVL268:
 2863 027c 0C4B     		ldr	r3, .L273+36
 2864 027e 03EB5203 		add	r3, r3, r2, lsr #1
ARM GAS  /tmp/cc0Ep11B.s 			page 91


 2865 0282 B3FBF2F3 		udiv	r3, r3, r2
 2866 0286 9BB2     		uxth	r3, r3
 2867              	.LVL269:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2868              		.loc 1 1831 0
 2869 0288 0020     		movs	r0, #0
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
 2870              		.loc 1 1883 0
 2871 028a E3E7     		b	.L232
 2872              	.L274:
 2873              		.align	2
 2874              	.L273:
 2875 028c F369FFEF 		.word	-268473869
 2876 0290 00100140 		.word	1073811456
 2877 0294 00440040 		.word	1073759232
 2878 0298 00480040 		.word	1073760256
 2879 029c 004C0040 		.word	1073761280
 2880 02a0 00500040 		.word	1073762304
 2881 02a4 00140140 		.word	1073812480
 2882 02a8 00780040 		.word	1073772544
 2883 02ac 007C0040 		.word	1073773568
 2884 02b0 0048E801 		.word	32000000
 2885              	.LVL270:
 2886              	.L237:
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2887              		.loc 1 1885 0
 2888 02b4 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2889              	.LVL271:
 2890 02b8 6268     		ldr	r2, [r4, #4]
 2891 02ba 5308     		lsrs	r3, r2, #1
 2892 02bc 03EB4003 		add	r3, r3, r0, lsl #1
 2893 02c0 B3FBF2F3 		udiv	r3, r3, r2
 2894 02c4 9BB2     		uxth	r3, r3
 2895              	.LVL272:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2896              		.loc 1 1831 0
 2897 02c6 0020     		movs	r0, #0
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
 2898              		.loc 1 1886 0
 2899 02c8 C4E7     		b	.L232
 2900              	.LVL273:
 2901              	.L238:
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2902              		.loc 1 1888 0
 2903 02ca 6268     		ldr	r2, [r4, #4]
 2904              	.LVL274:
 2905 02cc 5308     		lsrs	r3, r2, #1
 2906 02ce 03F58033 		add	r3, r3, #65536
 2907 02d2 B3FBF2F3 		udiv	r3, r3, r2
 2908 02d6 9BB2     		uxth	r3, r3
 2909              	.LVL275:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2910              		.loc 1 1831 0
 2911 02d8 0020     		movs	r0, #0
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2912              		.loc 1 1889 0
 2913 02da BBE7     		b	.L232
ARM GAS  /tmp/cc0Ep11B.s 			page 92


 2914              	.LVL276:
 2915              	.L255:
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2916              		.loc 1 1892 0
 2917 02dc 0120     		movs	r0, #1
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2918              		.loc 1 1830 0
 2919 02de 0023     		movs	r3, #0
 2920 02e0 B8E7     		b	.L232
 2921              	.L240:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2922              		.loc 1 1905 0
 2923 02e2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2924              	.LVL277:
 2925 02e6 6368     		ldr	r3, [r4, #4]
 2926 02e8 00EB5300 		add	r0, r0, r3, lsr #1
 2927 02ec B0FBF3F0 		udiv	r0, r0, r3
 2928 02f0 2368     		ldr	r3, [r4]
 2929 02f2 80B2     		uxth	r0, r0
 2930 02f4 D860     		str	r0, [r3, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2931              		.loc 1 1831 0
 2932 02f6 0020     		movs	r0, #0
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
 2933              		.loc 1 1906 0
 2934 02f8 B3E7     		b	.L239
 2935              	.LVL278:
 2936              	.L242:
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2937              		.loc 1 1908 0
 2938 02fa FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2939              	.LVL279:
 2940 02fe 6368     		ldr	r3, [r4, #4]
 2941 0300 00EB5300 		add	r0, r0, r3, lsr #1
 2942 0304 B0FBF3F0 		udiv	r0, r0, r3
 2943 0308 2368     		ldr	r3, [r4]
 2944 030a 80B2     		uxth	r0, r0
 2945 030c D860     		str	r0, [r3, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2946              		.loc 1 1831 0
 2947 030e 0020     		movs	r0, #0
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 2948              		.loc 1 1909 0
 2949 0310 A7E7     		b	.L239
 2950              	.LVL280:
 2951              	.L243:
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2952              		.loc 1 1911 0
 2953 0312 6168     		ldr	r1, [r4, #4]
 2954 0314 104A     		ldr	r2, .L275
 2955              	.LVL281:
 2956 0316 02EB5102 		add	r2, r2, r1, lsr #1
 2957 031a B2FBF1F2 		udiv	r2, r2, r1
 2958 031e 92B2     		uxth	r2, r2
 2959 0320 DA60     		str	r2, [r3, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2960              		.loc 1 1831 0
ARM GAS  /tmp/cc0Ep11B.s 			page 93


 2961 0322 0020     		movs	r0, #0
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
 2962              		.loc 1 1912 0
 2963 0324 9DE7     		b	.L239
 2964              	.LVL282:
 2965              	.L244:
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2966              		.loc 1 1914 0
 2967 0326 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2968              	.LVL283:
 2969 032a 6368     		ldr	r3, [r4, #4]
 2970 032c 00EB5300 		add	r0, r0, r3, lsr #1
 2971 0330 B0FBF3F0 		udiv	r0, r0, r3
 2972 0334 2368     		ldr	r3, [r4]
 2973 0336 80B2     		uxth	r0, r0
 2974 0338 D860     		str	r0, [r3, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2975              		.loc 1 1831 0
 2976 033a 0020     		movs	r0, #0
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
 2977              		.loc 1 1915 0
 2978 033c 91E7     		b	.L239
 2979              	.LVL284:
 2980              	.L245:
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2981              		.loc 1 1917 0
 2982 033e 6168     		ldr	r1, [r4, #4]
 2983 0340 4A08     		lsrs	r2, r1, #1
 2984              	.LVL285:
 2985 0342 02F50042 		add	r2, r2, #32768
 2986 0346 B2FBF1F2 		udiv	r2, r2, r1
 2987 034a 92B2     		uxth	r2, r2
 2988 034c DA60     		str	r2, [r3, #12]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2989              		.loc 1 1831 0
 2990 034e 0020     		movs	r0, #0
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2991              		.loc 1 1918 0
 2992 0350 87E7     		b	.L239
 2993              	.LVL286:
 2994              	.L256:
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 2995              		.loc 1 1921 0
 2996 0352 0120     		movs	r0, #1
 2997 0354 85E7     		b	.L239
 2998              	.L276:
 2999 0356 00BF     		.align	2
 3000              	.L275:
 3001 0358 0024F400 		.word	16000000
 3002              		.cfi_endproc
 3003              	.LFE178:
 3005              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3006              		.align	1
 3007              		.global	UART_AdvFeatureConfig
 3008              		.syntax unified
 3009              		.thumb
 3010              		.thumb_func
ARM GAS  /tmp/cc0Ep11B.s 			page 94


 3011              		.fpu fpv5-d16
 3013              	UART_AdvFeatureConfig:
 3014              	.LFB179:
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3015              		.loc 1 1937 0
 3016              		.cfi_startproc
 3017              		@ args = 0, pretend = 0, frame = 0
 3018              		@ frame_needed = 0, uses_anonymous_args = 0
 3019              		@ link register save eliminated.
 3020              	.LVL287:
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 3021              		.loc 1 1942 0
 3022 0000 436A     		ldr	r3, [r0, #36]
 3023 0002 13F0010F 		tst	r3, #1
 3024 0006 06D0     		beq	.L278
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 3025              		.loc 1 1945 0
 3026 0008 0268     		ldr	r2, [r0]
 3027 000a 5368     		ldr	r3, [r2, #4]
 3028 000c 23F40033 		bic	r3, r3, #131072
 3029 0010 816A     		ldr	r1, [r0, #40]
 3030 0012 0B43     		orrs	r3, r3, r1
 3031 0014 5360     		str	r3, [r2, #4]
 3032              	.L278:
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 3033              		.loc 1 1949 0
 3034 0016 436A     		ldr	r3, [r0, #36]
 3035 0018 13F0020F 		tst	r3, #2
 3036 001c 06D0     		beq	.L279
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 3037              		.loc 1 1952 0
 3038 001e 0268     		ldr	r2, [r0]
 3039 0020 5368     		ldr	r3, [r2, #4]
 3040 0022 23F48033 		bic	r3, r3, #65536
 3041 0026 C16A     		ldr	r1, [r0, #44]
 3042 0028 0B43     		orrs	r3, r3, r1
 3043 002a 5360     		str	r3, [r2, #4]
 3044              	.L279:
ARM GAS  /tmp/cc0Ep11B.s 			page 95


1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure data inversion */
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 3045              		.loc 1 1956 0
 3046 002c 436A     		ldr	r3, [r0, #36]
 3047 002e 13F0040F 		tst	r3, #4
 3048 0032 06D0     		beq	.L280
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 3049              		.loc 1 1959 0
 3050 0034 0268     		ldr	r2, [r0]
 3051 0036 5368     		ldr	r3, [r2, #4]
 3052 0038 23F48023 		bic	r3, r3, #262144
 3053 003c 016B     		ldr	r1, [r0, #48]
 3054 003e 0B43     		orrs	r3, r3, r1
 3055 0040 5360     		str	r3, [r2, #4]
 3056              	.L280:
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 3057              		.loc 1 1963 0
 3058 0042 436A     		ldr	r3, [r0, #36]
 3059 0044 13F0080F 		tst	r3, #8
 3060 0048 06D0     		beq	.L281
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 3061              		.loc 1 1966 0
 3062 004a 0268     		ldr	r2, [r0]
 3063 004c 5368     		ldr	r3, [r2, #4]
 3064 004e 23F40043 		bic	r3, r3, #32768
 3065 0052 416B     		ldr	r1, [r0, #52]
 3066 0054 0B43     		orrs	r3, r3, r1
 3067 0056 5360     		str	r3, [r2, #4]
 3068              	.L281:
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 3069              		.loc 1 1970 0
 3070 0058 436A     		ldr	r3, [r0, #36]
 3071 005a 13F0100F 		tst	r3, #16
 3072 005e 06D0     		beq	.L282
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 3073              		.loc 1 1973 0
 3074 0060 0268     		ldr	r2, [r0]
 3075 0062 9368     		ldr	r3, [r2, #8]
 3076 0064 23F48053 		bic	r3, r3, #4096
 3077 0068 816B     		ldr	r1, [r0, #56]
 3078 006a 0B43     		orrs	r3, r3, r1
 3079 006c 9360     		str	r3, [r2, #8]
 3080              	.L282:
ARM GAS  /tmp/cc0Ep11B.s 			page 96


1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 3081              		.loc 1 1977 0
 3082 006e 436A     		ldr	r3, [r0, #36]
 3083 0070 13F0200F 		tst	r3, #32
 3084 0074 06D0     		beq	.L283
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 3085              		.loc 1 1980 0
 3086 0076 0268     		ldr	r2, [r0]
 3087 0078 9368     		ldr	r3, [r2, #8]
 3088 007a 23F40053 		bic	r3, r3, #8192
 3089 007e C16B     		ldr	r1, [r0, #60]
 3090 0080 0B43     		orrs	r3, r3, r1
 3091 0082 9360     		str	r3, [r2, #8]
 3092              	.L283:
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 3093              		.loc 1 1984 0
 3094 0084 436A     		ldr	r3, [r0, #36]
 3095 0086 13F0400F 		tst	r3, #64
 3096 008a 0AD0     		beq	.L284
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 3097              		.loc 1 1987 0
 3098 008c 0268     		ldr	r2, [r0]
 3099 008e 5368     		ldr	r3, [r2, #4]
 3100 0090 23F48013 		bic	r3, r3, #1048576
 3101 0094 016C     		ldr	r1, [r0, #64]
 3102 0096 0B43     		orrs	r3, r3, r1
 3103 0098 5360     		str	r3, [r2, #4]
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 3104              		.loc 1 1989 0
 3105 009a 036C     		ldr	r3, [r0, #64]
 3106 009c B3F5801F 		cmp	r3, #1048576
 3107 00a0 0BD0     		beq	.L286
 3108              	.L284:
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 3109              		.loc 1 1997 0
 3110 00a2 436A     		ldr	r3, [r0, #36]
 3111 00a4 13F0800F 		tst	r3, #128
 3112 00a8 06D0     		beq	.L277
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  /tmp/cc0Ep11B.s 			page 97


1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 3113              		.loc 1 2000 0
 3114 00aa 0268     		ldr	r2, [r0]
 3115 00ac 5368     		ldr	r3, [r2, #4]
 3116 00ae 23F40023 		bic	r3, r3, #524288
 3117 00b2 816C     		ldr	r1, [r0, #72]
 3118 00b4 0B43     		orrs	r3, r3, r1
 3119 00b6 5360     		str	r3, [r2, #4]
 3120              	.L277:
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3121              		.loc 1 2002 0
 3122 00b8 7047     		bx	lr
 3123              	.L286:
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 3124              		.loc 1 1992 0
 3125 00ba 0268     		ldr	r2, [r0]
 3126 00bc 5368     		ldr	r3, [r2, #4]
 3127 00be 23F4C003 		bic	r3, r3, #6291456
 3128 00c2 416C     		ldr	r1, [r0, #68]
 3129 00c4 0B43     		orrs	r3, r3, r1
 3130 00c6 5360     		str	r3, [r2, #4]
 3131 00c8 EBE7     		b	.L284
 3132              		.cfi_endproc
 3133              	.LFE179:
 3135              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3136              		.align	1
 3137              		.global	UART_CheckIdleState
 3138              		.syntax unified
 3139              		.thumb
 3140              		.thumb_func
 3141              		.fpu fpv5-d16
 3143              	UART_CheckIdleState:
 3144              	.LFB180:
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Check the UART Idle State
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3145              		.loc 1 2012 0
 3146              		.cfi_startproc
 3147              		@ args = 0, pretend = 0, frame = 0
 3148              		@ frame_needed = 0, uses_anonymous_args = 0
 3149              	.LVL288:
 3150 0000 10B5     		push	{r4, lr}
 3151              	.LCFI25:
 3152              		.cfi_def_cfa_offset 8
 3153              		.cfi_offset 4, -8
 3154              		.cfi_offset 14, -4
 3155 0002 82B0     		sub	sp, sp, #8
 3156              	.LCFI26:
ARM GAS  /tmp/cc0Ep11B.s 			page 98


 3157              		.cfi_def_cfa_offset 16
 3158 0004 0446     		mov	r4, r0
 3159              	.LVL289:
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3160              		.loc 1 2016 0
 3161 0006 0023     		movs	r3, #0
 3162 0008 C366     		str	r3, [r0, #108]
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tickstart = HAL_GetTick();
 3163              		.loc 1 2019 0
 3164 000a FFF7FEFF 		bl	HAL_GetTick
 3165              	.LVL290:
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 3166              		.loc 1 2022 0
 3167 000e 2268     		ldr	r2, [r4]
 3168 0010 1268     		ldr	r2, [r2]
 3169 0012 12F0080F 		tst	r2, #8
 3170 0016 09D1     		bne	.L292
 3171              	.LVL291:
 3172              	.L288:
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Timeout Occurred */
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART State */
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 3173              		.loc 1 2033 0
 3174 0018 2023     		movs	r3, #32
 3175 001a 84F86930 		strb	r3, [r4, #105]
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 3176              		.loc 1 2034 0
 3177 001e 84F86A30 		strb	r3, [r4, #106]
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3178              		.loc 1 2037 0
 3179 0022 0020     		movs	r0, #0
 3180 0024 84F86800 		strb	r0, [r4, #104]
 3181              	.L289:
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3182              		.loc 1 2040 0
 3183 0028 02B0     		add	sp, sp, #8
 3184              	.LCFI27:
 3185              		.cfi_remember_state
ARM GAS  /tmp/cc0Ep11B.s 			page 99


 3186              		.cfi_def_cfa_offset 8
 3187              		@ sp needed
 3188 002a 10BD     		pop	{r4, pc}
 3189              	.LVL292:
 3190              	.L292:
 3191              	.LCFI28:
 3192              		.cfi_restore_state
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 3193              		.loc 1 2025 0
 3194 002c 6FF07E43 		mvn	r3, #-33554432
 3195 0030 0093     		str	r3, [sp]
 3196 0032 0346     		mov	r3, r0
 3197 0034 0022     		movs	r2, #0
 3198 0036 4FF40011 		mov	r1, #2097152
 3199 003a 2046     		mov	r0, r4
 3200              	.LVL293:
 3201 003c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3202              	.LVL294:
 3203 0040 0028     		cmp	r0, #0
 3204 0042 E9D0     		beq	.L288
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 3205              		.loc 1 2028 0
 3206 0044 0320     		movs	r0, #3
 3207 0046 EFE7     		b	.L289
 3208              		.cfi_endproc
 3209              	.LFE180:
 3211              		.section	.text.HAL_UART_Init,"ax",%progbits
 3212              		.align	1
 3213              		.global	HAL_UART_Init
 3214              		.syntax unified
 3215              		.thumb
 3216              		.thumb_func
 3217              		.fpu fpv5-d16
 3219              	HAL_UART_Init:
 3220              	.LFB138:
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3221              		.loc 1 242 0
 3222              		.cfi_startproc
 3223              		@ args = 0, pretend = 0, frame = 0
 3224              		@ frame_needed = 0, uses_anonymous_args = 0
 3225              	.LVL295:
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3226              		.loc 1 244 0
 3227 0000 78B3     		cbz	r0, .L297
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3228              		.loc 1 242 0
 3229 0002 10B5     		push	{r4, lr}
 3230              	.LCFI29:
 3231              		.cfi_def_cfa_offset 8
 3232              		.cfi_offset 4, -8
 3233              		.cfi_offset 14, -4
 3234 0004 0446     		mov	r4, r0
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3235              		.loc 1 260 0
 3236 0006 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3237 000a 0BB3     		cbz	r3, .L302
 3238              	.LVL296:
ARM GAS  /tmp/cc0Ep11B.s 			page 100


 3239              	.L295:
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3240              		.loc 1 269 0
 3241 000c 2423     		movs	r3, #36
 3242 000e 84F86930 		strb	r3, [r4, #105]
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3243              		.loc 1 272 0
 3244 0012 2268     		ldr	r2, [r4]
 3245 0014 1368     		ldr	r3, [r2]
 3246 0016 23F00103 		bic	r3, r3, #1
 3247 001a 1360     		str	r3, [r2]
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3248              		.loc 1 275 0
 3249 001c 2046     		mov	r0, r4
 3250 001e FFF7FEFF 		bl	UART_SetConfig
 3251              	.LVL297:
 3252 0022 0128     		cmp	r0, #1
 3253 0024 13D0     		beq	.L294
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3254              		.loc 1 280 0
 3255 0026 636A     		ldr	r3, [r4, #36]
 3256 0028 BBB9     		cbnz	r3, .L303
 3257              	.L296:
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3258              		.loc 1 288 0
 3259 002a 2268     		ldr	r2, [r4]
 3260 002c 5368     		ldr	r3, [r2, #4]
 3261 002e 23F49043 		bic	r3, r3, #18432
 3262 0032 5360     		str	r3, [r2, #4]
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3263              		.loc 1 289 0
 3264 0034 2268     		ldr	r2, [r4]
 3265 0036 9368     		ldr	r3, [r2, #8]
 3266 0038 23F02A03 		bic	r3, r3, #42
 3267 003c 9360     		str	r3, [r2, #8]
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3268              		.loc 1 292 0
 3269 003e 2268     		ldr	r2, [r4]
 3270 0040 1368     		ldr	r3, [r2]
 3271 0042 43F00103 		orr	r3, r3, #1
 3272 0046 1360     		str	r3, [r2]
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3273              		.loc 1 295 0
 3274 0048 2046     		mov	r0, r4
 3275 004a FFF7FEFF 		bl	UART_CheckIdleState
 3276              	.LVL298:
 3277              	.L294:
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3278              		.loc 1 296 0
 3279 004e 10BD     		pop	{r4, pc}
 3280              	.LVL299:
 3281              	.L302:
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3282              		.loc 1 263 0
 3283 0050 80F86830 		strb	r3, [r0, #104]
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3284              		.loc 1 266 0
ARM GAS  /tmp/cc0Ep11B.s 			page 101


 3285 0054 FFF7FEFF 		bl	HAL_UART_MspInit
 3286              	.LVL300:
 3287 0058 D8E7     		b	.L295
 3288              	.L303:
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3289              		.loc 1 282 0
 3290 005a 2046     		mov	r0, r4
 3291 005c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3292              	.LVL301:
 3293 0060 E3E7     		b	.L296
 3294              	.LVL302:
 3295              	.L297:
 3296              	.LCFI30:
 3297              		.cfi_def_cfa_offset 0
 3298              		.cfi_restore 4
 3299              		.cfi_restore 14
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3300              		.loc 1 246 0
 3301 0062 0120     		movs	r0, #1
 3302              	.LVL303:
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3303              		.loc 1 296 0
 3304 0064 7047     		bx	lr
 3305              		.cfi_endproc
 3306              	.LFE138:
 3308              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 3309              		.align	1
 3310              		.global	HAL_HalfDuplex_Init
 3311              		.syntax unified
 3312              		.thumb
 3313              		.thumb_func
 3314              		.fpu fpv5-d16
 3316              	HAL_HalfDuplex_Init:
 3317              	.LFB139:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3318              		.loc 1 305 0
 3319              		.cfi_startproc
 3320              		@ args = 0, pretend = 0, frame = 0
 3321              		@ frame_needed = 0, uses_anonymous_args = 0
 3322              	.LVL304:
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3323              		.loc 1 307 0
 3324 0000 0028     		cmp	r0, #0
 3325 0002 34D0     		beq	.L308
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3326              		.loc 1 305 0
 3327 0004 10B5     		push	{r4, lr}
 3328              	.LCFI31:
 3329              		.cfi_def_cfa_offset 8
 3330              		.cfi_offset 4, -8
 3331              		.cfi_offset 14, -4
 3332 0006 0446     		mov	r4, r0
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3333              		.loc 1 312 0
 3334 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3335 000c 33B3     		cbz	r3, .L313
 3336              	.LVL305:
ARM GAS  /tmp/cc0Ep11B.s 			page 102


 3337              	.L306:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3338              		.loc 1 321 0
 3339 000e 2423     		movs	r3, #36
 3340 0010 84F86930 		strb	r3, [r4, #105]
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3341              		.loc 1 324 0
 3342 0014 2268     		ldr	r2, [r4]
 3343 0016 1368     		ldr	r3, [r2]
 3344 0018 23F00103 		bic	r3, r3, #1
 3345 001c 1360     		str	r3, [r2]
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3346              		.loc 1 327 0
 3347 001e 2046     		mov	r0, r4
 3348 0020 FFF7FEFF 		bl	UART_SetConfig
 3349              	.LVL306:
 3350 0024 0128     		cmp	r0, #1
 3351 0026 18D0     		beq	.L305
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3352              		.loc 1 332 0
 3353 0028 636A     		ldr	r3, [r4, #36]
 3354 002a E3B9     		cbnz	r3, .L314
 3355              	.L307:
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 3356              		.loc 1 340 0
 3357 002c 2268     		ldr	r2, [r4]
 3358 002e 5368     		ldr	r3, [r2, #4]
 3359 0030 23F49043 		bic	r3, r3, #18432
 3360 0034 5360     		str	r3, [r2, #4]
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3361              		.loc 1 341 0
 3362 0036 2268     		ldr	r2, [r4]
 3363 0038 9368     		ldr	r3, [r2, #8]
 3364 003a 23F02203 		bic	r3, r3, #34
 3365 003e 9360     		str	r3, [r2, #8]
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3366              		.loc 1 344 0
 3367 0040 2268     		ldr	r2, [r4]
 3368 0042 9368     		ldr	r3, [r2, #8]
 3369 0044 43F00803 		orr	r3, r3, #8
 3370 0048 9360     		str	r3, [r2, #8]
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3371              		.loc 1 347 0
 3372 004a 2268     		ldr	r2, [r4]
 3373 004c 1368     		ldr	r3, [r2]
 3374 004e 43F00103 		orr	r3, r3, #1
 3375 0052 1360     		str	r3, [r2]
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3376              		.loc 1 350 0
 3377 0054 2046     		mov	r0, r4
 3378 0056 FFF7FEFF 		bl	UART_CheckIdleState
 3379              	.LVL307:
 3380              	.L305:
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3381              		.loc 1 351 0
 3382 005a 10BD     		pop	{r4, pc}
 3383              	.LVL308:
ARM GAS  /tmp/cc0Ep11B.s 			page 103


 3384              	.L313:
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3385              		.loc 1 315 0
 3386 005c 80F86830 		strb	r3, [r0, #104]
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3387              		.loc 1 318 0
 3388 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 3389              	.LVL309:
 3390 0064 D3E7     		b	.L306
 3391              	.L314:
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3392              		.loc 1 334 0
 3393 0066 2046     		mov	r0, r4
 3394 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3395              	.LVL310:
 3396 006c DEE7     		b	.L307
 3397              	.LVL311:
 3398              	.L308:
 3399              	.LCFI32:
 3400              		.cfi_def_cfa_offset 0
 3401              		.cfi_restore 4
 3402              		.cfi_restore 14
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3403              		.loc 1 309 0
 3404 006e 0120     		movs	r0, #1
 3405              	.LVL312:
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3406              		.loc 1 351 0
 3407 0070 7047     		bx	lr
 3408              		.cfi_endproc
 3409              	.LFE139:
 3411              		.section	.text.HAL_LIN_Init,"ax",%progbits
 3412              		.align	1
 3413              		.global	HAL_LIN_Init
 3414              		.syntax unified
 3415              		.thumb
 3416              		.thumb_func
 3417              		.fpu fpv5-d16
 3419              	HAL_LIN_Init:
 3420              	.LFB140:
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3421              		.loc 1 365 0
 3422              		.cfi_startproc
 3423              		@ args = 0, pretend = 0, frame = 0
 3424              		@ frame_needed = 0, uses_anonymous_args = 0
 3425              	.LVL313:
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3426              		.loc 1 367 0
 3427 0000 0028     		cmp	r0, #0
 3428 0002 3BD0     		beq	.L319
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3429              		.loc 1 365 0
 3430 0004 38B5     		push	{r3, r4, r5, lr}
 3431              	.LCFI33:
 3432              		.cfi_def_cfa_offset 16
 3433              		.cfi_offset 3, -16
 3434              		.cfi_offset 4, -12
ARM GAS  /tmp/cc0Ep11B.s 			page 104


 3435              		.cfi_offset 5, -8
 3436              		.cfi_offset 14, -4
 3437 0006 0446     		mov	r4, r0
 3438 0008 0D46     		mov	r5, r1
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3439              		.loc 1 377 0
 3440 000a 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3441 000e 63B3     		cbz	r3, .L324
 3442              	.LVL314:
 3443              	.L317:
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3444              		.loc 1 386 0
 3445 0010 2423     		movs	r3, #36
 3446 0012 84F86930 		strb	r3, [r4, #105]
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3447              		.loc 1 389 0
 3448 0016 2268     		ldr	r2, [r4]
 3449 0018 1368     		ldr	r3, [r2]
 3450 001a 23F00103 		bic	r3, r3, #1
 3451 001e 1360     		str	r3, [r2]
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3452              		.loc 1 392 0
 3453 0020 2046     		mov	r0, r4
 3454 0022 FFF7FEFF 		bl	UART_SetConfig
 3455              	.LVL315:
 3456 0026 0128     		cmp	r0, #1
 3457 0028 1ED0     		beq	.L316
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3458              		.loc 1 397 0
 3459 002a 636A     		ldr	r3, [r4, #36]
 3460 002c 13BB     		cbnz	r3, .L325
 3461              	.L318:
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 3462              		.loc 1 405 0
 3463 002e 2268     		ldr	r2, [r4]
 3464 0030 5368     		ldr	r3, [r2, #4]
 3465 0032 23F40063 		bic	r3, r3, #2048
 3466 0036 5360     		str	r3, [r2, #4]
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3467              		.loc 1 406 0
 3468 0038 2268     		ldr	r2, [r4]
 3469 003a 9368     		ldr	r3, [r2, #8]
 3470 003c 23F02A03 		bic	r3, r3, #42
 3471 0040 9360     		str	r3, [r2, #8]
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3472              		.loc 1 409 0
 3473 0042 2268     		ldr	r2, [r4]
 3474 0044 5368     		ldr	r3, [r2, #4]
 3475 0046 43F48043 		orr	r3, r3, #16384
 3476 004a 5360     		str	r3, [r2, #4]
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3477              		.loc 1 412 0
 3478 004c 2268     		ldr	r2, [r4]
 3479 004e 5368     		ldr	r3, [r2, #4]
 3480 0050 23F02003 		bic	r3, r3, #32
 3481 0054 2B43     		orrs	r3, r3, r5
 3482 0056 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cc0Ep11B.s 			page 105


 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3483              		.loc 1 415 0
 3484 0058 2268     		ldr	r2, [r4]
 3485 005a 1368     		ldr	r3, [r2]
 3486 005c 43F00103 		orr	r3, r3, #1
 3487 0060 1360     		str	r3, [r2]
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3488              		.loc 1 418 0
 3489 0062 2046     		mov	r0, r4
 3490 0064 FFF7FEFF 		bl	UART_CheckIdleState
 3491              	.LVL316:
 3492              	.L316:
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3493              		.loc 1 419 0
 3494 0068 38BD     		pop	{r3, r4, r5, pc}
 3495              	.LVL317:
 3496              	.L324:
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3497              		.loc 1 380 0
 3498 006a 80F86830 		strb	r3, [r0, #104]
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3499              		.loc 1 383 0
 3500 006e FFF7FEFF 		bl	HAL_UART_MspInit
 3501              	.LVL318:
 3502 0072 CDE7     		b	.L317
 3503              	.L325:
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3504              		.loc 1 399 0
 3505 0074 2046     		mov	r0, r4
 3506 0076 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3507              	.LVL319:
 3508 007a D8E7     		b	.L318
 3509              	.LVL320:
 3510              	.L319:
 3511              	.LCFI34:
 3512              		.cfi_def_cfa_offset 0
 3513              		.cfi_restore 3
 3514              		.cfi_restore 4
 3515              		.cfi_restore 5
 3516              		.cfi_restore 14
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3517              		.loc 1 369 0
 3518 007c 0120     		movs	r0, #1
 3519              	.LVL321:
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3520              		.loc 1 419 0
 3521 007e 7047     		bx	lr
 3522              		.cfi_endproc
 3523              	.LFE140:
 3525              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 3526              		.align	1
 3527              		.global	HAL_MultiProcessor_Init
 3528              		.syntax unified
 3529              		.thumb
 3530              		.thumb_func
 3531              		.fpu fpv5-d16
 3533              	HAL_MultiProcessor_Init:
ARM GAS  /tmp/cc0Ep11B.s 			page 106


 3534              	.LFB141:
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3535              		.loc 1 439 0
 3536              		.cfi_startproc
 3537              		@ args = 0, pretend = 0, frame = 0
 3538              		@ frame_needed = 0, uses_anonymous_args = 0
 3539              	.LVL322:
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3540              		.loc 1 441 0
 3541 0000 0028     		cmp	r0, #0
 3542 0002 42D0     		beq	.L331
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 3543              		.loc 1 439 0
 3544 0004 70B5     		push	{r4, r5, r6, lr}
 3545              	.LCFI35:
 3546              		.cfi_def_cfa_offset 16
 3547              		.cfi_offset 4, -16
 3548              		.cfi_offset 5, -12
 3549              		.cfi_offset 6, -8
 3550              		.cfi_offset 14, -4
 3551 0006 0446     		mov	r4, r0
 3552 0008 1546     		mov	r5, r2
 3553 000a 0E46     		mov	r6, r1
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3554              		.loc 1 449 0
 3555 000c 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3556 0010 53B3     		cbz	r3, .L336
 3557              	.LVL323:
 3558              	.L328:
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3559              		.loc 1 458 0
 3560 0012 2423     		movs	r3, #36
 3561 0014 84F86930 		strb	r3, [r4, #105]
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3562              		.loc 1 461 0
 3563 0018 2268     		ldr	r2, [r4]
 3564 001a 1368     		ldr	r3, [r2]
 3565 001c 23F00103 		bic	r3, r3, #1
 3566 0020 1360     		str	r3, [r2]
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3567              		.loc 1 464 0
 3568 0022 2046     		mov	r0, r4
 3569 0024 FFF7FEFF 		bl	UART_SetConfig
 3570              	.LVL324:
 3571 0028 0128     		cmp	r0, #1
 3572 002a 1CD0     		beq	.L327
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3573              		.loc 1 469 0
 3574 002c 636A     		ldr	r3, [r4, #36]
 3575 002e 03BB     		cbnz	r3, .L337
 3576              	.L329:
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3577              		.loc 1 477 0
 3578 0030 2268     		ldr	r2, [r4]
 3579 0032 5368     		ldr	r3, [r2, #4]
 3580 0034 23F49043 		bic	r3, r3, #18432
 3581 0038 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cc0Ep11B.s 			page 107


 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3582              		.loc 1 478 0
 3583 003a 2268     		ldr	r2, [r4]
 3584 003c 9368     		ldr	r3, [r2, #8]
 3585 003e 23F02A03 		bic	r3, r3, #42
 3586 0042 9360     		str	r3, [r2, #8]
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3587              		.loc 1 480 0
 3588 0044 B5F5006F 		cmp	r5, #2048
 3589 0048 17D0     		beq	.L338
 3590              	.L330:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3591              		.loc 1 487 0
 3592 004a 2368     		ldr	r3, [r4]
 3593 004c 1A68     		ldr	r2, [r3]
 3594 004e 22F40062 		bic	r2, r2, #2048
 3595 0052 1543     		orrs	r5, r5, r2
 3596              	.LVL325:
 3597 0054 1D60     		str	r5, [r3]
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3598              		.loc 1 490 0
 3599 0056 2268     		ldr	r2, [r4]
 3600 0058 1368     		ldr	r3, [r2]
 3601 005a 43F00103 		orr	r3, r3, #1
 3602 005e 1360     		str	r3, [r2]
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3603              		.loc 1 493 0
 3604 0060 2046     		mov	r0, r4
 3605 0062 FFF7FEFF 		bl	UART_CheckIdleState
 3606              	.LVL326:
 3607              	.L327:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3608              		.loc 1 494 0
 3609 0066 70BD     		pop	{r4, r5, r6, pc}
 3610              	.LVL327:
 3611              	.L336:
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3612              		.loc 1 452 0
 3613 0068 80F86830 		strb	r3, [r0, #104]
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3614              		.loc 1 455 0
 3615 006c FFF7FEFF 		bl	HAL_UART_MspInit
 3616              	.LVL328:
 3617 0070 CFE7     		b	.L328
 3618              	.L337:
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3619              		.loc 1 471 0
 3620 0072 2046     		mov	r0, r4
 3621 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3622              	.LVL329:
 3623 0078 DAE7     		b	.L329
 3624              	.L338:
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3625              		.loc 1 483 0
 3626 007a 2368     		ldr	r3, [r4]
 3627 007c 5968     		ldr	r1, [r3, #4]
 3628 007e 21F07F41 		bic	r1, r1, #-16777216
ARM GAS  /tmp/cc0Ep11B.s 			page 108


 3629 0082 41EA0666 		orr	r6, r1, r6, lsl #24
 3630 0086 5E60     		str	r6, [r3, #4]
 3631 0088 DFE7     		b	.L330
 3632              	.LVL330:
 3633              	.L331:
 3634              	.LCFI36:
 3635              		.cfi_def_cfa_offset 0
 3636              		.cfi_restore 4
 3637              		.cfi_restore 5
 3638              		.cfi_restore 6
 3639              		.cfi_restore 14
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3640              		.loc 1 443 0
 3641 008a 0120     		movs	r0, #1
 3642              	.LVL331:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3643              		.loc 1 494 0
 3644 008c 7047     		bx	lr
 3645              		.cfi_endproc
 3646              	.LFE141:
 3648              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
 3649              		.align	1
 3650              		.global	HAL_RS485Ex_Init
 3651              		.syntax unified
 3652              		.thumb
 3653              		.thumb_func
 3654              		.fpu fpv5-d16
 3656              	HAL_RS485Ex_Init:
 3657              	.LFB142:
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 3658              		.loc 1 517 0
 3659              		.cfi_startproc
 3660              		@ args = 0, pretend = 0, frame = 0
 3661              		@ frame_needed = 0, uses_anonymous_args = 0
 3662              	.LVL332:
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3663              		.loc 1 521 0
 3664 0000 0028     		cmp	r0, #0
 3665 0002 3CD0     		beq	.L343
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 3666              		.loc 1 517 0
 3667 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3668              	.LCFI37:
 3669              		.cfi_def_cfa_offset 24
 3670              		.cfi_offset 3, -24
 3671              		.cfi_offset 4, -20
 3672              		.cfi_offset 5, -16
 3673              		.cfi_offset 6, -12
 3674              		.cfi_offset 7, -8
 3675              		.cfi_offset 14, -4
 3676 0006 0446     		mov	r4, r0
 3677 0008 1D46     		mov	r5, r3
 3678 000a 1646     		mov	r6, r2
 3679 000c 0F46     		mov	r7, r1
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3680              		.loc 1 537 0
 3681 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
ARM GAS  /tmp/cc0Ep11B.s 			page 109


 3682              	.LVL333:
 3683 0012 5BB3     		cbz	r3, .L348
 3684              	.LVL334:
 3685              	.L341:
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3686              		.loc 1 546 0
 3687 0014 2423     		movs	r3, #36
 3688 0016 84F86930 		strb	r3, [r4, #105]
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3689              		.loc 1 549 0
 3690 001a 2268     		ldr	r2, [r4]
 3691 001c 1368     		ldr	r3, [r2]
 3692 001e 23F00103 		bic	r3, r3, #1
 3693 0022 1360     		str	r3, [r2]
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3694              		.loc 1 552 0
 3695 0024 2046     		mov	r0, r4
 3696 0026 FFF7FEFF 		bl	UART_SetConfig
 3697              	.LVL335:
 3698 002a 0128     		cmp	r0, #1
 3699 002c 1DD0     		beq	.L340
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 3700              		.loc 1 557 0
 3701 002e 636A     		ldr	r3, [r4, #36]
 3702 0030 0BBB     		cbnz	r3, .L349
 3703              	.L342:
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3704              		.loc 1 563 0
 3705 0032 2268     		ldr	r2, [r4]
 3706 0034 9368     		ldr	r3, [r2, #8]
 3707 0036 43F48043 		orr	r3, r3, #16384
 3708 003a 9360     		str	r3, [r2, #8]
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3709              		.loc 1 566 0
 3710 003c 2268     		ldr	r2, [r4]
 3711 003e 9368     		ldr	r3, [r2, #8]
 3712 0040 23F40043 		bic	r3, r3, #32768
 3713 0044 3B43     		orrs	r3, r3, r7
 3714 0046 9360     		str	r3, [r2, #8]
 3715              	.LVL336:
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT|USART_CR1_DEAT), temp);
 3716              		.loc 1 570 0
 3717 0048 2D04     		lsls	r5, r5, #16
 3718              	.LVL337:
 3719 004a 45EA4652 		orr	r2, r5, r6, lsl #21
 3720              	.LVL338:
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3721              		.loc 1 571 0
 3722 004e 2368     		ldr	r3, [r4]
 3723 0050 1968     		ldr	r1, [r3]
 3724 0052 0C4D     		ldr	r5, .L350
 3725 0054 0D40     		ands	r5, r5, r1
 3726 0056 2A43     		orrs	r2, r2, r5
 3727              	.LVL339:
 3728 0058 1A60     		str	r2, [r3]
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3729              		.loc 1 574 0
ARM GAS  /tmp/cc0Ep11B.s 			page 110


 3730 005a 2268     		ldr	r2, [r4]
 3731 005c 1368     		ldr	r3, [r2]
 3732 005e 43F00103 		orr	r3, r3, #1
 3733 0062 1360     		str	r3, [r2]
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3734              		.loc 1 577 0
 3735 0064 2046     		mov	r0, r4
 3736 0066 FFF7FEFF 		bl	UART_CheckIdleState
 3737              	.LVL340:
 3738              	.L340:
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3739              		.loc 1 578 0
 3740 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3741              	.LVL341:
 3742              	.L348:
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3743              		.loc 1 540 0
 3744 006c 80F86830 		strb	r3, [r0, #104]
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3745              		.loc 1 543 0
 3746 0070 FFF7FEFF 		bl	HAL_UART_MspInit
 3747              	.LVL342:
 3748 0074 CEE7     		b	.L341
 3749              	.L349:
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3750              		.loc 1 559 0
 3751 0076 2046     		mov	r0, r4
 3752 0078 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3753              	.LVL343:
 3754 007c D9E7     		b	.L342
 3755              	.LVL344:
 3756              	.L343:
 3757              	.LCFI38:
 3758              		.cfi_def_cfa_offset 0
 3759              		.cfi_restore 3
 3760              		.cfi_restore 4
 3761              		.cfi_restore 5
 3762              		.cfi_restore 6
 3763              		.cfi_restore 7
 3764              		.cfi_restore 14
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 3765              		.loc 1 523 0
 3766 007e 0120     		movs	r0, #1
 3767              	.LVL345:
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3768              		.loc 1 578 0
 3769 0080 7047     		bx	lr
 3770              	.L351:
 3771 0082 00BF     		.align	2
 3772              	.L350:
 3773 0084 FFFF00FC 		.word	-67043329
 3774              		.cfi_endproc
 3775              	.LFE142:
 3777              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3778              		.align	1
 3779              		.global	HAL_MultiProcessor_EnableMuteMode
 3780              		.syntax unified
ARM GAS  /tmp/cc0Ep11B.s 			page 111


 3781              		.thumb
 3782              		.thumb_func
 3783              		.fpu fpv5-d16
 3785              	HAL_MultiProcessor_EnableMuteMode:
 3786              	.LFB173:
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 3787              		.loc 1 1747 0
 3788              		.cfi_startproc
 3789              		@ args = 0, pretend = 0, frame = 0
 3790              		@ frame_needed = 0, uses_anonymous_args = 0
 3791              	.LVL346:
 3792 0000 08B5     		push	{r3, lr}
 3793              	.LCFI39:
 3794              		.cfi_def_cfa_offset 8
 3795              		.cfi_offset 3, -8
 3796              		.cfi_offset 14, -4
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3797              		.loc 1 1749 0
 3798 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3799 0006 012B     		cmp	r3, #1
 3800 0008 10D0     		beq	.L354
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3801              		.loc 1 1749 0 is_stmt 0 discriminator 2
 3802 000a 0123     		movs	r3, #1
 3803 000c 80F86830 		strb	r3, [r0, #104]
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3804              		.loc 1 1751 0 is_stmt 1 discriminator 2
 3805 0010 2423     		movs	r3, #36
 3806 0012 80F86930 		strb	r3, [r0, #105]
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3807              		.loc 1 1754 0 discriminator 2
 3808 0016 0268     		ldr	r2, [r0]
 3809 0018 1368     		ldr	r3, [r2]
 3810 001a 43F40053 		orr	r3, r3, #8192
 3811 001e 1360     		str	r3, [r2]
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3812              		.loc 1 1756 0 discriminator 2
 3813 0020 2023     		movs	r3, #32
 3814 0022 80F86930 		strb	r3, [r0, #105]
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3815              		.loc 1 1758 0 discriminator 2
 3816 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3817              	.LVL347:
 3818              	.L353:
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3819              		.loc 1 1759 0
 3820 002a 08BD     		pop	{r3, pc}
 3821              	.LVL348:
 3822              	.L354:
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3823              		.loc 1 1749 0
 3824 002c 0220     		movs	r0, #2
 3825              	.LVL349:
 3826 002e FCE7     		b	.L353
 3827              		.cfi_endproc
 3828              	.LFE173:
 3830              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
ARM GAS  /tmp/cc0Ep11B.s 			page 112


 3831              		.align	1
 3832              		.global	HAL_MultiProcessor_DisableMuteMode
 3833              		.syntax unified
 3834              		.thumb
 3835              		.thumb_func
 3836              		.fpu fpv5-d16
 3838              	HAL_MultiProcessor_DisableMuteMode:
 3839              	.LFB174:
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
 3840              		.loc 1 1768 0
 3841              		.cfi_startproc
 3842              		@ args = 0, pretend = 0, frame = 0
 3843              		@ frame_needed = 0, uses_anonymous_args = 0
 3844              	.LVL350:
 3845 0000 08B5     		push	{r3, lr}
 3846              	.LCFI40:
 3847              		.cfi_def_cfa_offset 8
 3848              		.cfi_offset 3, -8
 3849              		.cfi_offset 14, -4
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3850              		.loc 1 1770 0
 3851 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3852 0006 012B     		cmp	r3, #1
 3853 0008 10D0     		beq	.L358
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3854              		.loc 1 1770 0 is_stmt 0 discriminator 2
 3855 000a 0123     		movs	r3, #1
 3856 000c 80F86830 		strb	r3, [r0, #104]
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3857              		.loc 1 1772 0 is_stmt 1 discriminator 2
 3858 0010 2423     		movs	r3, #36
 3859 0012 80F86930 		strb	r3, [r0, #105]
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3860              		.loc 1 1775 0 discriminator 2
 3861 0016 0268     		ldr	r2, [r0]
 3862 0018 1368     		ldr	r3, [r2]
 3863 001a 23F40053 		bic	r3, r3, #8192
 3864 001e 1360     		str	r3, [r2]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3865              		.loc 1 1777 0 discriminator 2
 3866 0020 2023     		movs	r3, #32
 3867 0022 80F86930 		strb	r3, [r0, #105]
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3868              		.loc 1 1779 0 discriminator 2
 3869 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3870              	.LVL351:
 3871              	.L357:
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3872              		.loc 1 1780 0
 3873 002a 08BD     		pop	{r3, pc}
 3874              	.LVL352:
 3875              	.L358:
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 3876              		.loc 1 1770 0
 3877 002c 0220     		movs	r0, #2
 3878              	.LVL353:
 3879 002e FCE7     		b	.L357
ARM GAS  /tmp/cc0Ep11B.s 			page 113


 3880              		.cfi_endproc
 3881              	.LFE174:
 3883              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3884              		.align	1
 3885              		.global	HAL_HalfDuplex_EnableTransmitter
 3886              		.syntax unified
 3887              		.thumb
 3888              		.thumb_func
 3889              		.fpu fpv5-d16
 3891              	HAL_HalfDuplex_EnableTransmitter:
 3892              	.LFB181:
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3893              		.loc 1 2049 0
 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 0
 3896              		@ frame_needed = 0, uses_anonymous_args = 0
 3897              		@ link register save eliminated.
 3898              	.LVL354:
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3899              		.loc 1 2051 0
 3900 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3901 0004 012B     		cmp	r3, #1
 3902 0006 17D0     		beq	.L362
 3903              		.loc 1 2051 0 is_stmt 0 discriminator 2
 3904 0008 0123     		movs	r3, #1
 3905 000a 80F86830 		strb	r3, [r0, #104]
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3906              		.loc 1 2052 0 is_stmt 1 discriminator 2
 3907 000e 2423     		movs	r3, #36
 3908 0010 80F86930 		strb	r3, [r0, #105]
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 3909              		.loc 1 2055 0 discriminator 2
 3910 0014 0268     		ldr	r2, [r0]
 3911 0016 1368     		ldr	r3, [r2]
 3912 0018 23F00C03 		bic	r3, r3, #12
 3913 001c 1360     		str	r3, [r2]
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 3914              		.loc 1 2057 0 discriminator 2
 3915 001e 0268     		ldr	r2, [r0]
 3916 0020 1368     		ldr	r3, [r2]
 3917 0022 43F00803 		orr	r3, r3, #8
 3918 0026 1360     		str	r3, [r2]
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 3919              		.loc 1 2059 0 discriminator 2
ARM GAS  /tmp/cc0Ep11B.s 			page 114


 3920 0028 2023     		movs	r3, #32
 3921 002a 80F86930 		strb	r3, [r0, #105]
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3922              		.loc 1 2061 0 discriminator 2
 3923 002e 0023     		movs	r3, #0
 3924 0030 80F86830 		strb	r3, [r0, #104]
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3925              		.loc 1 2063 0 discriminator 2
 3926 0034 1846     		mov	r0, r3
 3927              	.LVL355:
 3928 0036 7047     		bx	lr
 3929              	.LVL356:
 3930              	.L362:
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3931              		.loc 1 2051 0
 3932 0038 0220     		movs	r0, #2
 3933              	.LVL357:
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3934              		.loc 1 2064 0
 3935 003a 7047     		bx	lr
 3936              		.cfi_endproc
 3937              	.LFE181:
 3939              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3940              		.align	1
 3941              		.global	HAL_HalfDuplex_EnableReceiver
 3942              		.syntax unified
 3943              		.thumb
 3944              		.thumb_func
 3945              		.fpu fpv5-d16
 3947              	HAL_HalfDuplex_EnableReceiver:
 3948              	.LFB182:
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3949              		.loc 1 2072 0
 3950              		.cfi_startproc
 3951              		@ args = 0, pretend = 0, frame = 0
 3952              		@ frame_needed = 0, uses_anonymous_args = 0
 3953              		@ link register save eliminated.
 3954              	.LVL358:
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3955              		.loc 1 2074 0
 3956 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3957 0004 012B     		cmp	r3, #1
 3958 0006 17D0     		beq	.L365
 3959              		.loc 1 2074 0 is_stmt 0 discriminator 2
 3960 0008 0123     		movs	r3, #1
 3961 000a 80F86830 		strb	r3, [r0, #104]
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cc0Ep11B.s 			page 115


 3962              		.loc 1 2075 0 is_stmt 1 discriminator 2
 3963 000e 2423     		movs	r3, #36
 3964 0010 80F86930 		strb	r3, [r0, #105]
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 3965              		.loc 1 2078 0 discriminator 2
 3966 0014 0268     		ldr	r2, [r0]
 3967 0016 1368     		ldr	r3, [r2]
 3968 0018 23F00C03 		bic	r3, r3, #12
 3969 001c 1360     		str	r3, [r2]
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 3970              		.loc 1 2080 0 discriminator 2
 3971 001e 0268     		ldr	r2, [r0]
 3972 0020 1368     		ldr	r3, [r2]
 3973 0022 43F00403 		orr	r3, r3, #4
 3974 0026 1360     		str	r3, [r2]
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3975              		.loc 1 2082 0 discriminator 2
 3976 0028 2023     		movs	r3, #32
 3977 002a 80F86930 		strb	r3, [r0, #105]
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3978              		.loc 1 2084 0 discriminator 2
 3979 002e 0023     		movs	r3, #0
 3980 0030 80F86830 		strb	r3, [r0, #104]
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3981              		.loc 1 2086 0 discriminator 2
 3982 0034 1846     		mov	r0, r3
 3983              	.LVL359:
 3984 0036 7047     		bx	lr
 3985              	.LVL360:
 3986              	.L365:
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3987              		.loc 1 2074 0
 3988 0038 0220     		movs	r0, #2
 3989              	.LVL361:
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3990              		.loc 1 2087 0
 3991 003a 7047     		bx	lr
 3992              		.cfi_endproc
 3993              	.LFE182:
 3995              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3996              		.align	1
 3997              		.global	HAL_LIN_SendBreak
 3998              		.syntax unified
 3999              		.thumb
 4000              		.thumb_func
 4001              		.fpu fpv5-d16
 4003              	HAL_LIN_SendBreak:
 4004              	.LFB183:
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
ARM GAS  /tmp/cc0Ep11B.s 			page 116


2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Transmits break characters.
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4005              		.loc 1 2096 0
 4006              		.cfi_startproc
 4007              		@ args = 0, pretend = 0, frame = 0
 4008              		@ frame_needed = 0, uses_anonymous_args = 0
 4009              		@ link register save eliminated.
 4010              	.LVL362:
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 4011              		.loc 1 2101 0
 4012 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 4013 0004 012B     		cmp	r3, #1
 4014 0006 12D0     		beq	.L368
 4015              		.loc 1 2101 0 is_stmt 0 discriminator 2
 4016 0008 0123     		movs	r3, #1
 4017 000a 80F86830 		strb	r3, [r0, #104]
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4018              		.loc 1 2103 0 is_stmt 1 discriminator 2
 4019 000e 2423     		movs	r3, #36
 4020 0010 80F86930 		strb	r3, [r0, #105]
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Send break characters */
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->RQR, UART_SENDBREAK_REQUEST);
 4021              		.loc 1 2106 0 discriminator 2
 4022 0014 0268     		ldr	r2, [r0]
 4023 0016 9369     		ldr	r3, [r2, #24]
 4024 0018 43F00203 		orr	r3, r3, #2
 4025 001c 9361     		str	r3, [r2, #24]
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4026              		.loc 1 2108 0 discriminator 2
 4027 001e 2023     		movs	r3, #32
 4028 0020 80F86930 		strb	r3, [r0, #105]
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4029              		.loc 1 2111 0 discriminator 2
 4030 0024 0023     		movs	r3, #0
 4031 0026 80F86830 		strb	r3, [r0, #104]
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 4032              		.loc 1 2113 0 discriminator 2
 4033 002a 1846     		mov	r0, r3
 4034              	.LVL363:
 4035 002c 7047     		bx	lr
 4036              	.LVL364:
 4037              	.L368:
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/cc0Ep11B.s 			page 117


 4038              		.loc 1 2101 0
 4039 002e 0220     		movs	r0, #2
 4040              	.LVL365:
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4041              		.loc 1 2114 0
 4042 0030 7047     		bx	lr
 4043              		.cfi_endproc
 4044              	.LFE183:
 4046              		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 4047              		.align	1
 4048              		.global	HAL_MultiProcessorEx_AddressLength_Set
 4049              		.syntax unified
 4050              		.thumb
 4051              		.thumb_func
 4052              		.fpu fpv5-d16
 4054              	HAL_MultiProcessorEx_AddressLength_Set:
 4055              	.LFB184:
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        long).
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AddressLength this parameter can be one of the following values:
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4056              		.loc 1 2130 0
 4057              		.cfi_startproc
 4058              		@ args = 0, pretend = 0, frame = 0
 4059              		@ frame_needed = 0, uses_anonymous_args = 0
 4060              	.LVL366:
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 4061              		.loc 1 2132 0
 4062 0000 B0B1     		cbz	r0, .L371
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 4063              		.loc 1 2130 0
 4064 0002 08B5     		push	{r3, lr}
 4065              	.LCFI41:
 4066              		.cfi_def_cfa_offset 8
 4067              		.cfi_offset 3, -8
 4068              		.cfi_offset 14, -4
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the address length parameter */
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cc0Ep11B.s 			page 118


 4069              		.loc 1 2140 0
 4070 0004 2423     		movs	r3, #36
 4071 0006 80F86930 		strb	r3, [r0, #105]
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 4072              		.loc 1 2143 0
 4073 000a 0268     		ldr	r2, [r0]
 4074 000c 1368     		ldr	r3, [r2]
 4075 000e 23F00103 		bic	r3, r3, #1
 4076 0012 1360     		str	r3, [r2]
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the address length */
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 4077              		.loc 1 2146 0
 4078 0014 0268     		ldr	r2, [r0]
 4079 0016 5368     		ldr	r3, [r2, #4]
 4080 0018 23F01003 		bic	r3, r3, #16
 4081 001c 1943     		orrs	r1, r1, r3
 4082              	.LVL367:
 4083 001e 5160     		str	r1, [r2, #4]
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 4084              		.loc 1 2149 0
 4085 0020 0268     		ldr	r2, [r0]
 4086 0022 1368     		ldr	r3, [r2]
 4087 0024 43F00103 		orr	r3, r3, #1
 4088 0028 1360     		str	r3, [r2]
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4089              		.loc 1 2152 0
 4090 002a FFF7FEFF 		bl	UART_CheckIdleState
 4091              	.LVL368:
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4092              		.loc 1 2153 0
 4093 002e 08BD     		pop	{r3, pc}
 4094              	.LVL369:
 4095              	.L371:
 4096              	.LCFI42:
 4097              		.cfi_def_cfa_offset 0
 4098              		.cfi_restore 3
 4099              		.cfi_restore 14
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 4100              		.loc 1 2134 0
 4101 0030 0120     		movs	r0, #1
 4102              	.LVL370:
 4103              		.loc 1 2153 0
 4104 0032 7047     		bx	lr
 4105              		.cfi_endproc
 4106              	.LFE184:
 4108              		.text
 4109              	.Letext0:
 4110              		.file 2 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_d
 4111              		.file 3 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdin
 4112              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  /tmp/cc0Ep11B.s 			page 119


 4113              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 4114              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f765xx.h"
 4115              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 4116              		.file 8 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h
 4117              		.file 9 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types
 4118              		.file 10 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/inc
 4119              		.file 11 "/home/marina/Documents/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent
 4120              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 4121              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 4122              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 4123              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 4124              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
ARM GAS  /tmp/cc0Ep11B.s 			page 120


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_uart.c
     /tmp/cc0Ep11B.s:17     .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/cc0Ep11B.s:23     .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/cc0Ep11B.s:110    .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/cc0Ep11B.s:116    .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/cc0Ep11B.s:138    .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/cc0Ep11B.s:144    .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/cc0Ep11B.s:171    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc0Ep11B.s:178    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc0Ep11B.s:192    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc0Ep11B.s:199    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc0Ep11B.s:213    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cc0Ep11B.s:220    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cc0Ep11B.s:288    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cc0Ep11B.s:295    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cc0Ep11B.s:368    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cc0Ep11B.s:375    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cc0Ep11B.s:505    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cc0Ep11B.s:512    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cc0Ep11B.s:620    .text.HAL_UART_Transmit_DMA:0000000000000084 $d
     /tmp/cc0Ep11B.s:1516   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cc0Ep11B.s:1630   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cc0Ep11B.s:1932   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cc0Ep11B.s:627    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cc0Ep11B.s:634    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cc0Ep11B.s:748    .text.HAL_UART_Receive_DMA:0000000000000090 $d
     /tmp/cc0Ep11B.s:1681   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cc0Ep11B.s:1881   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cc0Ep11B.s:755    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cc0Ep11B.s:762    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cc0Ep11B.s:841    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cc0Ep11B.s:848    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cc0Ep11B.s:933    .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cc0Ep11B.s:940    .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cc0Ep11B.s:1021   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc0Ep11B.s:1028   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc0Ep11B.s:1103   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc0Ep11B.s:1110   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc0Ep11B.s:1275   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc0Ep11B.s:1282   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc0Ep11B.s:1489   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cc0Ep11B.s:1496   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cc0Ep11B.s:1510   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cc0Ep11B.s:1567   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cc0Ep11B.s:1573   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cc0Ep11B.s:1603   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc0Ep11B.s:1610   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc0Ep11B.s:1624   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cc0Ep11B.s:1654   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc0Ep11B.s:1661   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc0Ep11B.s:1675   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc0Ep11B.s:1734   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/cc0Ep11B.s:1740   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/cc0Ep11B.s:1854   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc0Ep11B.s:1861   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc0Ep11B.s:1875   .text.UART_DMARxHalfCplt:0000000000000000 $t
ARM GAS  /tmp/cc0Ep11B.s 			page 121


     /tmp/cc0Ep11B.s:1905   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cc0Ep11B.s:1912   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cc0Ep11B.s:1926   .text.UART_DMAError:0000000000000000 $t
     /tmp/cc0Ep11B.s:2003   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cc0Ep11B.s:2010   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cc0Ep11B.s:2249   .text.HAL_UART_IRQHandler:0000000000000134 $d
     /tmp/cc0Ep11B.s:2260   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/cc0Ep11B.s:2254   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cc0Ep11B.s:2289   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cc0Ep11B.s:2296   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc0Ep11B.s:2315   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cc0Ep11B.s:2322   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cc0Ep11B.s:2344   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cc0Ep11B.s:2351   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cc0Ep11B.s:2368   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cc0Ep11B.s:2375   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cc0Ep11B.s:2472   .text.UART_SetConfig:000000000000008e $d
     /tmp/cc0Ep11B.s:2476   .text.UART_SetConfig:0000000000000092 $t
     /tmp/cc0Ep11B.s:2506   .text.UART_SetConfig:00000000000000b6 $d
     /tmp/cc0Ep11B.s:2782   .text.UART_SetConfig:0000000000000220 $d
     /tmp/cc0Ep11B.s:2804   .text.UART_SetConfig:0000000000000236 $d
     /tmp/cc0Ep11B.s:2875   .text.UART_SetConfig:000000000000028c $d
     /tmp/cc0Ep11B.s:2888   .text.UART_SetConfig:00000000000002b4 $t
     /tmp/cc0Ep11B.s:3001   .text.UART_SetConfig:0000000000000358 $d
     /tmp/cc0Ep11B.s:3006   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/cc0Ep11B.s:3013   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/cc0Ep11B.s:3136   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/cc0Ep11B.s:3143   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/cc0Ep11B.s:3212   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cc0Ep11B.s:3219   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc0Ep11B.s:3309   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cc0Ep11B.s:3316   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cc0Ep11B.s:3412   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cc0Ep11B.s:3419   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cc0Ep11B.s:3526   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cc0Ep11B.s:3533   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cc0Ep11B.s:3649   .text.HAL_RS485Ex_Init:0000000000000000 $t
     /tmp/cc0Ep11B.s:3656   .text.HAL_RS485Ex_Init:0000000000000000 HAL_RS485Ex_Init
     /tmp/cc0Ep11B.s:3773   .text.HAL_RS485Ex_Init:0000000000000084 $d
     /tmp/cc0Ep11B.s:3778   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/cc0Ep11B.s:3785   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/cc0Ep11B.s:3831   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/cc0Ep11B.s:3838   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/cc0Ep11B.s:3884   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cc0Ep11B.s:3891   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc0Ep11B.s:3940   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cc0Ep11B.s:3947   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc0Ep11B.s:3996   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cc0Ep11B.s:4003   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/cc0Ep11B.s:4047   .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 $t
     /tmp/cc0Ep11B.s:4054   .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 HAL_MultiProcessorEx_AddressLength_Set
     /tmp/cc0Ep11B.s:2519   .text.UART_SetConfig:00000000000000c3 $d
     /tmp/cc0Ep11B.s:2519   .text.UART_SetConfig:00000000000000c4 $t
     /tmp/cc0Ep11B.s:2792   .text.UART_SetConfig:0000000000000229 $d
     /tmp/cc0Ep11B.s:2792   .text.UART_SetConfig:000000000000022a $t
     /tmp/cc0Ep11B.s:2813   .text.UART_SetConfig:000000000000023f $d
     /tmp/cc0Ep11B.s:2813   .text.UART_SetConfig:0000000000000240 $t
ARM GAS  /tmp/cc0Ep11B.s 			page 122



UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_GetTick
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
